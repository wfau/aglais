#
# <meta:header>
#   <meta:licence>
#     Copyright (c) 2020, ROE (http://www.roe.ac.uk/)
#
#     This information is free software: you can redistribute it and/or modify
#     it under the terms of the GNU General Public License as published by
#     the Free Software Foundation, either version 3 of the License, or
#     (at your option) any later version.
#
#     This information is distributed in the hope that it will be useful,
#     but WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#     GNU General Public License for more details.
#
#     You should have received a copy of the GNU General Public License
#     along with this program.  If not, see <http://www.gnu.org/licenses/>.
#   </meta:licence>
# </meta:header>
#
#

# -----------------------------------------------------
# Create our cloud YAML file.
#[user@desktop]

cat > "${HOME}/clouds.yaml" << EOF

clouds:

  gaia-dev:
    auth:
      auth_url: https://cumulus.openstack.hpc.cam.ac.uk:5000/v3
      application_credential_id:     '$(secret 'zrq-gaia-dev.CREDENTIAL_ID')'
      application_credential_secret: '$(secret 'zrq-gaia-dev.CREDENTIAL_SECRET')'
    region_name: "RegionOne"
    interface: "public"
    identity_api_version: 3
    auth_type: "v3applicationcredential"

  gaia-dev-super:
    auth:
      auth_url: https://cumulus.openstack.hpc.cam.ac.uk:5000/v3
      application_credential_id:     '$(secret 'zrq-gaia-dev-super.CREDENTIAL_ID')'
      application_credential_secret: '$(secret 'zrq-gaia-dev-super.CREDENTIAL_SECRET')'
    region_name: "RegionOne"
    interface: "public"
    identity_api_version: 3
    auth_type: "v3applicationcredential"

  gaia-prod:
    auth:
      auth_url: https://cumulus.openstack.hpc.cam.ac.uk:5000/v3
      application_credential_id:     '$(secret 'zrq-gaia-prod.CREDENTIAL_ID')'
      application_credential_secret: '$(secret 'zrq-gaia-prod.CREDENTIAL_SECRET')'
    region_name: "RegionOne"
    interface: "public"
    identity_api_version: 3
    auth_type: "v3applicationcredential"

  gaia-prod-super:
    auth:
      auth_url: https://cumulus.openstack.hpc.cam.ac.uk:5000/v3
      application_credential_id:     '$(secret 'zrq-gaia-prod-super.CREDENTIAL_ID')'
      application_credential_secret: '$(secret 'zrq-gaia-prod-super.CREDENTIAL_SECRET')'
    region_name: "RegionOne"
    interface: "public"
    identity_api_version: 3
    auth_type: "v3applicationcredential"

EOF


# -----------------------------------------------------
# Install podman.
#[user@desktop]

    sudo dnf install podman

    >   ....
    >   Installed:
    >     podman-2:1.7.0-2.fc31.x86_64
    >     fuse-overlayfs-0.7.2-2.fc31.x86_64
    >     libvarlink-util-18-2.fc31.x86_64
    >     slirp4netns-0.4.0-20.1.dev.gitbbd6f25.fc31.x86_64
    >     conmon-2:2.0.2-1.fc31.x86_64
    >     containers-common-1:0.1.40-4.fc31.x86_64
    >     crun-0.10.6-1.fc31.x86_64
    >     podman-plugins-2:1.7.0-2.fc31.x86_64
    >     containernetworking-plugins-0.8.2-2.1.dev.git485be65.fc31.x86_64


# -----------------------------------------------------
# Create a container to work with.
#[user@desktop]

    podman run \
        --rm \
        --tty \
        --interactive \
        --hostname openstacker \
        --volume "${HOME}/clouds.yaml:/root/clouds.yaml" \
        atolmis/openstack-client \
        bash

    >   Trying to pull docker.io/atolmis/openstack-client...
    >   Getting image source signatures
    >   Copying blob d318c91bf2a8 done
    >   ....
    >   Copying config 95067588fa done
    >   Writing manifest to image destination
    >   Storing signatures


# -----------------------------------------------------
# Set the project and cluster names.
#[root@openstacker]

    cloudname=gaia-prod
    clustername=Augustus


# -----------------------------------------------------
# List our clusters.
#[user@openstacker]

    openstack \
        --os-cloud "${cloudname:?}" \
        coe cluster list

    >   Cloud gaia-prod was not found.


    cat /root/clouds.yaml

    >   cat: /root/clouds.yaml: Permission denied


    ls -al /root/clouds.yaml

    >   ls: cannot access '/root/clouds.yaml': Permission denied


    id

    >   uid=0(root) gid=0(root) groups=0(root)


    ls -al /root/

    >   ls: cannot access '/root/clouds.yaml': Permission denied
    >   total 36
    >   dr-xr-x---. 1 root root   22 Jan 15 00:23 .
    >   drwxr-xr-x. 1 root root    0 Jan 15 00:23 ..
    >   -rw-r--r--. 1 root root   18 Jul 27 02:32 .bash_logout
    >   -rw-r--r--. 1 root root  176 Jul 27 02:32 .bash_profile
    >   -rw-r--r--. 1 root root  176 Jul 27 02:32 .bashrc
    >   -rw-r--r--. 1 root root  100 Jul 27 02:32 .cshrc
    >   -rw-r--r--. 1 root root  129 Jul 27 02:32 .tcshrc
    >   -rw-------. 1 root root 4075 Oct 28 05:48 anaconda-ks.cfg
    >   -rw-r--r--. 1 root root 2164 Oct 28 05:48 anaconda-post-nochroot.log
    >   -rw-r--r--. 1 root root  865 Oct 28 05:48 anaconda-post.log
    >   -?????????? ? ?    ?       ?            ? clouds.yaml
    >   -rw-------. 1 root root 3710 Oct 28 05:48 original-ks.cfg

    #
    # OK, that's not looking good.
    #

    #
    # Triggered a SELinux error as well.

    >   SELinux is preventing cat from read access on the file clouds.yaml.
    >
    >   *****  Plugin catchall (100. confidence) suggests   ..
    >
    >   If you believe that cat should be allowed read access on the clouds.yaml file by default.
    >   Then you should report this as a bug.
    >   You can generate a local policy module to allow this access.
    >   Do
    >   allow this access for now by executing:
    >   # ausearch -c 'cat' --raw | audit2allow -M my-cat
    >   # semodule -X 300 -i my-cat.pp
    >
    >   Additional Information:
    >   Source Context                system_u:system_r:container_t:s0:c555,c704
    >   Target Context                unconfined_u:object_r:user_home_t:s0
    >   Target Objects                clouds.yaml [ file ]
    >   Source                        cat
    >   Source Path                   cat
    >   Port                          <Unknown>
    >   Host                          methionine
    >   Source RPM Packages
    >   Target RPM Packages
    >   Policy RPM                    selinux-policy-3.14.4-43.fc31.noarch
    >   Selinux Enabled               True
    >   Policy Type                   targeted
    >   Enforcing Mode                Enforcing
    >   Host Name                     methionine
    >   Platform                      Linux methionine 5.4.8-200.fc31.x86_64 #1 SMP Mon
    >                                 Jan 6 16:44:18 UTC 2020 x86_64 x86_64
    >   Alert Count                   1
    >   First Seen                    2020-01-15 00:33:36 GMT
    >   Last Seen                     2020-01-15 00:33:36 GMT
    >   Local ID                      64acb711-8f67-4c74-8744-d45dfb6f5838
    >
    >   Raw Audit Messages
    >   type=AVC msg=audit(1579048416.346:2276): avc:  denied  { read } for  pid=1246489 comm="cat" name="clouds.yaml" dev="dm-0" ino=6997698 scontext=system_u:system_r:container_t:s0:c555,c704 tcontext=unconfined_u:object_r:user_home_t:s0 tclass=file permissive=0
    >
    >   Hash: cat,container_t,user_home_t,file,read

    #
    # Running containers on desktop is blursed :-(
    #

    #
    # Podman 1.4.4: permission denied mounting volume
    # https://github.com/containers/libpod/issues/3683


# -----------------------------------------------------
# Create a temp directory to work with.
#[user@desktop]

    tempdir=$(mktemp -d)

    cp "${HOME}/clouds.yaml" "${tempdir:?}"

    ls -alZ "${tempdir:?}"

    >   ...
    >   -rw-rw-r--.  1 Zarquan Zarquan unconfined_u:object_r:user_tmp_t:s0 1448 Jan 15 01:06 clouds.yaml


# -----------------------------------------------------
# Create a container to work with.
#[user@desktop]

    podman run \
        --rm \
        --tty \
        --interactive \
        --hostname openstacker \
        --volume "${tempdir:?}/clouds.yaml:/root/clouds.yaml" \
        atolmis/openstack-client \
        bash


# -----------------------------------------------------
# Check we can read the clouds.yaml file.
# [root@openstacker]

    cat /root/clouds.yaml

    >   clouds:
    >     gaia-dev:
    >       auth:
    >         auth_url: https://cumulus.openstack.hpc.cam.ac.uk:5000/v3
    >         application_credential_id:     '597b########################0917'
    >         application_credential_secret: 'Voh7###########################8eng'
    >       region_name: "RegionOne"
    >       interface: "public"
    >       identity_api_version: 3
    >       auth_type: "v3applicationcredential"
    >       ....
    >       ....

    #
    # Ok, so the problem is SELinux protecting our home directory.
    #


# -----------------------------------------------------
# Try using the file in our HOME directory, with the 'z' flag.
#[user@desktop]

    podman run \
        --rm \
        --tty \
        --interactive \
        --hostname openstacker \
        --volume "${HOME}/clouds.yaml:/root/clouds.yaml:z" \
        atolmis/openstack-client \
        bash


# -----------------------------------------------------
# Check we can read the clouds.yaml file.
# [root@openstacker]

    cat /root/clouds.yaml

    >   clouds:
    >     gaia-dev:
    >       auth:
    >         auth_url: https://cumulus.openstack.hpc.cam.ac.uk:5000/v3
    >         application_credential_id:     '597b########################0917'
    >         application_credential_secret: 'Voh7###########################8eng'
    >       region_name: "RegionOne"
    >       interface: "public"
    >       identity_api_version: 3
    >       auth_type: "v3applicationcredential"
    >       ....
    >       ....


    ls -al /root/clouds.yaml

    >   -rw-rw-r--. 1 root root 1448 Jan 14 23:29 /root/clouds.yaml

    #
    # That fixed the user and group names too.

    Original listing was :

    >   -?????????? ? ?    ?       ?            ? clouds.yaml


# -----------------------------------------------------
# Check the the file in our home directory.
# (2nd terminal, while the container is running)
#[user@desktop]

    ls -alZ "${HOME}/clouds.yaml"

    >   -rw-rw-r--. 1 Zarquan Zarquan system_u:object_r:container_file_t:s0 1448 Jan 14 23:29 /home/Zarquan/clouds.yaml


# -----------------------------------------------------
# Check the the file in our home directory.
# (2nd terminal, after the container is stopped)
#[user@desktop]

    ls -alZ "${HOME}/clouds.yaml"

    >   -rw-rw-r--. 1 Zarquan Zarquan system_u:object_r:container_file_t:s0 1448 Jan 14 23:29 /home/Zarquan/clouds.yaml

    #
    # OK, so the re-labelling is permanent.
    #


# -----------------------------------------------------
# Try using the file in our HOME directory, with the 'Z' flag.
#[user@desktop]

    podman run \
        --rm \
        --tty \
        --interactive \
        --hostname openstacker \
        --volume "${HOME}/clouds.yaml:/root/clouds.yaml:Z" \
        atolmis/openstack-client \
        bash


# -----------------------------------------------------
# Check the the file in our home directory.
# (2nd terminal, while the container is running)
#[user@desktop]

    ls -alZ "${HOME}/clouds.yaml"

    >   -rw-rw-r--. 1 Zarquan Zarquan system_u:object_r:container_file_t:s0:c269,c546 1448 Jan 14 23:29 /home/Zarquan/clouds.yaml

    # So now the SELinux context specifies the specific container cgroups.

    'z' any container
    system_u:object_r:container_file_t:s0

    'Z' specific container
    system_u:object_r:container_file_t:s0:c269,c546


# -----------------------------------------------------
# Create a container to work with.
#[user@desktop]

    podman run \
        --rm \
        --tty \
        --interactive \
        --hostname openstacker \
        --volume "${HOME}/clouds.yaml:/root/clouds.yaml:z" \
        atolmis/openstack-client \
        bash


# -----------------------------------------------------
# Set the cloud name.
#[user@openstacker]

    cloudname=gaia-prod


# -----------------------------------------------------
# List our servers.
#[user@openstacker]

        openstack \
            --os-cloud "${cloudname:?}" \
            server list


    >   Cloud gaia-prod was not found.


# -----------------------------------------------------
# Check our config file.
#[user@openstacker]

    cat /root/clouds.yaml

    >   clouds:
    >     gaia-dev:
    >       auth:
    >         auth_url: https://cumulus.openstack.hpc.cam.ac.uk:5000/v3
    >         application_credential_id:     '....'
    >         application_credential_secret: '....'
    >       region_name: "RegionOne"
    >       interface: "public"
    >       identity_api_version: 3
    >       auth_type: "v3applicationcredential"
    >       ....
    >       ....


    ls -alZ /root/clouds.yaml

    >   -rw-rw-r--. 1 root root system_u:object_r:container_file_t:s0:c269,c546 1448 Jan 14 23:29 /root/clouds.yaml


    ls -alZ ~/clouds.yaml

    >   -rw-rw-r--. 1 root root system_u:object_r:container_file_t:s0:c269,c546 1448 Jan 14 23:29 /root/clouds.yaml



# -----------------------------------------------------
# Try a different name.
#[user@openstacker]

    cloudname=gaia-dev


# -----------------------------------------------------
# List our servers.
#[user@openstacker]

    openstack \
        --os-cloud "${cloudname:?}" \
        server list

    >   Cloud gaia-dev was not found.

    #
    # Burph
    #

    openstack \
        --verbose \
        --verbose \
        --os-cloud "${cloudname:?}" \
        server list


    >   START with options: --verbose --verbose --os-cloud gaia-dev server list
    >   options: Namespace(access_token='***', access_token_endpoint='', access_token_type='', application_credential_id='', application_credential_name='', application_credential_secret='***', auth_type='', auth_url='', cacert=None, cert='', client_id='', client_secret='***', cloud='gaia-dev', code='', debug=False, default_domain='default', default_domain_id='', default_domain_name='', deferred_help=False, discovery_endpoint='', domain_id='', domain_name='', endpoint='', identity_provider='', insecure=None, interface='public', key='', log_file=None, openid_scope='', os_beta_command=False, os_compute_api_version='', os_container_infra_api_version='1', os_identity_api_version='', os_image_api_version='', os_loadbalancer_api_version='2.0', os_network_api_version='', os_object_api_version='', os_orchestration_api_version='1', os_project_id=None, os_project_name=None, os_volume_api_version='', passcode='', password='***', project_domain_id='', project_domain_name='', project_id='', project_name='', protocol='', redirect_uri='', region_name='', remote_project_domain_id='', remote_project_domain_name='', remote_project_id='', remote_project_name='', service_provider='', system_scope='', timing=False, token='***', trust_id='', url='', user_domain_id='', user_domain_name='', user_id='', username='', verbose_level=3, verify=None)
    >   Cloud gaia-dev was not found.
    >   END return value: 1


    #
    # Wrong location to put the clouds.yaml file.
    # https://docs.openstack.org/python-openstackclient/pike/configuration/index.html#configuration-files

    Should be one of:

        * current directory
        * ~/.config/openstack
        * /etc/openstack

# -----------------------------------------------------
# Create a container to work with.
#[user@desktop]

    podman run \
        --rm \
        --tty \
        --interactive \
        --hostname openstacker \
        --volume "${HOME}/clouds.yaml:/etc/openstack/clouds.yaml:z" \
        atolmis/openstack-client \
        bash


# -----------------------------------------------------
# Set the cloud name.
#[user@openstacker]

    cloudname=gaia-prod


# -----------------------------------------------------
# List our servers.
#[user@openstacker]

        openstack \
            --os-cloud "${cloudname:?}" \
            server list


    >   +--------------------------------------+--------------------------------+--------+-------------------+-------------------------+------------------+
    >   | ID                                   | Name                           | Status | Networks          | Image                   | Flavor           |
    >   +--------------------------------------+--------------------------------+--------+-------------------+-------------------------+------------------+
    >   | 04e61f49-2a91-49a0-b2b3-2afe7f48c492 | augustus-vwab7fqj6ofy-node-4   | ACTIVE | private=10.0.0.29 | FedoraAtomic29-20191028 | general.v1.small |
    >   | c318fcc4-111d-45d8-9083-ef8d283eac4c | augustus-vwab7fqj6ofy-node-3   | ACTIVE | private=10.0.0.14 | FedoraAtomic29-20191028 | general.v1.small |
    >   | 98686fd0-62ff-41c8-9323-5705e4f63f0a | augustus-vwab7fqj6ofy-node-6   | ACTIVE | private=10.0.0.7  | FedoraAtomic29-20191028 | general.v1.small |
    >   | b73e8eef-99ef-417e-9fb3-2d5846eac4b0 | augustus-vwab7fqj6ofy-node-5   | ACTIVE | private=10.0.0.16 | FedoraAtomic29-20191028 | general.v1.small |
    >   | f377d7fa-cc9e-455b-b2ac-acd01ce72e8f | augustus-vwab7fqj6ofy-node-2   | ACTIVE | private=10.0.0.4  | FedoraAtomic29-20191028 | general.v1.small |
    >   | 72b5990b-a948-4f35-8deb-e22d01253100 | augustus-vwab7fqj6ofy-node-1   | ACTIVE | private=10.0.0.8  | FedoraAtomic29-20191028 | general.v1.small |
    >   | 2d0531e8-7fc3-43a9-8eb8-10769555c184 | augustus-vwab7fqj6ofy-master-0 | ACTIVE | private=10.0.0.5  | FedoraAtomic29-20191028 | general.v1.small |
    >   | 4b76c139-ed48-4ba9-8d5c-c537842f702d | augustus-vwab7fqj6ofy-master-1 | ACTIVE | private=10.0.0.19 | FedoraAtomic29-20191028 | general.v1.small |
    >   +--------------------------------------+--------------------------------+--------+-------------------+-------------------------+------------------+


