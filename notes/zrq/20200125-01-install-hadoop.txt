#
# <meta:header>
#   <meta:licence>
#     Copyright (c) 2020, ROE (http://www.roe.ac.uk/)
#
#     This information is free software: you can redistribute it and/or modify
#     it under the terms of the GNU General Public License as published by
#     the Free Software Foundation, either version 3 of the License, or
#     (at your option) any later version.
#
#     This information is distributed in the hope that it will be useful,
#     but WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#     GNU General Public License for more details.
#
#     You should have received a copy of the GNU General Public License
#     along with this program.  If not, see <http://www.gnu.org/licenses/>.
#   </meta:licence>
# </meta:header>
#
#

    Plan

    Install Java
    Install Hadoop
    Install Spark without Hadoop
    Configure Spark to use YARN
    Configure Spark to use S3

    Note - at the moment our worker nodes have no local storage.


# -----------------------------------------------------
# Create our cloud config file.
#[user@desktop]

    #
    # See 20200114-03-podman-volume.txt
    #

# -----------------------------------------------------
# Allow podman container to use the SSH authentication socket on our desktop.
# https://osric.com/chris/accidental-developer/2017/11/selinux-audit2why-audit2allow-policy-files/
# https://stackoverflow.com/a/52326925
#[user@desktop]

    #
    # See 20200222-01-ansible-deploy.txt
    #

# -----------------------------------------------------
# Create a container to work with.
# https://podman.readthedocs.io/en/latest/markdown/podman-run.1.html
#[user@desktop]

    source "${HOME}/aglais.settings"

    podman run \
        --rm \
        --tty \
        --interactive \
        --hostname ansibler \
        --env SSH_AUTH_SOCK=/mnt/ssh_auth_sock \
        --volume "${SSH_AUTH_SOCK}:/mnt/ssh_auth_sock:rw,z" \
        --volume "${HOME}/clouds.yaml:/etc/openstack/clouds.yaml:ro,z" \
        --volume "${AGLAIS_CODE:?}/experiments/zrq/ansible:/mnt/ansible:ro,z" \
        atolmis/ansible-client:latest \
        bash


# -----------------------------------------------------
# Create our Ansible include vars file.
#[root@ansibler]

    cat > /tmp/ansible-vars.yml << EOF

buildtag:  'aglais-$(date '+%Y%m%d')'
cloudname: 'gaia-prod'

EOF


# -----------------------------------------------------
# Run our playbooks from the /mnt/ansible directory.
# Needed to pick up the 'ansible.cfg' config file.
# https://docs.ansible.com/ansible/latest/reference_appendices/config.html#the-configuration-file
#[root@ansibler]

    cd /mnt/ansible


# -----------------------------------------------------
# Create our gateway, master and worker instances.
#[root@ansibler]

    ansible-playbook \
        --inventory "hosts.yml" \
        "combined-01.yml"

    >   ....
    >   ....
    >   PLAY RECAP ..
    >   gateway                    : ok=1    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0
    >   localhost                  : ok=26   changed=24   unreachable=0    failed=0    skipped=0    rescued=0    ignored=0
    >   master01                   : ok=1    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0
    >   master02                   : ok=1    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0
    >   worker01                   : ok=1    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0
    >   worker02                   : ok=1    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0
    >   worker03                   : ok=1    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0
    >   worker04                   : ok=1    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0


# -----------------------------------------------------
# Install Java on the master and worker nodes.
#[root@ansibler]

    ansible-playbook \
        --inventory "hosts.yml" \
        "10-install-java.yml"

    >   ....
    >   TASK [Install the Java runtime] ..
    >   fatal: [worker02]: FAILED! => {"ansible_facts": {"discovered_interpreter_python": "/usr/bin/python3"}, "changed": false, "msg": "Failed to download packages: Curl error (16): Error in the HTTP2 framing layer for https://mirrors.fedoraproject.org/metalink?repo=updates-released-f30&arch=x86_64 []", "results": []}
    >   ....
    >   
    >   PLAY RECAP ..
    >   master01                   : ok=1    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0
    >   master02                   : ok=1    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0
    >   worker01                   : ok=1    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0
    >   worker02                   : ok=0    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0
    >   worker03                   : ok=1    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0
    >   worker04                   : ok=1    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0

    #
    # Download error on one node.
    # Try again ..
    #

    >   ....
    >   TASK [Install the Java runtime] ..
    >   ....
    >   changed: [worker02]
    >   
    >   PLAY RECAP ..
    >   master01                   : ok=1    changed=0    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0
    >   master02                   : ok=1    changed=0    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0
    >   worker01                   : ok=1    changed=0    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0
    >   worker02                   : ok=1    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0
    >   worker03                   : ok=1    changed=0    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0
    >   worker04                   : ok=1    changed=0    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0


# -----------------------------------------------------
# Install Hadoop on the master and worker nodes.
#[root@ansibler]

    ansible-playbook \
        --inventory "hosts.yml" \
        "11-install-hadoop.yml"

    >   ....
    >   TASK [Download and unpack the Hadoop tar gzip file.] ..
    >   ....
    >   
    >   TASK [Create a symbolic link] ..
    >   ....
    >   
    >   TASK [Add hadoop/bin to the PATH.] ..
    >   ....
    >   
    >   PLAY RECAP ..
    >   master01                   : ok=3    changed=3    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0
    >   master02                   : ok=3    changed=3    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0
    >   worker01                   : ok=3    changed=3    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0
    >   worker02                   : ok=3    changed=3    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0
    >   worker03                   : ok=3    changed=3    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0
    >   worker04                   : ok=3    changed=3    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0


# -----------------------------------------------------
# Configure Hadoop on the master and worker nodes.
# TODO This will probably become part of install-hadoop.
# TODO This installs the same config on masters and workers.
#[root@ansibler]

    ansible-playbook \
        --inventory "hosts.yml" \
        "12-config-hadoop.yml"

    >   ....
    >   PLAY [Configure Hadoop] ..
    >   
    >   TASK [Create '/var/local/hadoop/namenode/names'] ..
    >   ....
    >   
    >   TASK [Create '/var/local/hadoop/namenode/data'] ..
    >   ....
    >   
    >   TASK [Configure 'core-site.xml'] ..
    >   ....
    >   
    >   TASK [Configure 'hdfs-site.xml'] ..
    >   ....
    >   
    >   TASK [Configure 'mapred-site.xml'] ..
    >   ....
    >   
    >   TASK [Configure 'yarn-site.xml'] ..
    >   ....
    >   
    >   TASK [Configure 'workers'] ..
    >   ....
    >   
    >   PLAY RECAP ..
    >   master01                   : ok=7    changed=7    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0
    >   master02                   : ok=7    changed=7    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0
    >   worker01                   : ok=7    changed=7    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0
    >   worker02                   : ok=7    changed=7    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0
    >   worker03                   : ok=7    changed=7    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0
    >   worker04                   : ok=7    changed=7    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0
    >   ....


