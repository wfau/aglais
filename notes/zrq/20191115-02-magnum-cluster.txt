#
# <meta:header>
#   <meta:licence>
#     Copyright (c) 2019, ROE (http://www.roe.ac.uk/)
#
#     This information is free software: you can redistribute it and/or modify
#     it under the terms of the GNU General Public License as published by
#     the Free Software Foundation, either version 3 of the License, or
#     (at your option) any later version.
#
#     This information is distributed in the hope that it will be useful,
#     but WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#     GNU General Public License for more details.
#
#     You should have received a copy of the GNU General Public License
#     along with this program.  If not, see <http://www.gnu.org/licenses/>.
#   </meta:licence>
# </meta:header>
#
#


# -----------------------------------------------------
# Create our cloud YAML file.
# https://docs.openstack.org/python-openstackclient/latest/configuration/index.html#clouds-yaml
# https://docs.openstack.org/keystone/queens/user/application_credentials.html
# https://cumulus.openstack.hpc.cam.ac.uk/identity/application_credentials/
#[user@desktop]

    # clouds.yaml is a configuration file that contains everything needed to connect to one or more clouds.
    # It may contain private information and is generally considered private to a user.

cat > "${HOME}/cumulus.yaml" << EOF

clouds:
  cumulus:
    auth_url: 'https://cumulus.openstack.hpc.cam.ac.uk:5000/v3'
    auth_type: 'v3applicationcredential'
    application_credential_id: '$(secret 'cumulus.cam.ac.uk.CREDENTIAL_ID')'
    application_credential_secret: '$(secret 'cumulus.cam.ac.uk.CREDENTIAL_SECRET')'
    region_name: 'RegionOne'
    interface: 'public'
    identity_api_version: 3

EOF


# -----------------------------------------------------
# Create a container to work with.
#[user@desktop]

    docker run \
        --rm \
        --tty \
        --user "$(id -u)" \
        --interactive \
        --hostname openstacker \
        --env SSH_AUTH_SOCK=/tmp/ssh_auth_sock \
        --volume "${SSH_AUTH_SOCK}:/tmp/ssh_auth_sock" \
        --volume "${HOME}/cumulus.yaml:/etc/openstack/clouds.yaml" \
        --volume "${HOME}/.ssh/cumulus.cam.ac.uk.rsa:/tmp/cumulus.cam.ac.uk.rsa" \
        --volume "${HOME}/.ssh/cumulus.cam.ac.uk.rsa.pub:/tmp/cumulus.cam.ac.uk.rsa.pub" \
        atolmis/openstack-client \
        bash


# -----------------------------------------------------
# List our servers.
#[user@openstacker]

    openstack \
        --os-cloud cumulus \
            server list

    >   +--------------------------------------+---------------------+--------+---------------------------------------------+---------------+------------------+
    >   | ID                                   | Name                | Status | Networks                                    | Image         | Flavor           |
    >   +--------------------------------------+---------------------+--------+---------------------------------------------+---------------+------------------+
    >   | 3650f871-8dd4-4f5a-b801-dced3a6afb18 | stv-aglais-worker-2 | ACTIVE | stv-aglais-network=10.0.0.23                | Fedora-30-1.2 | general.v1.large |
    >   | 7641988a-e49a-4626-9641-0375efac3b43 | stv-aglais-worker-1 | ACTIVE | stv-aglais-network=10.0.0.12                | Fedora-30-1.2 | general.v1.large |
    >   | f0b5a11c-d6cf-46cf-a1d3-c192b78d989c | stv-aglais-worker-3 | ACTIVE | stv-aglais-network=10.0.0.9                 | Fedora-30-1.2 | general.v1.large |
    >   | d6108496-1d7f-4c40-84b1-06a25de20f25 | stv-aglais-master   | ACTIVE | stv-aglais-network=10.0.0.14                |               | general.v1.large |
    >   | 2766482a-7096-4703-a042-5c479192f072 | stv-aglais-bastion  | ACTIVE | stv-aglais-network=10.0.0.8, 128.232.224.71 | CentOS7-1907  | general.v1.tiny  |
    >   +--------------------------------------+---------------------+--------+---------------------------------------------+---------------+------------------+


# -----------------------------------------------------
# List our servers by ID.
#[user@openstacker]

    openstack \
        --os-cloud cumulus \
            server list \
                --format json \
        | jq -r '.[] | .ID'

    >   3650f871-8dd4-4f5a-b801-dced3a6afb18
    >   7641988a-e49a-4626-9641-0375efac3b43
    >   f0b5a11c-d6cf-46cf-a1d3-c192b78d989c
    >   d6108496-1d7f-4c40-84b1-06a25de20f25
    >   2766482a-7096-4703-a042-5c479192f072


# -----------------------------------------------------
# List our servers by name.
#[user@openstacker]

    openstack \
        --os-cloud cumulus \
            server list \
                --format json \
        | jq -r '.[] | .Name'

    >   stv-aglais-worker-2
    >   stv-aglais-worker-1
    >   stv-aglais-worker-3
    >   stv-aglais-master
    >   stv-aglais-bastion


# -----------------------------------------------------
# List our networks.
#[user@openstacker]

    openstack \
        --os-cloud cumulus \
            network list

    >   +--------------------------------------+--------------------+----------------------------------------------------------------------------+
    >   | ID                                   | Name               | Subnets                                                                    |
    >   +--------------------------------------+--------------------+----------------------------------------------------------------------------+
    >   | 1a17cdb6-23dc-4f17-b7e4-d7f316bb560f | stv-aglais-network | a45354a2-a6de-4d25-8a6b-90dbda3a24e0                                       |
    >   | a929e8db-1bf4-4a5f-a80c-fabd39d06a26 | internet           | 180dc961-c52f-461a-b241-8f7a30d022a5, 273123bb-70f6-4f51-a406-7fc4b446532d |
    >   | ecb791d5-1022-447a-a79c-8f38a0f5c990 | cumulus-internal   | 01b76c7c-3c1a-4c5c-9a5a-14bcf6c0c290                                       |
    >   +--------------------------------------+--------------------+----------------------------------------------------------------------------+


# -----------------------------------------------------
# List our routers.
#[user@openstacker]

    openstack \
        --os-cloud cumulus \
            router list

    >   +--------------------------------------+-------------------+--------+-------+-------------+-------+----------------------------------+
    >   | ID                                   | Name              | Status | State | Distributed | HA    | Project                          |
    >   +--------------------------------------+-------------------+--------+-------+-------------+-------+----------------------------------+
    >   | 9dd1eef8-715c-435e-86a1-553a15104266 | stv-aglais-router | ACTIVE | UP    | False       | False | 08e24c6d87f94740aa59c172462ed927 |
    >   +--------------------------------------+-------------------+--------+-------+-------------+-------+----------------------------------+


# -----------------------------------------------------
# List our floating IP addresses.
#[user@openstacker]

    openstack \
        --os-cloud cumulus \
            floating ip list

    >   +--------------------------------------+---------------------+------------------+--------------------------------------+--------------------------------------+----------------------------------+
    >   | ID                                   | Floating IP Address | Fixed IP Address | Port                                 | Floating Network                     | Project                          |
    >   +--------------------------------------+---------------------+------------------+--------------------------------------+--------------------------------------+----------------------------------+
    >   | fc59b54b-c953-45b5-a703-35dcb2687c1a | 128.232.224.71      | 10.0.0.8         | e0f75599-8acb-49b4-bc0d-9037f8f922dc | a929e8db-1bf4-4a5f-a80c-fabd39d06a26 | 08e24c6d87f94740aa59c172462ed927 |
    >   +--------------------------------------+---------------------+------------------+--------------------------------------+--------------------------------------+----------------------------------+


# -----------------------------------------------------
# List our security groups.
#[user@openstacker]

    openstack \
        --os-cloud cumulus \
            security group list

    >   +--------------------------------------+--------------------+------------------------+----------------------------------+
    >   | ID                                   | Name               | Description            | Project                          |
    >   +--------------------------------------+--------------------+------------------------+----------------------------------+
    >   | 5916fddd-456f-4b8d-9233-d347f14caba8 | external-bastion   |                        | 08e24c6d87f94740aa59c172462ed927 |
    >   | 717c1f2c-5dfd-46a7-a170-1f23af896923 | internal-bastion   |                        | 08e24c6d87f94740aa59c172462ed927 |
    >   | 872cf45c-6375-439f-9c4c-6137d341b504 | aglais-workers     |                        | 08e24c6d87f94740aa59c172462ed927 |
    >   | a7cdc237-de58-44d6-a281-d94696b84940 | internal-webserver |                        | 08e24c6d87f94740aa59c172462ed927 |
    >   | ba0a5d12-bb42-4a88-87ca-967a66307110 | aglais-master      |                        | 08e24c6d87f94740aa59c172462ed927 |
    >   | d917cfec-af58-4ee0-8730-62867d79a323 | default            | Default security group | 08e24c6d87f94740aa59c172462ed927 |
    >   +--------------------------------------+--------------------+------------------------+----------------------------------+


# -----------------------------------------------------
# -----------------------------------------------------
# Add the Magnum client to our openstack client container.
#[user@desktop]

    source "${HOME}/atolmis.settings"
    pushd "${ATOLMIS_CODE:?}"

        gedit docker/openstack-client/Dockerfile &

            RUN dnf install -y python3-openstackclient
        +   RUN dnf install -y python3-magnumclient

    popd


# -----------------------------------------------------
# Build our containers.
#[user@desktop]

    source "${HOME}/atolmis.settings"
    pushd "${ATOLMIS_CODE:?}"

        buildtag=$(date '+%Y.%m.%d')
        buildtime=$(date '+%Y-%m-%dT%H:%M:%S')

        docker build \
            --build-arg "buildtag=${buildtag:?}" \
            --build-arg "buildtime=${buildtime:?}" \
            --tag atolmis/fedora:latest \
            --tag atolmis/fedora:${buildtag:?} \
            docker/fedora

        docker build \
            --build-arg "buildtag=${buildtag:?}" \
            --build-arg "buildtime=${buildtime:?}" \
            --tag atolmis/openssh-client:latest \
            --tag atolmis/openssh-client:${buildtag:?} \
            docker/openssh-client

        docker build \
            --build-arg "buildtag=${buildtag:?}" \
            --build-arg "buildtime=${buildtime:?}" \
            --tag atolmis/openstack-client:latest \
            --tag atolmis/openstack-client:${buildtag:?} \
            docker/openstack-client

        docker build \
            --build-arg "buildtag=${buildtag:?}" \
            --build-arg "buildtime=${buildtime:?}" \
            --tag atolmis/ansible-client:latest \
            --tag atolmis/ansible-client:${buildtag:?} \
            docker/ansible-client

        docker build \
            --build-arg "buildtag=${buildtag:?}" \
            --build-arg "buildtime=${buildtime:?}" \
            --tag atolmis/java:latest \
            --tag atolmis/java:${buildtag:?} \
            docker/java

        docker build \
            --build-arg "buildtag=${buildtag:?}" \
            --build-arg "buildtime=${buildtime:?}" \
            --tag atolmis/kafka:latest \
            --tag atolmis/kafka:${buildtag:?} \
            docker/kafka

    popd


# -----------------------------------------------------
# Create a container to work with.
#[user@desktop]

    docker run \
        --rm \
        --tty \
        --user "$(id -u)" \
        --interactive \
        --hostname openstacker \
        --env SSH_AUTH_SOCK=/tmp/ssh_auth_sock \
        --volume "${SSH_AUTH_SOCK}:/tmp/ssh_auth_sock" \
        --volume "${HOME}/cumulus.yaml:/etc/openstack/clouds.yaml" \
        --volume "${HOME}/.ssh/cumulus.cam.ac.uk.rsa:/tmp/cumulus.cam.ac.uk.rsa" \
        --volume "${HOME}/.ssh/cumulus.cam.ac.uk.rsa.pub:/tmp/cumulus.cam.ac.uk.rsa.pub" \
        atolmis/openstack-client \
        bash


# -----------------------------------------------------
# List our servers.
#[user@openstacker]

    openstack \
        --os-cloud cumulus \
            server list

    >   +--------------------------------------+---------------------+--------+---------------------------------------------+---------------+------------------+
    >   | ID                                   | Name                | Status | Networks                                    | Image         | Flavor           |
    >   +--------------------------------------+---------------------+--------+---------------------------------------------+---------------+------------------+
    >   | 3650f871-8dd4-4f5a-b801-dced3a6afb18 | stv-aglais-worker-2 | ACTIVE | stv-aglais-network=10.0.0.23                | Fedora-30-1.2 | general.v1.large |
    >   | 7641988a-e49a-4626-9641-0375efac3b43 | stv-aglais-worker-1 | ACTIVE | stv-aglais-network=10.0.0.12                | Fedora-30-1.2 | general.v1.large |
    >   | f0b5a11c-d6cf-46cf-a1d3-c192b78d989c | stv-aglais-worker-3 | ACTIVE | stv-aglais-network=10.0.0.9                 | Fedora-30-1.2 | general.v1.large |
    >   | d6108496-1d7f-4c40-84b1-06a25de20f25 | stv-aglais-master   | ACTIVE | stv-aglais-network=10.0.0.14                |               | general.v1.large |
    >   | 2766482a-7096-4703-a042-5c479192f072 | stv-aglais-bastion  | ACTIVE | stv-aglais-network=10.0.0.8, 128.232.224.71 | CentOS7-1907  | general.v1.tiny  |
    >   +--------------------------------------+---------------------+--------+---------------------------------------------+---------------+------------------+


# -----------------------------------------------------
# List our clusters.
#[user@openstacker]

    magnum \
        --os-cloud cumulus \
            cluster-list

    >   ERROR: b
    >       "
    >       Invalid input for field 'identity/password/user/password':
    >       None is not of type 'string'
    >           Failed validating 'type' in schema['properties']['identity']['properties']['password']['properties']['user']['properties']['password']:
    >           {
    >           'type': 'string'
    >           }
    >       On instance['identity']['password']['user']['password']:
    >       None (HTTP 400) (Request-ID: req-90179ea0-a933-4073-bd90-86dcbdbb0a48)
    >       "


# -----------------------------------------------------
# -----------------------------------------------------
# Logout and try with environment variables instead.
# Configure our OpenStack settings.
# https://docs.openstack.org/keystone/queens/user/application_credentials.html
# https://cumulus.openstack.hpc.cam.ac.uk/identity/application_credentials/
#[user@desktop]

        cat > "${HOME}/cumulus.settings" << EOF

export OS_AUTH_TYPE=v3applicationcredential
export OS_AUTH_URL=https://cumulus.openstack.hpc.cam.ac.uk:5000/v3
export OS_IDENTITY_API_VERSION=3
export OS_REGION_NAME=RegionOne
export OS_INTERFACE=public
export OS_APPLICATION_CREDENTIAL_ID=$(secret 'cumulus.cam.ac.uk.CREDENTIAL_ID')
export OS_APPLICATION_CREDENTIAL_SECRET=$(secret 'cumulus.cam.ac.uk.CREDENTIAL_SECRET')

EOF


# -----------------------------------------------------
# Create a container to work with.
#[user@desktop]

    docker run \
        --rm \
        --tty \
        --user "$(id -u)" \
        --interactive \
        --hostname openstacker \
        --env SSH_AUTH_SOCK=/tmp/ssh_auth_sock \
        --volume "${SSH_AUTH_SOCK}:/tmp/ssh_auth_sock" \
        --volume "${HOME}/cumulus.yaml:/etc/openstack/clouds.yaml" \
        --volume "${HOME}/cumulus.settings:/etc/openstack/cumulus.settings" \
        --volume "${HOME}/.ssh/cumulus.cam.ac.uk.rsa:/tmp/cumulus.cam.ac.uk.rsa" \
        --volume "${HOME}/.ssh/cumulus.cam.ac.uk.rsa.pub:/tmp/cumulus.cam.ac.uk.rsa.pub" \
        atolmis/openstack-client \
        bash


# -----------------------------------------------------
# Load our settings.
#[user@openstacker]

    source '/etc/openstack/cumulus.settings'


# -----------------------------------------------------
# List our clusters, using --os-cloud.
#[user@openstacker]

    magnum \
        --os-cloud cumulus \
            cluster-list

    >   ERROR: b
    >       "
    >       Invalid input for field 'identity/password/user/password':
    >       None is not of type 'string'
    >           Failed validating 'type' in schema['properties']['identity']['properties']['password']['properties']['user']['properties']['password']:
    >           {
    >           'type': 'string'
    >           }
    >       On instance['identity']['password']['user']['password']:
    >       None (HTTP 400) (Request-ID: req-6cccc206-7c9a-400a-84da-a95c91df51c6)
    >       "


# -----------------------------------------------------
# List our clusters, without --os-cloud.
#[user@openstacker]

    magnum \
        cluster-list

    >   ERROR: b'You must provide a username via either --os-username or via env[OS_USERNAME]'


# -----------------------------------------------------
# Explicitly set username and password
#[user@openstacker]

    export OS_USERNAME="yrvafhom@gmail.com"

    magnum \
        cluster-list

    >   ERROR: b'You must provide a password via either --os-password, env[OS_PASSWORD], or prompted response'

    # Federated login, so we don't have a local password.

# -----------------------------------------------------
# List our clusters, using --os-cloud.
#[user@openstacker]

    magnum \
        -v -v \
        --os-cloud cumulus \
            cluster-list

    >   DEBUG (extension:189) found extension EntryPoint.parse('token_endpoint = openstackclient.api.auth_plugin:TokenEndpoint')
    >   DEBUG (extension:189) found extension EntryPoint.parse('noauth = cinderclient.contrib.noauth:CinderNoAuthLoader')
    >   DEBUG (extension:189) found extension EntryPoint.parse('admin_token = keystoneauth1.loading._plugins.admin_token:AdminToken')
    >   DEBUG (extension:189) found extension EntryPoint.parse('none = keystoneauth1.loading._plugins.noauth:NoAuth')
    >   DEBUG (extension:189) found extension EntryPoint.parse('password = keystoneauth1.loading._plugins.identity.generic:Password')
    >   DEBUG (extension:189) found extension EntryPoint.parse('token = keystoneauth1.loading._plugins.identity.generic:Token')
    >   DEBUG (extension:189) found extension EntryPoint.parse('v2password = keystoneauth1.loading._plugins.identity.v2:Password')
    >   DEBUG (extension:189) found extension EntryPoint.parse('v2token = keystoneauth1.loading._plugins.identity.v2:Token')
    >   DEBUG (extension:189) found extension EntryPoint.parse('v3adfspassword = keystoneauth1.extras._saml2._loading:ADFSPassword')
    >   DEBUG (extension:189) found extension EntryPoint.parse('v3applicationcredential = keystoneauth1.loading._plugins.identity.v3:ApplicationCredential')
    >   DEBUG (extension:189) found extension EntryPoint.parse('v3fedkerb = keystoneauth1.extras.kerberos._loading:MappedKerberos')
    >   DEBUG (extension:189) found extension EntryPoint.parse('v3kerberos = keystoneauth1.extras.kerberos._loading:Kerberos')
    >   DEBUG (extension:189) found extension EntryPoint.parse('v3oauth1 = keystoneauth1.extras.oauth1._loading:V3OAuth1')
    >   DEBUG (extension:189) found extension EntryPoint.parse('v3oidcaccesstoken = keystoneauth1.loading._plugins.identity.v3:OpenIDConnectAccessToken')
    >   DEBUG (extension:189) found extension EntryPoint.parse('v3oidcauthcode = keystoneauth1.loading._plugins.identity.v3:OpenIDConnectAuthorizationCode')
    >   DEBUG (extension:189) found extension EntryPoint.parse('v3oidcclientcredentials = keystoneauth1.loading._plugins.identity.v3:OpenIDConnectClientCredentials')
    >   DEBUG (extension:189) found extension EntryPoint.parse('v3oidcpassword = keystoneauth1.loading._plugins.identity.v3:OpenIDConnectPassword')
    >   DEBUG (extension:189) found extension EntryPoint.parse('v3password = keystoneauth1.loading._plugins.identity.v3:Password')
    >   DEBUG (extension:189) found extension EntryPoint.parse('v3samlpassword = keystoneauth1.extras._saml2._loading:Saml2Password')
    >   DEBUG (extension:189) found extension EntryPoint.parse('v3token = keystoneauth1.loading._plugins.identity.v3:Token')
    >   DEBUG (extension:189) found extension EntryPoint.parse('v3tokenlessauth = keystoneauth1.loading._plugins.identity.v3:TokenlessAuth')
    >   DEBUG (extension:189) found extension EntryPoint.parse('v3totp = keystoneauth1.loading._plugins.identity.v3:TOTP')
    >   DEBUG (session:464) REQ: curl -g -i -X GET https://cumulus.openstack.hpc.cam.ac.uk:5000/v3 -H "Accept: application/json" -H "User-Agent: magnum keystoneauth1/3.13.1 python-requests/2.21.0 CPython/3.7.4"
    >   DEBUG (connectionpool:813) Starting new HTTPS connection (1): cumulus.openstack.hpc.cam.ac.uk:5000
    >   DEBUG (connectionpool:393) https://cumulus.openstack.hpc.cam.ac.uk:5000 "GET /v3 HTTP/1.1" 200 272
    >   DEBUG (session:495) RESP: [200] Content-Length: 272 Content-Type: application/json Date: Sun, 17 Nov 2019 02:16:51 GMT Server: Apache/2.4.6 (CentOS) OpenSSL/1.0.2k-fips mod_auth_gssapi/1.5.1 mod_wsgi/3.4 Python/2.7.5 Vary: X-Auth-Token x-openstack-request-id: req-0c6608a5-feec-48f6-af84-134afa9f8512
    >   DEBUG (session:527) RESP BODY: {"version": {"status": "stable", "updated": "2018-10-15T00:00:00Z", "media-types": [{"base": "application/json", "type": "application/vnd.openstack.identity-v3+json"}], "id": "v3.11", "links": [{"href": "https://cumulus.openstack.hpc.cam.ac.uk:5000/v3/", "rel": "self"}]}}
    >   DEBUG (session:874) GET call to https://cumulus.openstack.hpc.cam.ac.uk:5000/v3 used request id req-0c6608a5-feec-48f6-af84-134afa9f8512
    >   DEBUG (base:176) Making authentication request to https://cumulus.openstack.hpc.cam.ac.uk:5000/v3/auth/tokens
    >   DEBUG (connectionpool:393) https://cumulus.openstack.hpc.cam.ac.uk:5000 "POST /v3/auth/tokens HTTP/1.1" 400 383
    >   DEBUG (session:889) Request returned failure status: 400
    >   DEBUG (shell:643) Invalid input for field 'identity/password/user/password': None is not of type 'string'
    >
    >   Failed validating 'type' in schema['properties']['identity']['properties']['password']['properties']['user']['properties']['password']:
    >       {'type': 'string'}
    >
    >   On instance['identity']['password']['user']['password']:
    >       None (HTTP 400) (Request-ID: req-ad0db276-7d51-4645-851d-1186896fe7a0)
    >   Traceback (most recent call last):
    >     File "/usr/lib/python3.7/site-packages/magnumclient/v1/client.py", line 64, in _load_service_type
    >       region_name=region_name)
    >     File "/usr/lib/python3.7/site-packages/keystoneauth1/session.py", line 1139, in get_endpoint
    >       return auth.get_endpoint(self, **kwargs)
    >     File "/usr/lib/python3.7/site-packages/keystoneauth1/identity/base.py", line 380, in get_endpoint
    >       allow_version_hack=allow_version_hack, **kwargs)
    >     File "/usr/lib/python3.7/site-packages/keystoneauth1/identity/base.py", line 271, in get_endpoint_data
    >       service_catalog = self.get_access(session).service_catalog
    >     File "/usr/lib/python3.7/site-packages/keystoneauth1/identity/base.py", line 134, in get_access
    >       self.auth_ref = self.get_auth_ref(session)
    >     File "/usr/lib/python3.7/site-packages/keystoneauth1/identity/generic/base.py", line 208, in get_auth_ref
    >       return self._plugin.get_auth_ref(session, **kwargs)
    >     File "/usr/lib/python3.7/site-packages/keystoneauth1/identity/v3/base.py", line 178, in get_auth_ref
    >       authenticated=False, log=False, **rkwargs)
    >     File "/usr/lib/python3.7/site-packages/keystoneauth1/session.py", line 1045, in post
    >       return self.request(url, 'POST', **kwargs)
    >     File "/usr/lib/python3.7/site-packages/keystoneauth1/session.py", line 890, in request
    >       raise exceptions.from_response(resp, method, url)
    >   keystoneauth1.exceptions.http.BadRequest: Invalid input for field 'identity/password/user/password': None is not of type 'string'
    >
    >   Failed validating 'type' in schema['properties']['identity']['properties']['password']['properties']['user']['properties']['password']:
    >       {'type': 'string'}
    >
    >   On instance['identity']['password']['user']['password']:
    >       None (HTTP 400) (Request-ID: req-ad0db276-7d51-4645-851d-1186896fe7a0)
    >
    >   During handling of the above exception, another exception occurred:
    >
    >   Traceback (most recent call last):
    >     File "/usr/lib/python3.7/site-packages/magnumclient/shell.py", line 640, in main
    >       OpenStackMagnumShell().main(map(encodeutils.safe_decode, sys.argv[1:]))
    >     File "/usr/lib/python3.7/site-packages/magnumclient/shell.py", line 547, in main
    >       **kwargs
    >     File "/usr/lib/python3.7/site-packages/magnumclient/v1/client.py", line 196, in __init__
    >       **kwargs
    >     File "/usr/lib/python3.7/site-packages/magnumclient/v1/client.py", line 114, in _load_session_client
    >       region_name=region_name,
    >     File "/usr/lib/python3.7/site-packages/magnumclient/v1/client.py", line 76, in _load_service_type
    >       raise RuntimeError(str(e))
    >   RuntimeError: Invalid input for field 'identity/password/user/password': None is not of type 'string'
    >
    >   Failed validating 'type' in schema['properties']['identity']['properties']['password']['properties']['user']['properties']['password']:
    >       {'type': 'string'}
    >
    >   On instance['identity']['password']['user']['password']:
    >       None (HTTP 400) (Request-ID: req-ad0db276-7d51-4645-851d-1186896fe7a0)
    >   ERROR: b"Invalid input for field 'identity/password/user/password': None is not of type 'string'\n\nFailed validating 'type' in schema['properties']['identity']['properties']['password']['properties']['user']['properties']['password']:\n    {'type': 'string'}\n\nOn instance['identity']['password']['user']['password']:\n    None (HTTP 400) (Request-ID: req-ad0db276-7d51-4645-851d-1186896fe7a0)"






