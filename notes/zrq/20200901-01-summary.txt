#
# <meta:header>
#   <meta:licence>
#     Copyright (c) 2020, ROE (http://www.roe.ac.uk/)
#
#     This information is free software: you can redistribute it and/or modify
#     it under the terms of the GNU General Public License as published by
#     the Free Software Foundation, either version 3 of the License, or
#     (at your option) any later version.
#
#     This information is distributed in the hope that it will be useful,
#     but WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#     GNU General Public License for more details.
#
#     You should have received a copy of the GNU General Public License
#     along with this program.  If not, see <http://www.gnu.org/licenses/>.
#   </meta:licence>
# </meta:header>
#
#


    Manila CSI plugin
        20200831-01-manila-csi.txt
        Installed and seems to be working, but static shares fail trying to use application credentials.
        There is a possible issue in the CSI plugin code.

    Manila provider
        20200828-02-cephfs-volume.txt
        Installed and seems to be working, but static shares fail with permission errors.

    User accounts
        20200826-01-user-accounts.txt
        Hard coded user accounts work.
        List of user accounts ends up hard coded into the container image.
        Each user gets a separate interpreter and Spark driver instance.
        Each user gets a separate Spark cluster created on demand.

    OAuth proxy
        20200825-01-oauth-proxy.txt
        Works with Google, requires login to access Zeppelin.
        Not tried with IAM yet.

    CephFS shares
        20200823-01-cephfs-claim.txt
        Works for dynamic shares - issues creating persistent volumes linked to static shares.

    Amazon S3
        20200816-01-k8s-resources.txt
        Works for small datasets (less than 1/4 DR2)
        Issue with the number of files in a large data set causing the S3 client to fail.

    Terraform
        More hassle that it is worth at the moment.
        Requires users to coordinate client side state files.
        Tempting to put the client side state files in source control.
        Client side state files contain unencrypted secrets !!!

    Python version
        Need to have exactly the same Python version on Spark driver and worker nodes.
        Spark driver is part of the Zeppelin interpreter container image.
        Spark worker are created using a Spark specific container image.
        Best way to control the Python version is to use a common base image for both.
        We have Dockerfile source code for both.
        We have already built custom Docker images for both.
        Worth a day to convert both to a common Java/Python base image.
        One of them already uses the OpenJDK Java image.
        The OpenJDK Java image is currently Debian based.
        The OpenJDK Java image is going to change to Oracle Linux.
        Better to swap to a Fedora base and maintain it ourselves.
        Avoid Oracle Linux !!











