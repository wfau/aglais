#
# <meta:header>
#   <meta:licence>
#     Copyright (c) 2020, ROE (http://www.roe.ac.uk/)
#
#     This information is free software: you can redistribute it and/or modify
#     it under the terms of the GNU General Public License as published by
#     the Free Software Foundation, either version 3 of the License, or
#     (at your option) any later version.
#
#     This information is distributed in the hope that it will be useful,
#     but WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#     GNU General Public License for more details.
#
#     You should have received a copy of the GNU General Public License
#     along with this program.  If not, see <http://www.gnu.org/licenses/>.
#   </meta:licence>
# </meta:header>
#
#

    # Try to install the BEE module and a new theme..
    # composer require 'drupal/bee:^1.1'
    # composer require 'drupal/business_responsive_theme:^2.0'


# -----------------------------------------------------
# Login to the Drupal Pod.
#[user@kubernator]

    kubectl exec \
        -it \
        drupal-site-drupal-5bdb456f5-ks6vv bash


# -----------------------------------------------------
# Try installing the new module
#[root@drupal]

    composer require 'drupal/bee:^1.1'

    >   Using version ^1.1 for drupal/bee
    >   ./composer.json has been updated
    >   Loading composer repositories with package information
    >   Updating dependencies (including require-dev)
    >   
    >   Fatal error: Allowed memory size of 1610612736 bytes exhausted (tried to allocate 67108864 bytes) in phar:///usr/local/bin/composer/src/Composer/DependencyResolver/Solver.php on line 223

# -----------------------------------------------------
# Try increasing the memory allocatrion.
# https://www.drupal.org/project/admin_toolbar/issues/3121990
# https://www.drupal.org/project/admin_toolbar/issues/3121990#comment-13521466
# https://www.drupal.org/project/admin_toolbar/issues/3121990#comment-13521496
#[root@drupal]

    php -r "echo ini_get('memory_limit').PHP_EOL;"

    >   128M


    php -d memory_limit=-1 $(which composer) update

    >   Loading composer repositories with package information
    >   Updating dependencies (including require-dev)
    >   Package operations: 18 installs, 36 updates, 0 removals
    >     - Updating drupal/core-composer-scaffold (8.8.10 => 8.9.6): As there is no 'unzip' command installed zip files are being unpacked using the PHP zip extension.
    >   This may cause invalid reports of corrupted archives. Besides, any UNIX permissions (e.g. executable) defined in the archives will be lost.
    >   Installing 'unzip' may remediate them.
    >   Downloading (100%)
    >     - Updating drupal/core-project-message (8.8.10 => 8.9.6): Downloading (100%)
    >     - Updating typo3/phar-stream-wrapper (v3.1.3 => v3.1.4): Downloading (100%)
    >     ....
    >     ....
    >     - Installing drupal/bat (1.3.0): Downloading (100%)
    >     - Installing drupal/bat_unit (1.3.0)
    >     - Installing drupal/bat_event (1.3.0)
    >     - Installing drupal/bat_api (1.1.0): Downloading (100%)
    >     - Installing drupal/bat_fullcalendar (1.3.0)
    >     - Installing drupal/bat_event_ui (1.3.0)
    >     - Installing drupal/bat_event_series (1.3.0)
    >     - Installing drupal/bat_booking (1.3.0)
    >     - Installing drupal/bee (1.1.0): Downloading (100%)
    >   symfony/polyfill-intl-idn suggests installing ext-intl (For best performance)
    >   rlanvin/php-rrule suggests installing ext-intl (Intl extension is needed for humanReadable())
    >   Writing lock file
    >   Generating autoload files
    >   23 packages you are using are looking for funding.
    >   Use the `composer fund` command to find out more!
    >   Scaffolding files for drupal/core:
    >     - Copy [project-root]/.editorconfig from assets/scaffold/files/editorconfig
    >     - Copy [project-root]/.gitattributes from assets/scaffold/files/gitattributes
    >     ....
    >     ....
    >     - Copy [web-root]/sites/example.settings.local.php from assets/scaffold/files/example.settings.local.php
    >     - Copy [web-root]/sites/example.sites.php from assets/scaffold/files/example.sites.php
    >   
    >     [ErrorException]
    >     file_put_contents(/opt/drupal/web/sites/default/default.services.yml): failed to open stream: Read-only file system
    >   ....


# -----------------------------------------------------
# -----------------------------------------------------
# Try creating our own Docker image.
#[user@desktoop]

    source "${HOME}/aglais.env"
    pushd "${AGLAIS_CODE}"
        pushd 'experiments/zrq/drupal/docker'

            gedit Dockermod &

            +   FROM drupal:apache-buster
                ....
                ....

        popd
    popd



# -----------------------------------------------------
# Build our Docker image.
#[user@desktoop]

    buildtag=$(date '+%Y%m%d-%H%M%S')
    buildtime=$(date '+%Y-%m-%dT%H:%M:%S')

    source "${HOME}/aglais.env"
    buildah bud \
        --format docker \
        --tag aglais/drupal-mod:${buildtag:?} \
        --tag aglais/drupal-mod:latest \
        --build-arg "buildtag=${buildtag:?}" \
        --build-arg "buildtime=${buildtime:?}" \
        --file "${AGLAIS_CODE}/experiments/zrq/drupal/docker/Dockermod" \
        "${AGLAIS_CODE:?}/experiments/zrq/drupal/docker"


    >   STEP 1: FROM drupal:apache-buster
    >   ....
    >   ....
    >   STEP 2: MAINTAINER Dave Morris <docker-admin@metagrid.co.uk>
    >   STEP 3: ARG buildtag
    >   STEP 4: ARG buildtime
    >   STEP 5: LABEL maintainer="Dave Morris <docker-admin@metagrid.co.uk>"
    >   STEP 6: LABEL buildtag="${buildtag}"
    >   STEP 7: LABEL buildtime="${buildtime}"
    >   STEP 8: LABEL gitrepo="https://github.com/wfau/aglais"
    >   STEP 9: WORKDIR /opt/drupal
    >   STEP 10: RUN set -eux; 	composer update --no-interaction ;     composer require 'drupal/bee:^1.1';
    >   + composer update --no-interaction
    >   Do not run Composer as root/super user! See https://getcomposer.org/root for details
    >   Loading composer repositories with package information
    >   Updating dependencies (including require-dev)
    >   Nothing to install or update
    >   Writing lock file
    >   Generating autoload files
    >   28 packages you are using are looking for funding.
    >   Use the `composer fund` command to find out more!
    >   + composer require drupal/bee:^1.1
    >   Do not run Composer as root/super user! See https://getcomposer.org/root for details
    >   ./composer.json has been updated
    >   Loading composer repositories with package information
    >   Updating dependencies (including require-dev)
    >   
    >   Fatal error: Allowed memory size of 1610612736 bytes exhausted (tried to allocate 67108864 bytes) in phar:///usr/local/bin/composer/src/Composer/DependencyResolver/Solver.php on line 223
    >   
    >   Check https://getcomposer.org/doc/articles/troubleshooting.md#memory-limit-errors for more info on how to handle out of memory errors.error building at STEP "RUN set -eux; 	composer update --no-interaction ;     composer require 'drupal/bee:^1.1';": error while running runtime: exit status 255
    >   ERRO exit status 255


# -----------------------------------------------------
# Remove the memory limit from composer calls.
#[user@desktoop]

    source "${HOME}/aglais.env"
    pushd "${AGLAIS_CODE}"
        pushd 'experiments/zrq/drupal/docker'

            gedit Dockermod &

                ....
                WORKDIR /opt/drupal
                RUN set -eux; \
            -       composer update ; \
            -       composer require 'drupal/bee:^1.1' ;
            +       php -d memory_limit=-1 /usr/local/bin/composer update ; \
            +       php -d memory_limit=-1 /usr/local/bin/composer require 'drupal/bee:^1.1' ;
                ....


        popd
    popd


# -----------------------------------------------------
# Fix the FROM version.
#[user@desktoop]

    source "${HOME}/aglais.env"
    pushd "${AGLAIS_CODE}"
        pushd 'experiments/zrq/drupal/docker'

            gedit Dockermod &

            -   FROM drupal:apache-buster
            +   FROM drupal:8.9.6-apache-buster
                ....
                ....


        popd
    popd


# -----------------------------------------------------
# Build our Docker image.
#[user@desktoop]

    buildtag=$(date '+%Y%m%d-%H%M%S')
    buildtime=$(date '+%Y-%m-%dT%H:%M:%S')

    source "${HOME}/aglais.env"
    buildah bud \
        --format docker \
        --tag aglais/drupal-mod:${buildtag:?} \
        --tag aglais/drupal-mod:latest \
        --build-arg "buildtag=${buildtag:?}" \
        --build-arg "buildtime=${buildtime:?}" \
        --file "${AGLAIS_CODE}/experiments/zrq/drupal/docker/Dockermod" \
        "${AGLAIS_CODE:?}/experiments/zrq/drupal/docker"


# -----------------------------------------------------
# Login to Docker hub.
#[user@desktop]

    buildah login \
        --username $(secret docker.io.user) \
        --password $(secret docker.io.pass) \
        registry-1.docker.io


# -----------------------------------------------------
# Push our modified image to Docker hub.
# If we use 'podman push' it doesn't recognise existing layers
# and tries to push multiple giga-bytes of data.
#[user@desktop]

    buildah push "aglais/drupal-mod:${buildtag:?}"
    buildah push "aglais/drupal-mod:latest"


# -----------------------------------------------------
# -----------------------------------------------------
# Update the deployed version.
#[user@kubernator]



  drupal_image: drupal:8.8-apache



# -----------------------------------------------------
# Fix the config sync location.
# https://www.drupal.org/docs/configuration-management/changing-the-storage-location-of-the-sync-directory
#[user@kubernator]

    # TODO Does this need to be persistent?
    # If not, could we use an emptyVolume {} ?

    kubectl edit \
        configmap \
            drupal-site-drupal-config

            apiVersion: v1
            data:
              settings.php: |-
                <?php
                ....
                ....
                $settings ....
                $settings ....
                $config_directories[CONFIG_SYNC_DIRECTORY] = 'sites/default/files/sync-ohh5Im9o-ThaebiT0';
            ....
            ....


    kubectl exec \
        -it \
            drupal-site-drupal-5bdb456f5-ks6vv \
                bash

        syncdir=web/sites/default/files/sync-ohh5Im9o-ThaebiT0
        mkdir "${syncdir:?}"
        chown www-data:www-data "${syncdir:?}"


# -----------------------------------------------------
# Install a new theme on the live system.
# https://www.drupal.org/project/business_responsive_theme
# https://www.drupal.org/project/business_responsive_theme/releases/2.0.1
#[user@kubernator]

    kubectl exec \
        -it \
            drupal-site-drupal-5bdb456f5-ks6vv \
                bash

        php -d memory_limit=-1 /usr/local/bin/composer require 'drupal/business_responsive_theme:^2.0' ;

    >   ./composer.json has been updated
    >   Loading composer repositories with package information
    >   Updating dependencies (including require-dev)
    >   Package operations: 1 install, 0 updates, 0 removals
    >   As there is no 'unzip' command installed zip files are being unpacked using the PHP zip extension.
    >   This may cause invalid reports of corrupted archives. Besides, any UNIX permissions (e.g. executable) defined in the archives will be lost.
    >   Installing 'unzip' may remediate them.
    >     - Installing drupal/business_responsive_theme (2.0.1): Downloading (100%)
    >   Writing lock file
    >   Generating autoload files
    >   23 packages you are using are looking for funding.
    >   Use the `composer fund` command to find out more!
    >   Scaffolding files for drupal/core:
    >   
    >   Installation failed, reverting ./composer.json to its original content.
    >   
    >     [ErrorException]
    >     file_put_contents(/opt/drupal/web/sites/default/default.services.yml): failed to open stream: Read-only file system
    >   


    YetAnotherConfigSystem !!

    Drupal 8 uses dependency injection.
    https://www.drupal.org/docs/drupal-apis/services-and-dependency-injection/services-and-dependency-injection-in-drupal-8

    Config for dependency injection is a series of <xzy>.services.yml files for all the modules.
    There can also be a services.yml dependency injection file for the site, in the site directory.

        sites/default/services.yml

    Modules (and themes) write their suggestions into a default.services.yml file

        sites/default/default.services.yml

    and it is up to site administrators to copy the values across into the services.yml file
    https://stackoverflow.com/a/34374284

    Result is - modulkes and themes need to write to the default.services.yml template

        sites/default/default.services.yml

    and system admins need to write to the site services.yml file

        sites/default/services.yml

    Drupal assumes the site directory is writeable
    but it is read only in the Docker image

        sites/default

    TL;DR; we can't install things into the live system
    we can only run composer during the Docker image build

    ... unless we figure out way to make the site directory RW





# -----------------------------------------------------
# Add our theme to our Docker build.
#[user@desktoop]

    source "${HOME}/aglais.env"
    pushd "${AGLAIS_CODE}"
        pushd 'experiments/zrq/drupal/docker'

            gedit Dockermod &

                ....
            +   RUN set -eux; \
            +       php -d memory_limit=-1 /usr/local/bin/composer require 'drupal/business_responsive_theme:^2.0' ;
                ....


        popd
    popd


# -----------------------------------------------------
# Add the devel module to our build.
#[user@desktoop]

    source "${HOME}/aglais.env"
    pushd "${AGLAIS_CODE}"
        pushd 'experiments/zrq/drupal/docker'

            gedit Dockermod &

                ....
            +   RUN set -eux; \
            +       php -d memory_limit=-1 /usr/local/bin/composer require 'drupal/business_responsive_theme:^2.0' ;
                ....


        popd
    popd


# -----------------------------------------------------
# Build our Docker image.
#[user@desktoop]

    buildtag=$(date '+%Y%m%d-%H%M%S')
    buildtime=$(date '+%Y-%m-%dT%H:%M:%S')

    source "${HOME}/aglais.env"
    buildah bud \
        --format docker \
        --tag aglais/drupal-mod:${buildtag:?} \
        --tag aglais/drupal-mod:latest \
        --build-arg "buildtag=${buildtag:?}" \
        --build-arg "buildtime=${buildtime:?}" \
        --file "${AGLAIS_CODE}/experiments/zrq/drupal/docker/Dockermod" \
        "${AGLAIS_CODE:?}/experiments/zrq/drupal/docker"


# -----------------------------------------------------
# Login to Docker hub.
#[user@desktop]

    buildah login \
        --username $(secret docker.io.user) \
        --password $(secret docker.io.pass) \
        registry-1.docker.io


# -----------------------------------------------------
# Push our modified image to Docker hub.
# If we use 'podman push' it doesn't recognise existing layers
# and tries to push multiple giga-bytes of data.
#[user@desktop]

    buildah push "aglais/drupal-mod:${buildtag:?}"
    buildah push "aglais/drupal-mod:latest"


    echo "Latest [aglais/drupal-mod:${buildtag:?}]"

# -----------------------------------------------------
# -----------------------------------------------------
# Update the deployed version.
#[user@kubernator]

    kubectl edit drupal drupal-site

    -       drupal_image: drupal:8.8-apache
    +       drupal_image: aglais/drupal-mod:20200922-065401


    #
    # This automatically replaces the Pod with a new one.
    # ... which also reverts the ConfigMap, and loses our changes
    #


# -----------------------------------------------------
# Fix the config sync location.
# https://www.drupal.org/docs/configuration-management/changing-the-storage-location-of-the-sync-directory
#[user@kubernator]

    # TODO Does this need to be persistent?
    # If not, could we use an emptyVolume {} ?

    kubectl edit \
        configmap \
            drupal-site-drupal-config

            apiVersion: v1
            data:
              settings.php: |-
                <?php
                ....
                ....
                $settings ....
                $settings ....
                $config_directories[CONFIG_SYNC_DIRECTORY] = 'sites/default/files/sync-ohh5Im9o-ThaebiT0';
            ....
            ....

    >   configmap/drupal-site-drupal-config edited



