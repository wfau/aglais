#
# <meta:header>
#   <meta:licence>
#     Copyright (c) 2020, ROE (http://www.roe.ac.uk/)
#
#     This information is free software: you can redistribute it and/or modify
#     it under the terms of the GNU General Public License as published by
#     the Free Software Foundation, either version 3 of the License, or
#     (at your option) any later version.
#
#     This information is distributed in the hope that it will be useful,
#     but WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#     GNU General Public License for more details.
#
#     You should have received a copy of the GNU General Public License
#     along with this program.  If not, see <http://www.gnu.org/licenses/>.
#   </meta:licence>
# </meta:header>
#
#

    Check the settings on the Openstack ObjectStore


# -----------------------------------------------------
# Create a container to work with.
#[user@desktop]

    source "${HOME}/aglais.env"

    podman run \
        --rm \
        --tty \
        --interactive \
        --hostname openstacker \
        --env "cloudname=${AGLAIS_CLOUD:?}" \
        --env "clustername=${CLUSTER_NAME:?}" \
        --volume "${HOME}/clouds.yaml:/etc/openstack/clouds.yaml:z" \
        atolmis/openstack-client \
        bash


# -----------------------------------------------------
# Get details of our object store account.
#[user@openstacker]

    openstack \
        --os-cloud "${cloudname:?}" \
        object store \
            account show

    >   +------------+---------------------------------------+
    >   | Field      | Value                                 |
    >   +------------+---------------------------------------+
    >   | Account    | AUTH_21b4ae3a2ea44bc5a9c14005ed2963af |
    >   | Bytes      | 1095496242242                         |
    >   | Containers | 3                                     |
    >   | Objects    | 67751                                 |
    >   +------------+---------------------------------------+

# -----------------------------------------------------
# List our containers.
#[user@openstacker]

        openstack \
            --os-cloud "${cloudname:?}" \
            container list

    >   +------------------+
    >   | Name             |
    >   +------------------+
    >   | gaia-dr2-csv     |
    >   | gaia-dr2-parquet |
    >   +------------------+


# -----------------------------------------------------
# Get details of our parquet container.
#[user@openstacker]

        openstack \
            --os-cloud "${cloudname:?}" \
            container show \
                --format json \
                'gaia-dr2-parquet'

    >   {
    >     "account": "AUTH_21b4ae3a2ea44bc5a9c14005ed2963af",
    >     "bytes_used": "507579156147",
    >     "container": "gaia-dr2-parquet",
    >     "object_count": "6515",
    >     "read_acl": ".r:*,.rlistings",
    >     "storage_policy": "default-placement"
    >   }


# -----------------------------------------------------
# Configure our S3 client without account and secret keys.
# https://linux.die.net/man/1/s3cmd
# https://s3tools.org/kb/item14.htm
# https://www.digitalocean.com/docs/spaces/resources/s3cmd/
# https://support.arcticcloud.com/portal/kb/articles/managing-object-storage-using-the-s3cmd-interface
#[user@openstacker]

    s3cmd \
        --configure \
        --config ${HOME}/s3cfg

    >     Access Key:
    >     Secret Key:
    >     Default Region: US
    >     S3 Endpoint: cumulus.openstack.hpc.cam.ac.uk:6780
    >     DNS-style bucket+hostname:port template for accessing a bucket: cumulus.openstack.hpc.cam.ac.uk:6780/swift/v1/%(bucket)
    >     Encryption password:
    >     Path to GPG program: /usr/bin/gpg
    >     Use HTTPS protocol: True
    >     HTTP Proxy server name:
    >     HTTP Proxy server port: 0

    >   Test access with supplied credentials? [Y/n]
    >   Please wait, attempting to list all buckets...
    >   ERROR: Test failed: 400 (InvalidArgument)

    >   Save settings? [y/N] y
    >   Configuration saved to '/root/s3cfg'


# -----------------------------------------------------
# Try listing the contents of a bucket.
#[user@openstacker]

    s3cmd \
        --config ${HOME}/s3cfg \
        ls \
            's3://gaia-dr2-parquet'

    >   ERROR: /root/s3cfg: None
    >   ERROR: Configuration file not available.
    >   ERROR: Consider using --configure parameter to create one.


# -----------------------------------------------------
# Try using the full account auth URL.
#[user@openstacker]

    s3cmd \
        --configure \
        --config ${HOME}/s3cfg

    >     Access Key:
    >     Secret Key:
    >     Default Region: US
    >     S3 Endpoint: cumulus.openstack.hpc.cam.ac.uk:6780
    >     DNS-style bucket+hostname:port template for accessing a bucket: cumulus.openstack.hpc.cam.ac.uk:6780/swift/v1/AUTH_21b4ae3a2ea44bc5a9c14005ed2963af/%(bucket)
    >     Encryption password:
    >     Path to GPG program: /usr/bin/gpg
    >     Use HTTPS protocol: True
    >     HTTP Proxy server name:
    >     HTTP Proxy server port: 0


# -----------------------------------------------------
# Try listing the contents of a bucket.
#[user@openstacker]

    s3cmd \
        --config ${HOME}/s3cfg \
        ls \
            's3://gaia-dr2-parquet'

    >   ERROR: /root/s3cfg: None
    >   ERROR: Configuration file not available.
    >   ERROR: Consider using --configure parameter to create one.


# -----------------------------------------------------
# Try using the fake account and secret keys.
#[user@openstacker]

    s3cmd \
        --configure \
        --config ${HOME}/s3cfg

    >     Access Key: none
    >     Secret Key: none
    >     Default Region: US
    >     S3 Endpoint: cumulus.openstack.hpc.cam.ac.uk:6780
    >     DNS-style bucket+hostname:port template for accessing a bucket: cumulus.openstack.hpc.cam.ac.uk:6780/swift/v1/AUTH_21b4ae3a2ea44bc5a9c14005ed2963af/%(bucket)
    >     Encryption password:
    >     Path to GPG program: /usr/bin/gpg
    >     Use HTTPS protocol: True
    >     HTTP Proxy server name:
    >     HTTP Proxy server port: 0


# -----------------------------------------------------
# Try listing the contents of a bucket.
#[user@openstacker]

    s3cmd \
        --config ${HOME}/s3cfg \
        ls \
            's3://gaia-dr2-parquet'

    >   ERROR: S3 error: 404 (NoSuchKey)


# -----------------------------------------------------
# Check valid account and secret keys work.
#[user@openstacker]

    openstack \
        --os-cloud "${cloudname:?}" \
        ec2 credentials \
            list

    >   +--------------+--------------+--------------+--------------+
    >   | Access       | Secret       | Project ID   | User ID      |
    >   +--------------+--------------+--------------+--------------+
    >   | 3367....0df9 | 4034....aea0 | 21b4....63af | 9816....6488 |
    >   | 93d0....f83c | 0e28....25b1 | 08e2....d927 | 9816....6488 |
    >   | 2a35....a9c2 | 52e4....ec51 | 21b4....63af | 9816....6488 |
    >   +--------------+--------------+--------------+--------------+


    s3cmd \
        --configure \
        --config ${HOME}/s3cfg

    >     Access Key: 2a35....a9c2
    >     Secret Key: 52e4....ec51
    >     Default Region: US
    >     S3 Endpoint: cumulus.openstack.hpc.cam.ac.uk:6780
    >     DNS-style bucket+hostname:port template for accessing a bucket: cumulus.openstack.hpc.cam.ac.uk:6780/swift/v1/AUTH_21b4ae3a2ea44bc5a9c14005ed2963af/%(bucket)
    >     Encryption password:
    >     Path to GPG program: /usr/bin/gpg
    >     Use HTTPS protocol: True
    >     HTTP Proxy server name:
    >     HTTP Proxy server port: 0


# -----------------------------------------------------
# Try listing the contents of a bucket.
#[user@openstacker]

    s3cmd \
        --config ${HOME}/s3cfg \
        ls \
            's3://gaia-dr2-parquet'

    >   2020-04-21 02:04            0  s3://gaia-dr2-parquet/_SUCCESS
    >   2020-04-21 02:04     74114220  s3://gaia-dr2-parquet/part-00000-70392076-8b82-4457-8828-22069e7626e9-c000.snappy.parquet
    >   2020-04-21 02:04    104411815  s3://gaia-dr2-parquet/part-00001-70392076-8b82-4457-8828-22069e7626e9-c000.snappy.parquet
    >   2020-04-21 02:04     99035704  s3://gaia-dr2-parquet/part-00002-70392076-8b82-4457-8828-22069e7626e9-c000.snappy.parquet
    >   2020-04-21 02:05     96996784  s3://gaia-dr2-parquet/part-00003-70392076-8b82-4457-8828-22069e7626e9-c000.snappy.parquet
    >   ....
    >   ....


# -----------------------------------------------------
# -----------------------------------------------------


    The s3cmd S3 client won't work unless it has valid keys.
    When it does have valid keys, container listing works fine.

    Spark s3a:// protocol works for single objects.
    Spark s3a:// protocol gets an XML error trying to list container contents.


# -----------------------------------------------------
# Container ALCs looks OK.
# https://docs.openstack.org/swift/latest/overview_acl.html
#[user@openstacker]

    openstack \
        --os-cloud "${cloudname:?}" \
        container show \
            --format json \
            'gaia-dr2-parquet' \
    | jq -r '.read_acl'

    >   .r:*,.rlistings




