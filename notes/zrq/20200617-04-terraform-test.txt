#
# <meta:header>
#   <meta:licence>
#     Copyright (c) 2020, ROE (http://www.roe.ac.uk/)
#
#     This information is free software: you can redistribute it and/or modify
#     it under the terms of the GNU General Public License as published by
#     the Free Software Foundation, either version 3 of the License, or
#     (at your option) any later version.
#
#     This information is distributed in the hope that it will be useful,
#     but WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#     GNU General Public License for more details.
#
#     You should have received a copy of the GNU General Public License
#     along with this program.  If not, see <http://www.gnu.org/licenses/>.
#   </meta:licence>
# </meta:header>
#
#

    #
    # Test to check the Terrafrom client image works.

# -----------------------------------------------------
# Create a container to work with.
#[user@desktop]

    podman run \
        --rm \
        --tty \
        --interactive \
        --hostname terraformer \
        --volume "${HOME}/clouds.yaml:/etc/openstack/clouds.yaml:z" \
        atolmis/terraform-client \
        bash


# -----------------------------------------------------
# Set the project and cluster names.
#[user@terraformer]

    cloudname=gaia-prod
    clustername=Tiberius


# -----------------------------------------------------
# Check Terraform is installed
#[user@terraformer]

    which terraform

    >   /usr/local/bin/terraform


# -----------------------------------------------------
# Clone the StackHPC examples.
#[user@terraformer]

    pushd "${HOME}"

        git clone 'https://github.com/RSE-Cambridge/iris-magnum.git'

    popd


# -----------------------------------------------------
# Fetch our public key from OpenStack.
#[user@terraformer]

    openstack \
        --os-cloud "${cloudname:?}" \
            keypair list

    >   +------------------+-------------------------------------------------+
    >   | Name             | Fingerprint                                     |
    >   +------------------+-------------------------------------------------+
    >   | zrq-gaia-keypair | a4:8b:f3:0a:31:eb:93:b2:98:62:c5:d2:02:31:0f:b4 |
    >   +------------------+-------------------------------------------------+


    keyname=$(
        openstack \
        --os-cloud "${cloudname:?}" \
            keypair list \
                --format json \
        | jq -r '.[0] | .Name'
        )

    keyfile=/root/.ssh/id_rsa.pub
    mkdir $(dirname ${keyfile})

    openstack \
        --os-cloud "${cloudname:?}" \
            keypair show \
            --public-key \
            "${keyname:?}" \
    | tee "${keyfile:?}"

    >   ssh-rsa AAAAB3Nz........zV4ksPOL

    # The StachHPC module expects this.
    # Difficult to customise the filename.


# -----------------------------------------------------
# Use the unrestricted cloud credentials.
#[user@terraformer]

    # The Terraform module expects this ?

    export OS_CLOUD="${cloudname:?}-super"


# -----------------------------------------------------
# Run Terraform to deploy the example cluster.
#[user@terraformer]

    pushd "${HOME}/iris-magnum"
        pushd 'terraform/examples/cluster'

            terraform init

    >   Initializing modules...
    >   - cluster in ../../modules/cluster
    >
    >   Initializing the backend...
    >
    >   Initializing provider plugins...
    >   - Checking for available provider plugins...
    >   - Downloading plugin for provider "null" (hashicorp/null) 2.1.2...
    >   - Downloading plugin for provider "openstack" (terraform-providers/openstack) 1.28.0...
    >
    >   ....
    >   ....


            terraform plan

    >   Refreshing Terraform state in-memory prior to plan...
    >   The refreshed state will be used to calculate this plan, but will not be
    >   persisted to local or remote state storage.
    >   
    >   module.cluster.data.openstack_containerinfra_clustertemplate_v1.clustertemplate: Refreshing state...
    >   
    >   ------------------------------------------------------------------------
    >   
    >   An execution plan has been generated and is shown below.
    >   Resource actions are indicated with the following symbols:
    >     + create
    >   
    >   Terraform will perform the following actions:
    >   
    >     # module.cluster.null_resource.kubeconfig will be created
    >     + resource "null_resource" "kubeconfig" {
    >         + id       = (known after apply)
    >         + triggers = {
    >             + "kubeconfig" = "my-test"
    >           }
    >       }
    >   
    >     # module.cluster.openstack_compute_keypair_v2.keypair will be created
    >     + resource "openstack_compute_keypair_v2" "keypair" {
    >         + fingerprint = (known after apply)
    >         + id          = (known after apply)
    >         + name        = "my-test"
    >         + private_key = (known after apply)
    >         + public_key  = <<~EOT
    >               ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDf4c9GuWKfTjclpDp779deRXXSgTblrTD6mdgJxwWOC2Vh1Tvicn8qv1tgTV62G49/783lffTKnCTUIFNOCTaaaLpkGDjVdR7ZG0o4u8r7c9bHEPaH/RJirG19wZ1LbTAA0XKGQrhlnCAMG2ruoX8zFz4FUNgpY0qkSLtNaarmFqkNxbg76sXehwzxhOqxLSoimlj4HJ0MUVVJsDUqbIpujJeC6AKKOUmr++h4Y/EnKetUSp/GhfHUD+Lt9BYALOFEyAAv3qyUqSrWT/JeFF//VS+syzoszBqBgQ+tvi4GBDhwnfRM0WgOOusWHXEOhitYwwaQ/6J66RC1zV4ksPOL Cambridge HPC OpenStack
    >           EOT
    >         + region      = (known after apply)
    >       }
    >   
    >     # module.cluster.openstack_containerinfra_cluster_v1.cluster will be created
    >     + resource "openstack_containerinfra_cluster_v1" "cluster" {
    >         + api_address         = (known after apply)
    >         + cluster_template_id = "d54167d9-495f-437e-88fe-d182b2a230ea"
    >         + coe_version         = (known after apply)
    >         + container_version   = (known after apply)
    >         + create_timeout      = (known after apply)
    >         + created_at          = (known after apply)
    >         + discovery_url       = (known after apply)
    >         + docker_volume_size  = (known after apply)
    >         + fixed_network       = (known after apply)
    >         + fixed_subnet        = (known after apply)
    >         + flavor              = "general.v1.tiny"
    >         + id                  = (known after apply)
    >         + keypair             = (known after apply)
    >         + kubeconfig          = (sensitive value)
    >         + labels              = {
    >             + "auto_healing_controller"       = "magnum-auto-healer"
    >             + "auto_healing_enabled"          = "true"
    >             + "auto_scaling_enabled"          = "true"
    >             + "autoscaler_tag"                = "v1.15.2"
    >             + "cloud_provider_tag"            = "v1.15.0"
    >             + "etcd_tag"                      = "3.3.17"
    >             + "heat_container_agent_tag"      = "train-stable-1"
    >             + "kube_tag"                      = "v1.15.9"
    >             + "master_lb_floating_ip_enabled" = "true"
    >             + "max_node_count"                = "2"
    >             + "min_node_count"                = "1"
    >             + "monitoring_enabled"            = "true"
    >             + "tiller_enabled"                = "true"
    >             + "tiller_tag"                    = "v2.16.1"
    >             + "use_podman"                    = "true"
    >           }
    >         + master_addresses    = (known after apply)
    >         + master_count        = 1
    >         + master_flavor       = "general.v1.tiny"
    >         + name                = "my-test"
    >         + node_addresses      = (known after apply)
    >         + node_count          = 1
    >         + project_id          = (known after apply)
    >         + region              = (known after apply)
    >         + stack_id            = (known after apply)
    >         + updated_at          = (known after apply)
    >         + user_id             = (known after apply)
    >       }
    >   
    >   Plan: 3 to add, 0 to change, 0 to destroy.
    >   
    >   ------------------------------------------------------------------------
    >   
    >   Note: You didn't specify an "-out" parameter to save this plan, so Terraform
    >   can't guarantee that exactly these actions will be performed if
    >   "terraform apply" is subsequently run.


            terraform apply

    >   ....
    >   ....
    >   Plan: 3 to add, 0 to change, 0 to destroy.
    >   
    >   Do you want to perform these actions?
    >     Terraform will perform the actions described above.
    >     Only 'yes' will be accepted to approve.
    >   
    >     Enter a value: yes
    >   
    >   module.cluster.openstack_compute_keypair_v2.keypair: Creating...
    >   module.cluster.openstack_compute_keypair_v2.keypair: Creation complete after 2s [id=my-test]
    >   module.cluster.openstack_containerinfra_cluster_v1.cluster: Creating...
    >   module.cluster.openstack_containerinfra_cluster_v1.cluster: Still creating... [10s elapsed]
    >   module.cluster.openstack_containerinfra_cluster_v1.cluster: Still creating... [20s elapsed]
    >   ....
    >   ....
    >   module.cluster.openstack_containerinfra_cluster_v1.cluster: Still creating... [40s elapsed]
    >   module.cluster.openstack_containerinfra_cluster_v1.cluster: Still creating... [50s elapsed]
    >   module.cluster.openstack_containerinfra_cluster_v1.cluster: Still creating... [1m0s elapsed]
    >   
    >   Error: Error waiting for openstack_containerinfra_cluster_v1 f1eb6e81-8cff-47d1-ab09-10141209a3cb to become ready: json: cannot unmarshal object into Go struct field Cluster.health_status_reason of type string
    >   
    >     on ../../modules/cluster/main.tf line 14, in resource "openstack_containerinfra_cluster_v1" "cluster":
    >     14: resource "openstack_containerinfra_cluster_v1" "cluster" {

        popd
    popd


# -----------------------------------------------------
# List our clusters.
#[user@terraformer]

    watch \
        openstack \
            --os-cloud "${cloudname:?}" \
            coe cluster list

    >   +--------------------------------------+---------+---------+------------+--------------+-----------------+---------------+
    >   | uuid                                 | name    | keypair | node_count | master_count | status          | health_status |
    >   +--------------------------------------+---------+---------+------------+--------------+-----------------+---------------+
    >   | f1eb6e81-8cff-47d1-ab09-10141209a3cb | my-test | my-test |          1 |            1 | CREATE_COMPLETE | HEALTHY       |
    >   +--------------------------------------+---------+---------+------------+--------------+-----------------+---------------+


# -----------------------------------------------------
# Get the details for our new cluster.
#[user@terraformer]


    clusterid=$(
        openstack \
        --os-cloud "${cloudname:?}" \
            coe cluster list \
                --format json \
        | jq -r '.[0] | .uuid'
        )


    openstack \
        --os-cloud "${cloudname:?}" \
        coe cluster show \
            "${clusterid}"

    >   +----------------------+------------------------------------------------------------------------------------------------------------+
    >   | Field                | Value                                                                                                      |
    >   +----------------------+------------------------------------------------------------------------------------------------------------+
    >   | status               | CREATE_COMPLETE                                                                                            |
    >   | health_status        | HEALTHY                                                                                                    |
    >   | cluster_template_id  | d54167d9-495f-437e-88fe-d182b2a230ea                                                                       |
    >   | node_addresses       | ['10.0.0.74']                                                                                              |
    >   | uuid                 | f1eb6e81-8cff-47d1-ab09-10141209a3cb                                                                       |
    >   | stack_id             | 62103a90-7cc1-4fac-bb10-a4e11688971a                                                                       |
    >   | status_reason        | None                                                                                                       |
    >   | created_at           | 2020-06-18T00:51:54+00:00                                                                                  |
    >   | updated_at           | 2020-06-18T00:57:49+00:00                                                                                  |
    >   | coe_version          | v1.15.9                                                                                                    |
    >   | labels               | {'auto_healing_controller': 'magnum-auto-healer' .... 'auto_scaling_enabled': 'true'}                      |
    >   | faults               |                                                                                                            |
    >   | keypair              | my-test                                                                                                    |
    >   | api_address          | https://128.232.227.244:6443                                                                               |
    >   | master_addresses     | ['10.0.0.32']                                                                                              |
    >   | create_timeout       | None                                                                                                       |
    >   | node_count           | 1                                                                                                          |
    >   | discovery_url        | https://discovery.etcd.io/64cd954afbbbce669c8a8a0d5f100242                                                 |
    >   | master_count         | 1                                                                                                          |
    >   | container_version    | 1.12.6                                                                                                     |
    >   | name                 | my-test                                                                                                    |
    >   | master_flavor_id     | general.v1.tiny                                                                                            |
    >   | flavor_id            | general.v1.tiny                                                                                            |
    >   | health_status_reason | {'my-test-nni6khrpj4ft-master-0.Ready': 'True', 'api': 'ok', 'my-test-nni6khrpj4ft-node-0.Ready': 'True'}  |
    >   | project_id           | 21b4ae3a2ea44bc5a9c14005ed2963af                                                                           |
    >   +----------------------+------------------------------------------------------------------------------------------------------------+


# -----------------------------------------------------
# Run Terraform to destroy our cluster.
#[user@openstacker]

    pushd "${HOME}/iris-magnum"
        pushd 'terraform/examples/cluster'

            terraform destroy

        popd
    popd


    >   module.cluster.data.openstack_containerinfra_clustertemplate_v1.clustertemplate: Refreshing state...
    >   module.cluster.openstack_compute_keypair_v2.keypair: Refreshing state... [id=my-test]
    >   module.cluster.openstack_containerinfra_cluster_v1.cluster: Refreshing state... [id=f1eb6e81-8cff-47d1-ab09-10141209a3cb]
    >   
    >   Error: Error retrieving openstack_containerinfra_cluster_v1 f1eb6e81-8cff-47d1-ab09-10141209a3cb: json: cannot unmarshal object into Go struct field Cluster.health_status_reason of type string

    #
    # Still broken
    #


