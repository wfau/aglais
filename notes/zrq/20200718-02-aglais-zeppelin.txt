#
# <meta:header>
#   <meta:licence>
#     Copyright (c) 2020, ROE (http://www.roe.ac.uk/)
#
#     This information is free software: you can redistribute it and/or modify
#     it under the terms of the GNU General Public License as published by
#     the Free Software Foundation, either version 3 of the License, or
#     (at your option) any later version.
#
#     This information is distributed in the hope that it will be useful,
#     but WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#     GNU General Public License for more details.
#
#     You should have received a copy of the GNU General Public License
#     along with this program.  If not, see <http://www.gnu.org/licenses/>.
#   </meta:licence>
# </meta:header>
#
#

    #
    # Start again ..
    # Build Zeppelin images from clean.
    # Push new images to Docker hub.
    # Create a brand new cluster.
    # Create a patch to modify the Zeppelin deployment file.
    # Deploy Zeppelin using our images.
    #
    # Try to remember what we were trying to fix ..
    # Try to fix it ..
    #


# -----------------------------------------------------
# Add to our project env file.
#[user@desktop]

    cat >> "${HOME}/aglais.env" << EOF
ZEPPELIN_REPO='git@github.com:Zarquan/aglais-zeppelin.git'
ZEPPELIN_HOME="${PROJECTS_ROOT:?}/WFAU/aglais-zeppelin"
ZEPPELIN_CODE="${ZEPPELIN_HOME:?}/github-zrq"
EOF


# -----------------------------------------------------
# Clone our fork of Zeppelin.
#[user@desktop]

    source "${HOME}/aglais.env"

    echo "Checking [${ZEPPELIN_HOME:?}]"
    if [ ! -e "${ZEPPELIN_HOME:?}" ]
    then
        echo "Creating [${ZEPPELIN_HOME:?}]"
        mkdir --parents "${ZEPPELIN_HOME:?}"
    fi

    echo "Checking [$(dirname ${ZEPPELIN_CODE:?})]"
    if [ ! -e "$(dirname ${ZEPPELIN_CODE:?})" ]
    then
        echo "Creating [$(dirname ${ZEPPELIN_CODE:?})]"
        mkdir --parents "$(dirname ${ZEPPELIN_CODE:?})"
    fi

    echo "Checking [${ZEPPELIN_CODE:?}]"
    if [ ! -e "${ZEPPELIN_CODE:?}" ]
    then
        echo "Creating [${ZEPPELIN_CODE:?}]"
        pushd "$(dirname ${ZEPPELIN_CODE:?})"
            git clone "${ZEPPELIN_REPO:?}" "$(basename ${ZEPPELIN_CODE:?})"
        popd
    else
        echo "Updating [${ZEPPELIN_CODE:?}]"
        pushd "${ZEPPELIN_CODE:?}"
            git pull
        popd
    fi


# -----------------------------------------------------
# Build all the components from source.
# https://zeppelin.apache.org/docs/latest/setup/basics/how_to_build.html#2-build-source
#[user@desktop]

    source "${HOME}/aglais.env"
    pushd "${ZEPPELIN_CODE:?}"

        mvn clean package -DskipTests

    popd

    >   ....
    >   ....
    >   [INFO] ------------------------------------------------------------------------
    >   [INFO] BUILD SUCCESS
    >   [INFO] ------------------------------------------------------------------------
    >   [INFO] Total time: 18:17 min
    >   [INFO] Finished at: 2020-07-19T01:10:13+01:00
    >   [INFO] ------------------------------------------------------------------------

    #
    # If the next step starts with 'clean', do we need this step ?
    #

# -----------------------------------------------------
# Build the distribution package.
# https://zeppelin.apache.org/docs/latest/setup/basics/how_to_build.html#package
#[user@desktop]

    source "${HOME}/aglais.env"
    pushd "${ZEPPELIN_CODE:?}"

        mvn clean package -Pbuild-distr

    popd

    >   ....
    >   ....
    >   [INFO] ------------------------------------------------------------------------
    >   [INFO] BUILD SUCCESS
    >   [INFO] ------------------------------------------------------------------------
    >   [INFO] Total time: 18:45 min
    >   [INFO] Finished at: 2020-07-19T01:37:28+01:00
    >   [INFO] ------------------------------------------------------------------------


# -----------------------------------------------------
# List the distribution contents.
#[user@desktop]

    source "${HOME}/aglais.env"
    pushd "${ZEPPELIN_CODE:?}"

        ls -al zeppelin-distribution/target/zeppelin-0.9.0-SNAPSHOT/*

    popd


    >   ....
    >   ....
    >   drwxr-xr-x. 1 Zarquan users      394 Jul 16 13:02 bin
    >   drwxrwxr-x. 1 Zarquan users      410 Jul 16 13:02 conf
    >   drwxrwxr-x. 1 Zarquan users      488 Jul 19 01:31 interpreter
    >   drwxrwxr-x. 1 Zarquan users       62 Jul 16 13:02 k8s
    >   drwxrwsr-x. 1 Zarquan users    12264 Jul 19 01:36 lib
    >   -rw-rw-r--. 1 Zarquan users    18007 Jul 16 13:02 LICENSE
    >   drwxrwxr-x. 1 Zarquan users      708 Jul 16 13:02 licenses
    >   drwxrwxr-x. 1 Zarquan users      150 Jul 16 13:02 notebook
    >   -rw-rw-r--. 1 Zarquan users      441 Jul 16 13:02 NOTICE
    >   drwxrwxr-x. 1 Zarquan users       40 Jul 16 15:22 plugins
    >   -rw-rw-r--. 1 Zarquan users     1341 Jul 16 13:02 README.md
    >   -rw-rw-r--. 1 Zarquan users 29695464 Jul 19 01:34 zeppelin-web-0.9.0-SNAPSHOT.war


# -----------------------------------------------------
# Identify references to the Docker image.
#[user@desktop]

    source "${HOME}/aglais.env"
    pushd "${ZEPPELIN_CODE:?}"

        grep -r 'apache/zeppelin:0' *


    >   conf/zeppelin-site.xml.template:  <value>apache/zeppelin:0.9.0-SNAPSHOT</value>
    >   conf/zeppelin-site.xml.template:  <value>apache/zeppelin:0.8.0</value>
    >   docs/quickstart/docker.md:FROM apache/zeppelin:0.8.0
    >   k8s/zeppelin-server.yaml:  ZEPPELIN_K8S_CONTAINER_IMAGE: apache/zeppelin:0.9.0-SNAPSHOT
    >   k8s/zeppelin-server.yaml:        image: apache/zeppelin:0.9.0-SNAPSHOT
    >   scripts/docker/interpreter/Dockerfile:FROM apache/zeppelin:0.8.0
    >   zeppelin-distribution/target/zeppelin-0.9.0-SNAPSHOT/zeppelin-0.9.0-SNAPSHOT/conf/zeppelin-site.xml.template:  <value>apache/zeppelin:0.9.0-SNAPSHOT</value>
    >   zeppelin-distribution/target/zeppelin-0.9.0-SNAPSHOT/zeppelin-0.9.0-SNAPSHOT/conf/zeppelin-site.xml.template:  <value>apache/zeppelin:0.8.0</value>
    >   zeppelin-distribution/target/zeppelin-0.9.0-SNAPSHOT/zeppelin-0.9.0-SNAPSHOT/k8s/zeppelin-server.yaml:  ZEPPELIN_K8S_CONTAINER_IMAGE: apache/zeppelin:0.9.0-SNAPSHOT
    >   zeppelin-distribution/target/zeppelin-0.9.0-SNAPSHOT/zeppelin-0.9.0-SNAPSHOT/k8s/zeppelin-server.yaml:        image: apache/zeppelin:0.9.0-SNAPSHOT


# -----------------------------------------------------
# Update references to the Docker image.
#[user@desktop]

    source "${HOME}/aglais.env"

    ZEPPELIN_VERSION=0.9.0-SNAPSHOT
    ZEPPELIN_TARGET=${ZEPPELIN_CODE:?}/zeppelin-distribution/target
    ZEPPELIN_PACKAGE=${ZEPPELIN_TARGET:?}/zeppelin-${ZEPPELIN_VERSION:?}/zeppelin-${ZEPPELIN_VERSION:?}

    pushd "${ZEPPELIN_PACKAGE:?}"

        sed -i '
            s/apache\/zeppelin:0.9.0-SNAPSHOT/aglais\/zeppelin:latest/
            ' conf/zeppelin-site.xml.template

        sed -i '
            s/apache\/zeppelin:0.9.0-SNAPSHOT/aglais\/zeppelin:latest/
            ' k8s/zeppelin-server.yaml

    popd

        #
        # TODO change these to use XML and YAML editors.
        # xmlstarlet and yaml_cli ?
        #


# -----------------------------------------------------
# Build our Docker images.
#[user@desktop]

    buildtag=$(date '+%Y.%m.%d')
    buildtag=2020.07.19
    buildtime=$(date '+%Y-%m-%dT%H:%M:%S')

    source "${HOME}/aglais.env"

    ZEPPELIN_VERSION=0.9.0-SNAPSHOT
    ZEPPELIN_TARGET=${ZEPPELIN_CODE:?}/zeppelin-distribution/target
    ZEPPELIN_PACKAGE=${ZEPPELIN_TARGET:?}/zeppelin-${ZEPPELIN_VERSION:?}/zeppelin-${ZEPPELIN_VERSION:?}

    cp "${AGLAIS_CODE}/experiments/zrq/zeppelin/docker/log4j.properties" \
       "${ZEPPELIN_PACKAGE:?}"

    buildah bud \
        --tag aglais/zeppelinbase:latest \
        --tag aglais/zeppelinbase:${buildtag:?} \
        --build-arg "buildtag=${buildtag:?}" \
        --build-arg "buildtime=${buildtime:?}" \
        --file "${AGLAIS_CODE:?}/experiments/zrq/zeppelin/docker/Dockerbase" \
        "${ZEPPELIN_PACKAGE:?}"

    buildah bud \
        --tag aglais/zeppelin:latest \
        --tag aglais/zeppelin:${buildtag:?} \
        --build-arg "buildtag=${buildtag:?}" \
        --build-arg "buildtime=${buildtime:?}" \
        --file "${AGLAIS_CODE:?}/experiments/zrq/zeppelin/docker/Dockerfile" \
        "${ZEPPELIN_PACKAGE:?}"



    >   STEP 1: FROM aglais/zeppelinbase:2020.07.19
    >   STEP 2: MAINTAINER Dave Morris <docker-admin@metagrid.co.uk>
    >   STEP 3: ARG buildtag
    >   STEP 4: ARG buildtime
    >   ....
    >   ....
    >   Writing manifest to image destination
    >   Storing signatures
    >   --> b73d0c076ac
    >   b73d0c076ac492ff0894bbb7946af095c2b994f8a33a4c48dbf79c41acf92224


# -----------------------------------------------------
# Login to the Docker registry.
#[user@desktop]

    podman login \
        --username $(secret docker.io.user) \
        --password $(secret docker.io.pass) \
        registry-1.docker.io


# -----------------------------------------------------
# Push our images to Docker hub.
#[user@desktop]

#   podman push "aglais/zeppelinbase:${buildtag:?}"
#   podman push "aglais/zeppelinbase:latest"

    podman push "aglais/zeppelin:${buildtag:?}"
    podman push "aglais/zeppelin:latest"

    #
    # Never managed to complete this step.
    # Docker registry upload from and ADSL line fails.
    # Image is ~3Gi bytes
    #

--START--
Getting image source signatures
Copying blob d908d9ad6713 skipped: already exists
....
....
Copying blob 76385efa4602 skipped: already exists
Copying blob 0eb07f2a3d7d [============>-------------------------] 548.0MiB / 1.6GiB
Copying blob d956d2e3d966 done
Copying blob 49e302f5b4ad [=============================>--------] 1.1GiB / 1.4GiB
Copying blob 6ce50e5c5ee9 skipped: already exists
Copying blob 4253f42b6d14 skipped: already exists
Error: Error copying image to the remote destination: Error writing blob: Error uploading layer chunked: received unexpected HTTP status: 502 Bad Gateway
--END--


