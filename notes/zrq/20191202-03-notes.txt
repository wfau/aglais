#
# <meta:header>
#   <meta:licence>
#     Copyright (c) 2018, ROE (http://www.roe.ac.uk/)
#
#     This information is free software: you can redistribute it and/or modify
#     it under the terms of the GNU General Public License as published by
#     the Free Software Foundation, either version 3 of the License, or
#     (at your option) any later version.
#
#     This information is distributed in the hope that it will be useful,
#     but WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#     GNU General Public License for more details.
#
#     You should have received a copy of the GNU General Public License
#     along with this program.  If not, see <http://www.gnu.org/licenses/>.
#   </meta:licence>
# </meta:header>
#
#

Slack chat with John from StackHPC:

    "I think k8s is the best multi-cloud option right now and I think most folks will need multi-cloud"


    OpenStack - Cinder
    https://wiki.openstack.org/wiki/Cinder

    CSI Cinder driver
    https://github.com/kubernetes/cloud-provider-openstack/blob/master/docs/using-cinder-csi-plugin.md

    OpenStack - Manila
    https://wiki.openstack.org/wiki/Manila


    Container Storage Interface (CSI)
    https://kubernetes.io/blog/2018/01/introducing-container-storage-interface/
    https://kubernetes.io/blog/2019/01/15/container-storage-interface-ga/

    https://medium.com/google-cloud/understanding-the-container-storage-interface-csi-ddbeb966a3b

        "Container Storage Interface (CSI) is an initiative to unify the storage interface of
        Container Orchestrator Systems (COs) like Kubernetes, Mesos, Docker swarm, cloud foundry,
        etc. combined with storage vendors like Ceph, Portworx, NetApp etc. This means, implementing
        a single CSI for a storage vendor is guaranteed to work with all COs."

    https://medium.com/velotio-perspectives/kubernetes-csi-in-action-explained-with-features-and-use-cases-4f966b910774

        "In this post, we will dig into the Kubernetes Container Storage Interface.
        We will install CSI Driver for Hostpath locally just to get an idea of how
        it works by understanding its components and see what really happens during
        pvc/pv/pod lifecycle."

    https://unofficial-kubernetes.readthedocs.io/en/latest/concepts/storage/volumes/#hostpath

        "A hostPath volume mounts a file or directory from the host node's filesystem into your pod."


    Cloud Provider OpenStack - soo much to learn
    https://github.com/kubernetes/cloud-provider-openstack


    Easily deploy a Kubernetes cluster on OpenStack
    https://cloudbase.it/easily-deploy-a-kubernetes-cluster-on-openstack/

    Bitnami - Spark on K8s
    https://github.com/bitnami/charts/tree/master/bitnami/spark
    "This chart bootstraps a spark deployment on a Kubernetes cluster using the Helm package manager."

    Google - Spark on K8s
    https://github.com/GoogleCloudPlatform/spark-on-k8s-operator
    "Kubernetes operator for managing the lifecycle of Apache Spark applications on Kubernetes."

    Apache Spark Helm Chart
    https://github.com/helm/charts/tree/master/stable/spark

    Apache Spark Helm Chart (Microsoft)
    https://github.com/dbanda/charts/tree/master/stable/spark

    Microsoft - Helm charts for Spark
    https://hub.helm.sh/charts/microsoft/spark

    Apache Livy
    https://livy.apache.org/

    Livy: A REST Web Service For Apache Spark
    https://www.youtube.com/watch?v=C_3iEf_KNv8

    Terraform
    https://www.terraform.io/
    "terraform is super useful, I would recomend it to created your k8s cluster with magnum"

    https://computingforgeeks.com/how-to-provision-vms-on-kvm-with-terraform/


    Using the Livy interpreter to access Spark
    https://docs.cloudera.com/HDPDocuments/HDP3/HDP-3.1.4/using-zeppelin/content/using_the_livy_interpreter_to_access_spark.html

    Spark + Parquet In Depth (not watched yet)
    https://www.youtube.com/watch?v=_0Wpwj_gvzg



