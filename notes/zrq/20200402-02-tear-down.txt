#
# <meta:header>
#   <meta:licence>
#     Copyright (c) 2020, ROE (http://www.roe.ac.uk/)
#
#     This information is free software: you can redistribute it and/or modify
#     it under the terms of the GNU General Public License as published by
#     the Free Software Foundation, either version 3 of the License, or
#     (at your option) any later version.
#
#     This information is distributed in the hope that it will be useful,
#     but WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#     GNU General Public License for more details.
#
#     You should have received a copy of the GNU General Public License
#     along with this program.  If not, see <http://www.gnu.org/licenses/>.
#   </meta:licence>
# </meta:header>
#
#

# -----------------------------------------------------
# Create our project config file.
#[user@desktop]

    ....


# -----------------------------------------------------
# Create our cloud config file.
#[user@desktop]

    ....


# -----------------------------------------------------
# Create a container to work with.
# https://podman.readthedocs.io/en/latest/markdown/podman-run.1.html
#[user@desktop]

    source "${HOME:?}/aglais.env"

    podman run \
        --rm \
        --tty \
        --interactive \
        --hostname openstacker \
        --env "clouduser=${AGLAIS_USER:?}" \
        --env "cloudname=${AGLAIS_CLOUD:?}" \
        --volume "${HOME:?}/clouds.yaml:/tmp/clouds.yaml:ro,z" \
        atolmis/openstack-client:latest \
        bash


# -----------------------------------------------------
# Link our clouds.cfg file.
# https://docs.ansible.com/ansible/latest/reference_appendices/config.html#the-configuration-file
#[root@ansibler]

    mkdir /etc/openstack
    pushd /etc/openstack
        ln -sf /tmp/clouds.yaml
    popd


# -----------------------------------------------------
# Set the name prefix to look for.
#[user@openstacker]

    regex='^aglais'


# -----------------------------------------------------
# List our servers (using JQ foo).
#[user@openstacker]

    for servername in $(
        openstack \
            --os-cloud "${cloudname:?}" \
            server list \
                --format json \
        | jq -r '.[] | select(.Name | test("'${regex:?}'")) | .Name'
        )
    do
        echo "----"
        echo "Server [${servername:?}]"
    done

    >   ----
    >   Server [aglais-20200402-master02]
    >   ----
    >   Server [aglais-20200402-master01]
    >   ----
    >   Server [aglais-20200402-gateway]


# -----------------------------------------------------
# Delete our servers (using JQ foo).
#[user@openstacker]

    for serverid in $(
        openstack \
            --os-cloud "${cloudname:?}" \
            server list \
                --format json \
        | jq -r '.[] | select(.Name | test("'${regex:?}'")) | .ID'
        )
    do
        echo "----"
        echo "Server [${serverid:?}]"
        openstack \
            --os-cloud "${cloudname:?}" \
            server delete \
                "${serverid:?}"
    done

    >   ----
    >   Server [2732bd36-984b-4761-b5f1-159c37c37720]
    >   ----
    >   Server [967107a0-9ca0-4530-af5e-fbf7c1bf571a]
    >   ----
    >   Server [a245d4f6-c909-47c4-ad0e-5c04481bfcc4]
    >   ----
    >   Server [2b107de4-5a9f-4269-bc7f-f534d3fdbef6]
    >   ----
    >   Server [8f3e2d1e-9306-4e2a-8100-5c454508414a]
    >   ----
    >   Server [586aa999-39ea-4391-a1af-b380e964d35b]
    >   ----
    >   Server [adcfa9c9-9d42-4196-aa5e-f9e029a1c8a6]


# -----------------------------------------------------
# Release our router ports (using JQ foo).
#[user@openstacker]

    for routerid in $(
        openstack \
            --os-cloud "${cloudname:?}" \
            router list \
                --format json \
        | jq -r '.[] | select(.Name | test("'${regex:?}'")) | .ID'
        )
    do
        echo "----"
        echo "Router [${routerid:?}]"

        for portid in $(
            openstack \
                --os-cloud "${cloudname:?}" \
                port list \
                    --router "${routerid:?}" \
                    --format json \
            | jq -r '.[] | .ID'
            )
        do
            echo "Port   [${portid:?}]"
            openstack \
                --os-cloud "${cloudname:?}" \
                router remove port \
                    "${routerid:?}" \
                    "${portid:?}"            
        done
    done

    >   ----
    >   Router [b892b0ca-218c-4864-9a20-a544f07ed7e8]
    >   Port   [8fed375c-6cd8-4493-b805-1bb8148ecd3a]


# -----------------------------------------------------
# Delete our routers (using JQ foo).
#[user@openstacker]

    for routerid in $(
        openstack \
            --os-cloud "${cloudname:?}" \
            router list \
                --format json \
        | jq -r '.[] | select(.Name | test("'${regex:?}'")) | .ID'
        )
    do
        echo "----"
        echo "Router [${routerid:?}]"
        openstack \
            --os-cloud "${cloudname:?}" \
            router delete \
                "${routerid:?}"
    done

    >   ----
    >   Router [b892b0ca-218c-4864-9a20-a544f07ed7e8]


# -----------------------------------------------------
# Delete our networks.
#[user@openstacker]

    for networkid in $(
        openstack \
            --os-cloud "${cloudname:?}" \
            network list \
                --format json \
        | jq -r '.[] | select(.Name | test("'${regex:?}'")) | .ID'
        )
    do
        echo "----"
        echo "Network [${networkid:?}]"
        openstack \
            --os-cloud "${cloudname:?}" \
            network delete \
                "${networkid:?}"
    done

    >   ----
    >   Network [dca34b1f-1a0f-4680-a554-e399a9e6a1bf]


# -----------------------------------------------------
# Delete our security groups.
#[user@openstacker]

    for groupid in $(
        openstack \
            --os-cloud "${cloudname:?}" \
            security group list \
                --format json \
        | jq -r '.[] | select(.Name | test("'${regex:?}'")) | .ID'
        )
    do
        echo "----"
        echo "Group [${groupid:?}]"
        openstack \
            --os-cloud "${cloudname:?}" \
            security group delete \
                "${groupid:?}"
    done

    >   ----
    >   Group [11d6e2cd-abae-4260-a8df-26fd9afc66b8]
    >   ----
    >   Group [6a31ed30-048c-4c8c-9d84-40bc2d542e7d]
    >   ----
    >   Group [b3002e36-937f-4a2d-b725-beed224f1441]


# -----------------------------------------------------
# Release all the floating IP addresses.
#[user@openstacker]

    for addressid in $(
        openstack \
            --os-cloud "${cloudname:?}" \
            floating ip list \
                --format json \
        | jq -r '.[] | .ID'
        )
    do
        echo "----"
        echo "Address [${addressid:?}]"
        openstack \
            --os-cloud "${cloudname:?}" \
            floating ip delete \
                "${addressid:?}"
    done

    >   ----
    >   Address [9c3995dc-e55a-4978-892d-3c7f1de75688]



