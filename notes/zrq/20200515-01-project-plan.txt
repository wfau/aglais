#
# <meta:header>
#   <meta:licence>
#     Copyright (c) 2020, ROE (http://www.roe.ac.uk/)
#
#     This information is free software: you can redistribute it and/or modify
#     it under the terms of the GNU General Public License as published by
#     the Free Software Foundation, either version 3 of the License, or
#     (at your option) any later version.
#
#     This information is distributed in the hope that it will be useful,
#     but WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#     GNU General Public License for more details.
#
#     You should have received a copy of the GNU General Public License
#     along with this program.  If not, see <http://www.gnu.org/licenses/>.
#   </meta:licence>
# </meta:header>
#
#


    Robust system that users can login and use.
    With get/put notebooks to external repository like GitHub.
    With data staging space within the system.


    Single user only
        Zeppelin acts as gateway
            Manual username and passowrd
            OAuth REST API for login

        Controlled by a calendar showing when they are booked
            Registration system
                Manual edits to JSON file
                    Contact process for allocating time.
                Online database booking system
                    Multi-user login to make the bookings
                    Login to calendar and login to Zeppelin

        Data staging space for results
            Does this outlast their visit ?
                Yes - need multi user storage
                Nope - need to wipe data on re-allocation


        Resource allocation
            One size fits all
                Manual edits of config files
                Automated updates to config files

            Differnt sizes for differet tasks
                Curated set of example tasks
                    Resources required for each
                Manual edits of config files
                Automated updates to config files

            Resource limit tests
                Push it to the limit
                    Document what happens
                    Document how to recover



    Multiple user (sequential)
        Zeppelin acts as gateway
            Manual username and passowrd
            OAuth REST API for login

        Controlled by a calendar showing when they are booked
            As above

        Resource allocation
            As above
                Everyone gets the same or quotas determined by task

        Jobs run with user id
        Compute resources allocated with user id
        Storage resources allocated with user id

    Multiple user (concurrent)
        As above

        More compute resources
        Everyone gets a separate copy of the system
            Needed to support binary libraries






