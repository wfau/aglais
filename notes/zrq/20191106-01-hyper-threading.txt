#
# <meta:header>
#   <meta:licence>
#     Copyright (c) 2018, ROE (http://www.roe.ac.uk/)
#
#     This information is free software: you can redistribute it and/or modify
#     it under the terms of the GNU General Public License as published by
#     the Free Software Foundation, either version 3 of the License, or
#     (at your option) any later version.
#
#     This information is distributed in the hope that it will be useful,
#     but WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#     GNU General Public License for more details.
#
#     You should have received a copy of the GNU General Public License
#     along with this program.  If not, see <http://www.gnu.org/licenses/>.
#   </meta:licence>
# </meta:header>
#
#zrq-notes-indent
#zrq-notes-ansible
#


OpenStack - Architecture requirements, choosing a CPU.
https://docs.openstack.org/arch-design/design-compute/design-compute-cpu.html

    "Hyper-Threading is Intel’s proprietary simultaneous multithreading
    implementation used to improve parallelization on their CPUs. You might
    consider enabling Hyper-Threading to improve the performance of
    multithreaded applications."

OpenStack - HypervisorTuningGuide
https://wiki.openstack.org/wiki/Documentation/HypervisorTuningGuide

    Simultaneous Multithreading
    "Simultaneous multithreading (SMT), commonly known as Hyper-threading
    in Intel CPUs, is a technology that enables the Operating System to see
    a single core / CPU as two cores / CPUs."

    "It's important to understand that SMT will not make jobs run faster.
    Rather, it will allow two jobs to run simultaneously where only one job
    would have run before. Thus, SMT, in some cases, can increase the amount
    of completed jobs within the same time span than if it was turned off.
    CERN has seen a throughput increase of 20% with SMT enabled
    ([http://openstack-in-production.blogspot.com/2015/08/openstack-cpu-topology-for-high.html]).

OpenStack - Mitigation for MDS (“Microarchitectural Data Sampling”) Security Flaws
https://docs.openstack.org/nova/latest/admin/mitigation-for-Intel-MDS-security-flaws.html

    "In May 2019, four new microprocessor flaws, known as MDS, have been
    discovered. These flaws affect unpatched Nova compute nodes and instances
    running on Intel x86_64 CPUs. (The said MDS security flaws are also referred
    to as RIDL [https://mdsattacks.com/] and Fallout or ZombieLoad
    [https://zombieloadattack.com/])."

RedHat - Microarchitectural Data Sampling
    CVE-2018-12130, CVE-2018-12126,
    CVE-2018-12127, and CVE-2019-11091
https://access.redhat.com/security/vulnerabilities/mds

    Overview - Executive Summary
    "Four new microprocessor flaws have been discovered, the most severe
    of which is rated by Red Hat Product Security as having an Important
    impact. These flaws, if exploited by an attacker with local shell
    access to a system, could allow data in the CPU’s cache to be exposed
    to unauthorized processes. While difficult to execute, a skilled attacker
    could use these flaws to read memory from a virtual or containerized
    instance, or the underlying host system."

    Resolve - Performance Impact and Disabling MDS
    "The MDS CVE mitigations have shown to cause a performance impact.
    The impact will be felt more in applications with high rates of
    user-kernel-user space transitions. For example system calls, NMIs,
    and interrupts."


RedHat - L1TF - L1 Terminal Fault Attack - CVE-2018-3620 & CVE-2018-3646
https://access.redhat.com/security/vulnerabilities/L1TF

    "Red Hat has been made aware of a new computer microprocessor hardware
    implementation (microarchitecture) issue similar to Spectre and Meltdown
    which has been reported to affect x86 microprocessors manufactured by Intel."

RedHat - Performance considerations for L1 Terminal Fault
https://access.redhat.com/security/vulnerabilities/L1TF-perf

    "The Red Hat Performance Engineering team worked with our security
    and kernel engineering teams to measure the performance impact from
    L1 Terminal Fault (L1TF) on various workloads."

RedHat - Considerations for OpenStack and L1TF
https://access.redhat.com/articles/3569281

    "The degree of risk to OpenStack deployments from L1TF is contingent
    on the way Hyper-Threading is used by guests. Nova has a number of
    CPU placement policies which will affect this:"



