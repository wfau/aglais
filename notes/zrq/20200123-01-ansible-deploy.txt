#
# <meta:header>
#   <meta:licence>
#     Copyright (c) 2020, ROE (http://www.roe.ac.uk/)
#
#     This information is free software: you can redistribute it and/or modify
#     it under the terms of the GNU General Public License as published by
#     the Free Software Foundation, either version 3 of the License, or
#     (at your option) any later version.
#
#     This information is distributed in the hope that it will be useful,
#     but WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#     GNU General Public License for more details.
#
#     You should have received a copy of the GNU General Public License
#     along with this program.  If not, see <http://www.gnu.org/licenses/>.
#   </meta:licence>
# </meta:header>
#
#

# -----------------------------------------------------
# Allow podman container to use the SSH authentication socket on our desktop.
# https://osric.com/chris/accidental-developer/2017/11/selinux-audit2why-audit2allow-policy-files/
# https://stackoverflow.com/a/52326925
#[user@desktop]

    #
    # See 20200222-01-ansible-deploy.txt
    #

# -----------------------------------------------------
# Create a container to work with.
#[user@desktop]

    source "${HOME}/aglais.settings"

    podman run \
        --rm \
        --tty \
        --interactive \
        --hostname ansibler \
        --env SSH_AUTH_SOCK=/tmp/ssh_auth_sock \
        --volume "${SSH_AUTH_SOCK}:/tmp/ssh_auth_sock:z" \
        --volume "${HOME}/clouds.yaml:/etc/openstack/clouds.yaml:z" \
        --volume "${AGLAIS_CODE:?}/experiments/zrq/ansible:/tmp/ansible:z" \
        atolmis/ansible-client:latest \
        bash


# -----------------------------------------------------
# Create our config file.
#[root@ansibler]

    cat > /tmp/ansible-vars.yml << EOF

buildtag:  'aglais-$(date '+%Y%m%d')'
cloudname: 'gaia-prod'

EOF


# -----------------------------------------------------
# Create our internal network.
#[root@ansibler]

    ansible-playbook \
        --inventory "/tmp/ansible/hosts.yml" \
        "/tmp/ansible/01-create-network.yml"


    >   PLAY [Create our internal network] ..
    >
    >   TASK [Gathering Facts] ..
    >   ok: [localhost]
    >
    >   TASK [Create our internal network] ..
    >   changed: [localhost]
    >
    >   TASK [Create a subnet for our internal network] ..
    >   changed: [localhost]
    >
    >   TASK [Create a router for our internal network] ..
    >   changed: [localhost]
    >
    >   PLAY RECAP ..
    >   localhost                  : ok=4    changed=3    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0

# -----------------------------------------------------
# Create our gateway node.
#[root@ansibler]

    ansible-playbook \
        --inventory "/tmp/ansible/hosts.yml" \
        "/tmp/ansible/02-create-gateway.yml"

    >   PLAY [Create our gateway node] ..
    >
    >   TASK [Gathering Facts] ..
    >   ok: [localhost]
    >
    >   TASK [Create a security group for our gateway node.] ..
    >   changed: [localhost]
    >
    >   TASK [Add a security rule for IPv4 SSH.] ..
    >   changed: [localhost]
    >
    >   TASK [Add a security rule for IPv6 SSH.] ..
    >   changed: [localhost]
    >
    >   TASK [Create our gateway node.] ..
    >   changed: [localhost]
    >
    >   TASK [Assign a floating IP address to our gateway node.] ..
    >   changed: [localhost]
    >
    >   TASK [Apply the gateway security group to our floating IP address.] ..
    >   ok: [localhost]
    >
    >   TASK [Generate a ssh config for our gateway node.] ..
    >   changed: [localhost]
    >
    >   TASK [Generate the DNS records our gateway node.] ..
    >   changed: [localhost]
    >
    >   PLAY RECAP ..
    >   localhost                  : ok=9    changed=7    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0


# -----------------------------------------------------
# Create our master nodes.
#[root@ansibler]

    ansible-playbook \
        --inventory "/tmp/ansible/hosts.yml" \
        "/tmp/ansible/03-create-masters.yml"

    >   PLAY [Check/create master nodes] ..
    >
    >   TASK [Gathering Facts] ..
    >   ok: [localhost]
    >
    >   TASK [Create a security group for our master nodes.] ..
    >   changed: [localhost]
    >
    >   TASK [Add a security rule to allow ssh from our gateway.] ..
    >   changed: [localhost]
    >
    >   TASK [Create our master nodes.] ..
    >   changed: [localhost] => (item=master01)
    >   changed: [localhost] => (item=master02)
    >
    >   TASK [Generate a ssh config for our master nodes.] ..
    >   changed: [localhost]
    >
    >   TASK [Generate the DNS records our master nodes.] ..
    >   changed: [localhost]
    >
    >   PLAY RECAP ..
    >   localhost                  : ok=6    changed=5    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0


# -----------------------------------------------------
# Create our worker nodes.
#[root@ansibler]

    ansible-playbook \
        --inventory "/tmp/ansible/hosts.yml" \
        "/tmp/ansible/04-create-workers.yml"

    >   PLAY [Check/create worker nodes] ..
    >
    >   TASK [Gathering Facts] ..
    >   ok: [localhost]
    >
    >   TASK [Create a security group for our worker nodes.] ..
    >   changed: [localhost]
    >
    >   TASK [Add a security rule to allow ssh from our gateway.] ..
    >   changed: [localhost]
    >
    >   TASK [Create our worker nodes.] ..
    >   changed: [localhost] => (item=worker01)
    >   changed: [localhost] => (item=worker02)
    >   changed: [localhost] => (item=worker03)
    >   changed: [localhost] => (item=worker04)
    >   changed: [localhost] => (item=worker05)
    >   changed: [localhost] => (item=worker06)
    >
    >   TASK [Generate a ssh config for our worker nodes.] ..
    >   changed: [localhost]
    >
    >   TASK [Generate the DNS records our worker nodes.] ..
    >   changed: [localhost]
    >
    >   PLAY RECAP ..
    >   localhost                  : ok=6    changed=5    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0


# -----------------------------------------------------
# Assemble our SSH config file.
#[root@ansibler]

    ansible-playbook \
        --inventory "/tmp/ansible/hosts.yml" \
        "/tmp/ansible/05-configure-ssh.yml"


    >   PLAY [Create our SSH config file.] ..
    >
    >   TASK [Gathering Facts] ..
    >   ok: [localhost]
    >
    >   TASK [Generate our ssh config header.] ..
    >   changed: [localhost]
    >
    >   TASK [Check our local ssh directory.] ..
    >   ok: [localhost]
    >
    >   TASK [Assemble our SSH config file.] ..
    >   changed: [localhost]
    >
    >   PLAY RECAP ..
    >   localhost                  : ok=4    changed=2    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0


# -----------------------------------------------------
# Check our SSH config file.
#[root@ansibler]

    ls -al "${HOME}/.ssh/ansible-config"

    >   -rw-------. 1 root root 4038 Jan 23 04:15 /root/.ssh/ansible-config


    cat "${HOME}/.ssh/ansible-config"

    >   # Global settings
    >   ForwardAgent yes
    >   ForwardX11   no
    >   PasswordAuthentication no
    >   ServerAliveInterval 60
    >   ServerAliveCountMax 5
    >
    >   #### ---- ---- ####
    >
    >   # Gateway host.
    >   Host gateway
    >       User fedora
    >       HostName 128.232.227.130
    >       ControlPath ~/.ssh/%r@%h:%p
    >       ControlMaster auto
    >       ControlPersist 5m
    >
    >   #### ---- ---- ####
    >
    >   # Master nodes
    >   Host master01
    >       User fedora
    >       ProxyCommand ssh -W %h:%p -l fedora -F /root/.ssh/ansible-config gateway
    >       ControlPath ~/.ssh/%r@%h:%p
    >       ControlMaster auto
    >       ControlPersist 5m
    >
    >   Host master02
    >       User fedora
    >       ProxyCommand ssh -W %h:%p -l fedora -F /root/.ssh/ansible-config gateway
    >       ControlPath ~/.ssh/%r@%h:%p
    >       ControlMaster auto
    >       ControlPersist 5m
    >
    >   #### ---- ---- ####
    >
    >   # Worker nodes
    >   Host worker01
    >       User fedora
    >       ProxyCommand ssh -W %h:%p -l fedora -F /root/.ssh/ansible-config gateway
    >       ControlPath ~/.ssh/%r@%h:%p
    >       ControlMaster auto
    >       ControlPersist 5m
    >
    >   Host worker02
    >       User fedora
    >       ProxyCommand ssh -W %h:%p -l fedora -F /root/.ssh/ansible-config gateway
    >       ControlPath ~/.ssh/%r@%h:%p
    >       ControlMaster auto
    >       ControlPersist 5m
    >
    >   Host worker03
    >       User fedora
    >       ProxyCommand ssh -W %h:%p -l fedora -F /root/.ssh/ansible-config gateway
    >       ControlPath ~/.ssh/%r@%h:%p
    >       ControlMaster auto
    >       ControlPersist 5m
    >
    >   Host worker04
    >       User fedora
    >       ProxyCommand ssh -W %h:%p -l fedora -F /root/.ssh/ansible-config gateway
    >       ControlPath ~/.ssh/%r@%h:%p
    >       ControlMaster auto
    >       ControlPersist 5m
    >
    >   Host worker05
    >       User fedora
    >       ProxyCommand ssh -W %h:%p -l fedora -F /root/.ssh/ansible-config gateway
    >       ControlPath ~/.ssh/%r@%h:%p
    >       ControlMaster auto
    >       ControlPersist 5m
    >
    >   Host worker06
    >       User fedora
    >       ProxyCommand ssh -W %h:%p -l fedora -F /root/.ssh/ansible-config gateway
    >       ControlPath ~/.ssh/%r@%h:%p
    >       ControlMaster auto
    >       ControlPersist 5m


# -----------------------------------------------------
# Assemble our DNS config file.
#[root@ansibler]

    ansible-playbook \
        --inventory "/tmp/ansible/hosts.yml" \
        "/tmp/ansible/06-configure-dns.yml"

    >   PLAY [Create our DNS config file.] ..
    >
    >   TASK [Gathering Facts] ..
    >   ok: [localhost]
    >
    >   TASK [Generate our DNS config header.] ..
    >   changed: [localhost]
    >
    >   TASK [Assemble our DNS config file.] ..
    >   changed: [localhost]
    >
    >   PLAY RECAP ..
    >   localhost                  : ok=3    changed=2    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0


    cat "/tmp/aglais-hosts"

    >   # Localhost addresses.
    >   127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4
    >   ::1         localhost localhost.localdomain localhost6 localhost6.localdomain6
    >
    >   #### ---- ---- ####
    >
    >   # Gateway node.
    >   10.10.0.26       gateway
    >
    >   #### ---- ---- ####
    >
    >   # Master nodes
    >   10.10.0.16       master01
    >   10.10.0.18       master02
    >
    >   #### ---- ---- ####
    >
    >   # Worker nodes
    >   10.10.0.21       worker01
    >   10.10.0.12       worker02
    >   10.10.0.6        worker03
    >   10.10.0.11       worker04
    >   10.10.0.22       worker05
    >   10.10.0.13       worker06


# -----------------------------------------------------
# Deploy our DNS config file.
# (pushd to find the ansible.cfg file)
#[root@ansibler]

    pushd /tmp/ansible

        ansible-playbook \
            --inventory "hosts.yml" \
            "07-deploy-dns.yml"

    popd

    >   PLAY [gateway] ..
    >
    >   TASK [Deploy our /etc/hosts file to our gateway.] ..
    >   ok: [gateway]
    >
    >   PLAY [masters:workers] ..
    >
    >   TASK [Deploy our /etc/hosts file to our internal hosts.] ..
    >   changed: [master01]
    >   changed: [worker03]
    >   changed: [worker01]
    >   changed: [master02]
    >   changed: [worker02]
    >   changed: [worker05]
    >   changed: [worker04]
    >   changed: [worker06]
    >
    >   PLAY RECAP ..
    >   gateway                    : ok=1    changed=0    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0
    >   master01                   : ok=1    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0
    >   master02                   : ok=1    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0
    >   worker01                   : ok=1    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0
    >   worker02                   : ok=1    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0
    >   worker03                   : ok=1    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0
    >   worker04                   : ok=1    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0
    >   worker05                   : ok=1    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0
    >   worker06                   : ok=1    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0


# -----------------------------------------------------
# Deploy our DNS config file.
# (ANSIBLE_CONFIG to find the ansible.cfg file)
#[root@ansibler]

    ANSIBLE_CONFIG=/tmp/ansible/ansible.cfg

    ansible-playbook \
    --inventory "/tmp/ansible/hosts.yml" \
        "/tmp/ansible/07-deploy-dns.yml"



    >   PLAY [gateway] ..
    >
    >   TASK [Deploy our /etc/hosts file to our gateway.] ..
    >   ok: [gateway]
    >
    >   PLAY [masters:workers] ..
    >
    >   TASK [Deploy our /etc/hosts file to our internal hosts.] ..
    >   changed: [master01]
    >   changed: [worker03]
    >   changed: [worker01]
    >   changed: [master02]
    >   changed: [worker02]
    >   changed: [worker05]
    >   changed: [worker04]
    >   changed: [worker06]
    >
    >   PLAY RECAP ..
    >   gateway                    : ok=1    changed=0    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0
    >   master01                   : ok=1    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0
    >   master02                   : ok=1    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0
    >   worker01                   : ok=1    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0
    >   worker02                   : ok=1    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0
    >   worker03                   : ok=1    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0
    >   worker04                   : ok=1    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0
    >   worker05                   : ok=1    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0
    >   worker06                   : ok=1    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0


    #
    # TODO
    # Use /mnt rather than /tmp for volume mounts.
    # cd or pushd into /mnt/ansible to run Ansible.
    # create and deploy DNS config in one playbook
    #


