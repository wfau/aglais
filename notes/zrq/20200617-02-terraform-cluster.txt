#
# <meta:header>
#   <meta:licence>
#     Copyright (c) 2020, ROE (http://www.roe.ac.uk/)
#
#     This information is free software: you can redistribute it and/or modify
#     it under the terms of the GNU General Public License as published by
#     the Free Software Foundation, either version 3 of the License, or
#     (at your option) any later version.
#
#     This information is distributed in the hope that it will be useful,
#     but WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#     GNU General Public License for more details.
#
#     You should have received a copy of the GNU General Public License
#     along with this program.  If not, see <http://www.gnu.org/licenses/>.
#   </meta:licence>
# </meta:header>
#
#

# -----------------------------------------------------
# Create a container to work with.
#[user@desktop]

    podman run \
        --rm \
        --tty \
        --interactive \
        --hostname openstacker \
        --volume "${HOME}/clouds.yaml:/etc/openstack/clouds.yaml:z" \
        atolmis/openstack-client \
        bash


# -----------------------------------------------------
# Set the project and cluster names.
#[user@openstacker]

    cloudname=gaia-prod
    clustername=Tiberius


# -----------------------------------------------------
# Install Terraform.
# https://www.terraform.io/downloads.html
# https://github.com/RSE-Cambridge/iris-magnum/blob/master/magnum-tour/README.md
# https://computingforgeeks.com/how-to-install-terraform-on-fedora/
#[user@openstacker]

    terraver=0.12.26
    terrazip=terraform_${terraver:?}_linux_amd64.zip

    pushd $(mktemp -d)

        wget  "https://releases.hashicorp.com/terraform/${terraver:?}/${terrazip:?}"
        unzip "${terrazip:?}"

        mv terraform /usr/local/bin/

    popd

    which terraform

    >   /usr/local/bin/terraform


# -----------------------------------------------------
# Clone the StackHPC examples.
#[user@openstacker]

    pushd "${HOME}"

        git clone 'https://github.com/RSE-Cambridge/iris-magnum.git'

    popd


# -----------------------------------------------------
# Fetch our public key from OpenStack.
#[user@openstacker]

    openstack \
        --os-cloud "${cloudname:?}" \
            keypair list

    >   +------------------+-------------------------------------------------+
    >   | Name             | Fingerprint                                     |
    >   +------------------+-------------------------------------------------+
    >   | zrq-gaia-keypair | a4:8b:f3:0a:31:eb:93:b2:98:62:c5:d2:02:31:0f:b4 |
    >   +------------------+-------------------------------------------------+


    keyname=$(
        openstack \
        --os-cloud "${cloudname:?}" \
            keypair list \
                --format json \
        | jq -r '.[0] | .Name'
        )

    keyfile=/root/.ssh/id_rsa.pub
    mkdir $(dirname ${keyfile})

    openstack \
        --os-cloud "${cloudname:?}" \
            keypair show \
            --public-key \
            "${keyname:?}" \
    | tee "${keyfile:?}"

    >   ssh-rsa AAAAB3Nz........zV4ksPOL

    # The StachHPC module expects this.
    # Difficult to customise the filename.


# -----------------------------------------------------
# Use the unrestricted cloud credentials.
#[user@openstacker]

    # The Terraform module expects this ?

    export OS_CLOUD="${cloudname:?}-super"


# -----------------------------------------------------
# Run Terraform to deploy the example cluster.
#[user@openstacker]

    pushd "${HOME}/iris-magnum"
        pushd 'terraform/examples/cluster'

            terraform init

    >   Initializing modules...
    >   - cluster in ../../modules/cluster
    >   
    >   Initializing the backend...
    >   
    >   Initializing provider plugins...
    >   - Checking for available provider plugins...
    >   - Downloading plugin for provider "null" (hashicorp/null) 2.1.2...
    >   - Downloading plugin for provider "openstack" (terraform-providers/openstack) 1.28.0...
    >   
    >   ....
    >   ....


            terraform plan

    >   Refreshing Terraform state in-memory prior to plan...
    >   The refreshed state will be used to calculate this plan, but will not be
    >   persisted to local or remote state storage.
    >   
    >   module.cluster.data.openstack_containerinfra_clustertemplate_v1.clustertemplate: Refreshing state...
    >   
    >   ------------------------------------------------------------------------
    >   
    >   An execution plan has been generated and is shown below.
    >   Resource actions are indicated with the following symbols:
    >     + create
    >   
    >   Terraform will perform the following actions:
    >   
    >     # module.cluster.null_resource.kubeconfig will be created
    >     + resource "null_resource" "kubeconfig" {
    >         + id       = (known after apply)
    >         + triggers = {
    >             + "kubeconfig" = "my-test"
    >           }
    >       }
    >   
    >     # module.cluster.openstack_compute_keypair_v2.keypair will be created
    >     + resource "openstack_compute_keypair_v2" "keypair" {
    >         + fingerprint = (known after apply)
    >         + id          = (known after apply)
    >         + name        = "my-test"
    >         + private_key = (known after apply)
    >         + public_key  = <<~EOT
    >               ssh-rsa AAAAB3Nz........zV4ksPOL
    >           EOT
    >         + region      = (known after apply)
    >       }
    >   
    >     # module.cluster.openstack_containerinfra_cluster_v1.cluster will be created
    >     + resource "openstack_containerinfra_cluster_v1" "cluster" {
    >         + api_address         = (known after apply)
    >         + cluster_template_id = "d54167d9-495f-437e-88fe-d182b2a230ea"
    >         + coe_version         = (known after apply)
    >         + container_version   = (known after apply)
    >         + create_timeout      = (known after apply)
    >         + created_at          = (known after apply)
    >         + discovery_url       = (known after apply)
    >         + docker_volume_size  = (known after apply)
    >         + fixed_network       = (known after apply)
    >         + fixed_subnet        = (known after apply)
    >         + flavor              = "general.v1.tiny"
    >         + id                  = (known after apply)
    >         + keypair             = (known after apply)
    >         + kubeconfig          = (sensitive value)
    >         + labels              = {
    >             + "auto_healing_controller"       = "magnum-auto-healer"
    >             + "auto_healing_enabled"          = "true"
    >             + "auto_scaling_enabled"          = "true"
    >             + "autoscaler_tag"                = "v1.15.2"
    >             + "cloud_provider_tag"            = "v1.15.0"
    >             + "etcd_tag"                      = "3.3.17"
    >             + "heat_container_agent_tag"      = "train-stable-1"
    >             + "kube_tag"                      = "v1.15.9"
    >             + "master_lb_floating_ip_enabled" = "true"
    >             + "max_node_count"                = "2"
    >             + "min_node_count"                = "1"
    >             + "monitoring_enabled"            = "true"
    >             + "tiller_enabled"                = "true"
    >             + "tiller_tag"                    = "v2.16.1"
    >             + "use_podman"                    = "true"
    >           }
    >         + master_addresses    = (known after apply)
    >         + master_count        = 1
    >         + master_flavor       = "general.v1.tiny"
    >         + name                = "my-test"
    >         + node_addresses      = (known after apply)
    >         + node_count          = 1
    >         + project_id          = (known after apply)
    >         + region              = (known after apply)
    >         + stack_id            = (known after apply)
    >         + updated_at          = (known after apply)
    >         + user_id             = (known after apply)
    >       }
    >   
    >   Plan: 3 to add, 0 to change, 0 to destroy.
    >   
    >   ------------------------------------------------------------------------
    >   
    >   Note: You didn't specify an "-out" parameter to save this plan, so Terraform
    >   can't guarantee that exactly these actions will be performed if
    >   "terraform apply" is subsequently run.


            terraform apply

    >   ....
    >   ....
    >   
    >   Plan: 3 to add, 0 to change, 0 to destroy.
    >   
    >   Do you want to perform these actions?
    >     Terraform will perform the actions described above.
    >     Only 'yes' will be accepted to approve.
    >   
    >     Enter a value: yes
    >   
    >   module.cluster.openstack_compute_keypair_v2.keypair: Creating...
    >   module.cluster.openstack_compute_keypair_v2.keypair: Creation complete after 1s [id=my-test]
    >   module.cluster.openstack_containerinfra_cluster_v1.cluster: Creating...
    >   module.cluster.openstack_containerinfra_cluster_v1.cluster: Still creating... [10s elapsed]
    >   
    >   ....
    >   ....
    >   
    >   module.cluster.openstack_containerinfra_cluster_v1.cluster: Still creating... [30s elapsed]
    >   module.cluster.openstack_containerinfra_cluster_v1.cluster: Still creating... [40s elapsed]
    >   module.cluster.openstack_containerinfra_cluster_v1.cluster: Still creating... [50s elapsed]
    >   module.cluster.openstack_containerinfra_cluster_v1.cluster: Still creating... [1m0s elapsed]
    >   
    >   Error: Error waiting for openstack_containerinfra_cluster_v1 48cad944-62b7-496e-a77b-85494fb2516a to become ready: json: cannot unmarshal object into Go struct field Cluster.health_status_reason of type string
    >   
    >     on ../../modules/cluster/main.tf line 14, in resource "openstack_containerinfra_cluster_v1" "cluster":
    >     14: resource "openstack_containerinfra_cluster_v1" "cluster" {
    >   



# -----------------------------------------------------
# List our clusters.
#[user@openstacker]

    openstack \
        --os-cloud "${cloudname:?}" \
        coe cluster list

    >   +--------------------------------------+----------+------------------+------------+--------------+-----------------+
    >   | uuid                                 | name     | keypair          | node_count | master_count | status          |
    >   +--------------------------------------+----------+------------------+------------+--------------+-----------------+
    >   | ec2bca46-5098-43c8-8647-f4bce1370d68 | Augustus | zrq-gaia-keypair |          4 |            2 | CREATE_COMPLETE |
    >   | 48cad944-62b7-496e-a77b-85494fb2516a | my-test  | my-test          |          1 |            1 | CREATE_COMPLETE |
    >   +--------------------------------------+----------+------------------+------------+--------------+-----------------+


# -----------------------------------------------------
# Get the details for our new cluster.
#[user@openstacker]


    clusterid=$(
        openstack \
        --os-cloud "${cloudname:?}" \
            coe cluster list \
                --format json \
        | jq -r '.[1] | .uuid'
        )


    openstack \
        --os-cloud "${cloudname:?}" \
        coe cluster show \
            "${clusterid}"

    >   +---------------------+---------------------------------------------------------------------------------------+
    >   | Field               | Value                                                                                 |
    >   +---------------------+---------------------------------------------------------------------------------------+
    >   | status              | CREATE_COMPLETE                                                                       |
    >   | cluster_template_id | d54167d9-495f-437e-88fe-d182b2a230ea                                                  |
    >   | node_addresses      | ['10.0.0.219']                                                                        |
    >   | uuid                | 48cad944-62b7-496e-a77b-85494fb2516a                                                  |
    >   | stack_id            | 110498d1-d256-4ca9-a868-11a97266ba5e                                                  |
    >   | status_reason       | None                                                                                  |
    >   | created_at          | 2020-06-17T19:21:06+00:00                                                             |
    >   | updated_at          | 2020-06-17T19:27:38+00:00                                                             |
    >   | coe_version         | v1.15.9                                                                               |
    >   | labels              | {'auto_healing_controller': 'magnum-auto-healer' .... 'auto_scaling_enabled': 'true'} |
    >   | faults              |                                                                                       |
    >   | keypair             | my-test                                                                               |
    >   | api_address         | https://128.232.227.204:6443                                                          |
    >   | master_addresses    | ['10.0.0.19']                                                                         |
    >   | create_timeout      | None                                                                                  |
    >   | node_count          | 1                                                                                     |
    >   | discovery_url       | https://discovery.etcd.io/737fecdfdfb731a8632b43d6638a4109                            |
    >   | master_count        | 1                                                                                     |
    >   | container_version   | 1.12.6                                                                                |
    >   | name                | my-test                                                                               |
    >   | master_flavor_id    | general.v1.tiny                                                                       |
    >   | flavor_id           | general.v1.tiny                                                                       |
    >   +---------------------+---------------------------------------------------------------------------------------+


    openstack \
        --os-cloud "${cloudname:?}" \
        coe cluster show \
            "${clusterid}" \
                --format json \
    | jq '.'


    >   {
    >     "status": "CREATE_COMPLETE",
    >     "cluster_template_id": "d54167d9-495f-437e-88fe-d182b2a230ea",
    >     "node_addresses": [
    >       "10.0.0.219"
    >     ],
    >     "uuid": "48cad944-62b7-496e-a77b-85494fb2516a",
    >     "stack_id": "110498d1-d256-4ca9-a868-11a97266ba5e",
    >     "status_reason": null,
    >     "created_at": "2020-06-17T19:21:06+00:00",
    >     "updated_at": "2020-06-17T19:27:38+00:00",
    >     "coe_version": "v1.15.9",
    >     "labels": {
    >       "auto_healing_controller": "magnum-auto-healer",
    >       "max_node_count": "2",
    >       "cloud_provider_tag": "v1.15.0",
    >       "etcd_tag": "3.3.17",
    >       "monitoring_enabled": "true",
    >       "tiller_enabled": "true",
    >       "autoscaler_tag": "v1.15.2",
    >       "master_lb_floating_ip_enabled": "true",
    >       "min_node_count": "1",
    >       "tiller_tag": "v2.16.1",
    >       "use_podman": "true",
    >       "auto_healing_enabled": "true",
    >       "heat_container_agent_tag": "train-stable-1",
    >       "kube_tag": "v1.15.9",
    >       "auto_scaling_enabled": "true"
    >     },
    >     "faults": "",
    >     "keypair": "my-test",
    >     "api_address": "https://128.232.227.204:6443",
    >     "master_addresses": [
    >       "10.0.0.19"
    >     ],
    >     "create_timeout": null,
    >     "node_count": 1,
    >     "discovery_url": "https://discovery.etcd.io/737fecdfdfb731a8632b43d6638a4109",
    >     "master_count": 1,
    >     "container_version": "1.12.6",
    >     "name": "my-test",
    >     "master_flavor_id": "general.v1.tiny",
    >     "flavor_id": "general.v1.tiny"
    >   }

        popd
    popd



# -----------------------------------------------------
# Get the kubectl config for our cluster.
#[user@openstacker]

    cd "${HOME}"

    openstack \
        --os-cloud "${cloudname:?}" \
        coe cluster config \
            "${clusterid}"

    cat config


    >   ....
    >   ....


# -----------------------------------------------------
# Use kubectl to get details of our cluster.
#[user@openstacker]

    kubectl \
        --kubeconfig "${HOME}/config" \
        cluster-info

    >   apiVersion: v1
    >   clusters:
    >   - cluster:
    >       certificate-authority-data: LS0tLS1C........RS0tLS0t
    >       server: https://128.232.227.204:6443
    >     name: my-test
    >   contexts:
    >   - context:
    >       cluster: my-test
    >       user: admin
    >     name: default
    >   current-context: default
    >   kind: Config
    >   preferences: {}
    >   users:
    >   - name: admin
    >     user:
    >       client-certificate-data: LS0tLS1C....RS0tLS0t
    >       client-key-data: LS0tLS1C....0tLS0tCg==


    kubectl \
        --kubeconfig "${HOME}/config" \
        config  \
            get-contexts

    >   CURRENT   NAME      CLUSTER   AUTHINFO   NAMESPACE
    >   *         default   my-test   admin


# -----------------------------------------------------
# Run Terraform to destroy our cluster.
#[user@openstacker]

    pushd "${HOME}/iris-magnum"
        pushd 'terraform/examples/cluster'

            terraform destroy

        popd
    popd


    >   module.cluster.data.openstack_containerinfra_clustertemplate_v1.clustertemplate: Refreshing state...
    >   module.cluster.openstack_compute_keypair_v2.keypair: Refreshing state... [id=my-test]
    >   module.cluster.openstack_containerinfra_cluster_v1.cluster: Refreshing state... [id=48cad944-62b7-496e-a77b-85494fb2516a]
    >   
    >   Error: Error retrieving openstack_containerinfra_cluster_v1 48cad944-62b7-496e-a77b-85494fb2516a: json: cannot unmarshal object into Go struct field Cluster.health_status_reason of type string

    #
    # Terraform is broken ?
    #



