#
# <meta:header>
#   <meta:licence>
#     Copyright (c) 2020, ROE (http://www.roe.ac.uk/)
#
#     This information is free software: you can redistribute it and/or modify
#     it under the terms of the GNU General Public License as published by
#     the Free Software Foundation, either version 3 of the License, or
#     (at your option) any later version.
#
#     This information is distributed in the hope that it will be useful,
#     but WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#     GNU General Public License for more details.
#
#     You should have received a copy of the GNU General Public License
#     along with this program.  If not, see <http://www.gnu.org/licenses/>.
#   </meta:licence>
# </meta:header>
#
#

# -----------------------------------------------------
# Create a container to work with.
#[user@desktop]

    source "${HOME:?}/aglais.env"

    podman run \
        --rm \
        --tty \
        --interactive \
        --hostname openstacker \
        --env "cloudname=${AGLAIS_CLOUD:?}" \
        --env "clustername=${CLUSTER_NAME:?}" \
        --volume "${HOME}/clouds.yaml:/etc/openstack/clouds.yaml:z" \
        atolmis/openstack-client \
        bash


# -----------------------------------------------------
# Release and delete all our floating IP addresses.
#[user@openstacker]

    for floatingid in $(
        openstack \
            --os-cloud "${cloudname:?}" \
            floating ip list \
                --format json \
        | jq -r '.[] | .ID'
        )
        do
            echo "---- ----"
            echo "Floating IP [${floatingid:?}]"
            openstack \
                --os-cloud "${cloudname:?}" \
                floating ip unset \
                    "${floatingid}"

            openstack \
                --os-cloud "${cloudname:?}" \
                floating ip delete \
                    "${floatingid}"
        done

    >   ---- ----
    >   Floating IP [2606d867-45d1-4053-a4a0-9a1b6ea82a8d]
    >   ---- ----
    >   Floating IP [a9a71090-2b0c-4c14-9ec8-b2bcee38d17c]


# -----------------------------------------------------
# List our routers.
#[user@openstacker]

    openstack \
        --os-cloud "${cloudname:?}" \
        router list

    >   +--------------------------------------+----------------------------------------------------------------------------+--------+-------+----------------------------------+
    >   | ID                                   | Name                                                                       | Status | State | Project                          |
    >   +--------------------------------------+----------------------------------------------------------------------------+--------+-------+----------------------------------+
    >   | 24923c9b-5698-4b4b-9c3d-9a4a74c5b179 | tiberius-20200904-nj46yxjgkhty-network-nyxp326v4svv-extrouter-qsildxe5yukn | ACTIVE | UP    | 21b4ae3a2ea44bc5a9c14005ed2963af |
    >   | 9ac44f30-9039-44cc-b430-37a8775e0fde | tiberius-20200904-cluster-ceph-router                                      | ACTIVE | UP    | 21b4ae3a2ea44bc5a9c14005ed2963af |
    >   +--------------------------------------+----------------------------------------------------------------------------+--------+-------+----------------------------------+


# -----------------------------------------------------
# Identify and delete our routers by cluster name.
#[user@openstacker]

    # Note - the subnet name includes a lowercase version of the clustername.
    # So the 'jq' regex needs to convert ${clustername} to lowercase.

    regex=^${clustername~}

    for routerid in $(
        openstack \
            --os-cloud "${cloudname:?}" \
            router list \
                --format json \
        | jq -r '.[] | select(.Name | test("'${regex:?}'")) | .ID'
        )
    do

        echo "---- ---- ---- ----"
        echo "Router [${routerid:?}]"

        # Delete the router routes.
        for routedesc in $(
            openstack \
                --os-cloud "${cloudname:?}" \
                router show \
                    --format json \
                    "${routerid:?}" \
            | jq -r '.routes[] | "gateway=" + .nexthop + ",destination=" + .destination'
            )
        do
            echo "Route  [${routedesc:?}]"
            openstack \
                --os-cloud "${cloudname:?}" \
                router unset \
                    --route "${routedesc:?}" \
                    "${routerid:?}"
        done

        # Delete the router ports.
        for portid in $(
            openstack \
                --os-cloud "${cloudname:?}" \
                router show \
                    --format json \
                    "${routerid:?}" \
                | jq -r '.interfaces_info[].port_id'
                )
                do
                    echo "Port   [${portid}]"
                    openstack \
                        --os-cloud "${cloudname:?}" \
                        router remove port \
                            "${routerid:?}" \
                            "${portid:?}"
                done

        # Delete the router.
        echo "Router [${routerid:?}]"
        openstack \
            --os-cloud "${cloudname:?}" \
            router delete \
                "${routerid:?}"
    done


    >   ---- ---- ---- ----
    >   Router [24923c9b-5698-4b4b-9c3d-9a4a74c5b179]
    >   Route  [gateway=10.0.0.32,destination=10.206.0.0/16]
    >   Port   [dc8d46ca-18ed-4485-a7d3-987d60bd44e7]
    >   Router [24923c9b-5698-4b4b-9c3d-9a4a74c5b179]
    >   ---- ---- ---- ----
    >   Router [9ac44f30-9039-44cc-b430-37a8775e0fde]
    >   Port   [a90e5e82-521b-4133-a9c5-32c6e3913488]
    >   Router [9ac44f30-9039-44cc-b430-37a8775e0fde]


# -----------------------------------------------------
# Select and delete our cluster by name.
#[user@openstacker]

    # Note - the cluster name is NOT a lowercase version of the clustername.
    # So the 'jq' regex needs to use the original ${clustername}.

    regex=^${clustername}

    clusterid=$(
        openstack \
            --os-cloud "${cloudname:?}" \
            coe cluster list \
                --format json \
        | jq -r '.[] | select(.name | test("'${regex:?}'")) | .uuid'
        )

    echo "---- ---- ---- ----"
    echo "Cluster [${clusterid:?}]"

    openstack \
        --os-cloud "${cloudname:?}" \
        coe cluster \
            delete \
            "${clusterid:?}"


# -----------------------------------------------------
# Watch the cluster list.
#[user@openstacker]

    watch \
        openstack \
            --os-cloud "${cloudname:?}" \
            coe cluster list

    >   +--------------------------------------+-------------------+------------------+------------+--------------+--------------------+---------------+
    >   | uuid                                 | name              | keypair          | node_count | master_count | status             | health_status |
    >   +--------------------------------------+-------------------+------------------+------------+--------------+--------------------+---------------+
    >   | 2d92e83c-e69a-4be7-8c5f-e3e8400ad2d9 | Tiberius-20200904 | zrq-gaia-keypair |          4 |            1 | DELETE_IN_PROGRESS | UNHEALTHY     |
    >   +--------------------------------------+-------------------+------------------+------------+--------------+--------------------+---------------+


# -----------------------------------------------------
# Check the remaining resources.
#[user@openstacker]

    openstack \
        --os-cloud "${cloudname:?}" \
        server list

    openstack \
        --os-cloud "${cloudname:?}" \
        volume list

    openstack \
        --os-cloud "${cloudname:?}" \
        router list

    openstack \
        --os-cloud "${cloudname:?}" \
        port list

    openstack \
        --os-cloud "${cloudname:?}" \
        floating ip list

    openstack \
        --os-cloud "${cloudname:?}" \
        loadbalancer list

    openstack \
        --os-cloud "${cloudname:?}" \
        network list

    >   +--------------------------------------+------------------+----------------------------------------------------------------------------+
    >   | ID                                   | Name             | Subnets                                                                    |
    >   +--------------------------------------+------------------+----------------------------------------------------------------------------+
    >   | a929e8db-1bf4-4a5f-a80c-fabd39d06a26 | internet         | 180dc961-c52f-461a-b241-8f7a30d022a5, 273123bb-70f6-4f51-a406-7fc4b446532d |
    >   | ecb791d5-1022-447a-a79c-8f38a0f5c990 | cumulus-internal | 01b76c7c-3c1a-4c5c-9a5a-14bcf6c0c290                                       |
    >   +--------------------------------------+------------------+----------------------------------------------------------------------------+

    openstack \
        --os-cloud "${cloudname:?}" \
        keypair list

    >   +------------------+-------------------------------------------------+
    >   | Name             | Fingerprint                                     |
    >   +------------------+-------------------------------------------------+
    >   | zrq-gaia-keypair | a4:8b:f3:0a:31:eb:93:b2:98:62:c5:d2:02:31:0f:b4 |
    >   +------------------+-------------------------------------------------+








