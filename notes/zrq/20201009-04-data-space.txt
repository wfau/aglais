#
# <meta:header>
#   <meta:licence>
#     Copyright (c) 2020, ROE (http://www.roe.ac.uk/)
#
#     This information is free software: you can redistribute it and/or modify
#     it under the terms of the GNU General Public License as published by
#     the Free Software Foundation, either version 3 of the License, or
#     (at your option) any later version.
#
#     This information is distributed in the hope that it will be useful,
#     but WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#     GNU General Public License for more details.
#
#     You should have received a copy of the GNU General Public License
#     along with this program.  If not, see <http://www.gnu.org/licenses/>.
#   </meta:licence>
# </meta:header>
#
#

    Mount the Gaia share in the Spark nodes (rw for now).

        Check that the K8s Zeppelin/Spark can run the example notebooks.

    Create a new share for Nigel to work with.

        Mount Nigel's share in K8s Spark nodes to test.
        Read the CephFS mount secrets from inside the K8s Pod.
        Mount Nigel's share in a VM, using CephFS fuse mount.
        Add that to Stelio's deployment for Nigel to use.


# -----------------------------------------------------
# Create a container to work with.
#[user@desktop]

    source "${HOME}/aglais.env"

    podman run \
        --rm \
        --tty \
        --interactive \
        --hostname kubenator \
        --env "cloudname=${AGLAIS_CLOUD:?}" \
        --env "clustername=${CLUSTER_NAME:?}" \
        --volume "${HOME}/clouds.yaml:/etc/openstack/clouds.yaml:ro,z" \
        --volume "${AGLAIS_CODE:?}/experiments/zrq/helm:/helm:z" \
        --volume "${AGLAIS_CODE:?}/experiments/zrq/zeppelin:/zeppelin:ro,z" \
        --volume "${AGLAIS_CODE:?}/experiments/zrq/kubernetes:/kubernetes:ro,z" \
        atolmis/openstack-client \
        bash


# -----------------------------------------------------
# Get the connection details for our cluster.
#[user@kubernator]

    mkdir -p "${HOME}/.kube"
    openstack \
        --os-cloud "${cloudname:?}" \
        coe cluster config \
            "${clustername:?}" \
                --force \
                --dir "${HOME}/.kube"

    kubectl \
        cluster-info

    >   Kubernetes master is running at https://....
    >   Heapster is running at https://....
    >   CoreDNS is running at https://....


# -----------------------------------------------------
# Get the Dashboard token.
#[root@kubenator]

    dashtoken=$(
        kubectl get \
            --output json \
            secret \
        | jq -r '
            .items[]
            | select(
                .metadata.name
                | startswith(
                    "valeria-account"
                    )
                )
            | .data.token
            | @base64d
            '
        )

    echo "${dashtoken:?}"


# -----------------------------------------------------
# -----------------------------------------------------
# Use the token to login to the dashboard ...
#[user@desktop]

    firefox --new-window "https://valeria.metagrid.xyz/" &


# -----------------------------------------------------
# -----------------------------------------------------
# Set the Manila API version.
# https://stackoverflow.com/a/58806536
#[user@kubernator]

    export OS_SHARE_API_VERSION=2.51


# -----------------------------------------------------
# Update the share params (public).
#[user@kubernator]

    sharename=gaia-dr2
    sharesize=5000
    sharepublic=false


# -----------------------------------------------------
# Locate the exiting share.
#[user@kubernator]

    shareid=$(
        openstack \
            --os-cloud "${cloudname:?}" \
            share list \
                --format json \
        | jq -r '.[] | select( .Name == "'${sharename:?}'-share") | .ID'
        )


# -----------------------------------------------------
# List the existing access rules for this share.
#[user@kubernator]

    openstack \
        --os-cloud "${cloudname:?}" \
        share access list \
            "${shareid:?}"

    >   +--------------------------------------+-------------+----------------+--------------+--------+------------------------------------------+----------------------------+----------------------------+
    >   | id                                   | access_type | access_to      | access_level | state  | access_key                               | created_at                 | updated_at                 |
    >   +--------------------------------------+-------------+----------------+--------------+--------+------------------------------------------+----------------------------+----------------------------+
    >   | cfdf30de-cd36-4352-8ff1-c797c75efa7d | cephx       | gaia-dr2-ro    | ro           | active | AQDjxXdfjYfDNxAAzNWFor+dXjzEJjk073N21g== | 2020-10-03T00:29:23.000000 | 2020-10-03T00:29:23.000000 |
    >   | e2b663f1-0524-48b9-9d46-2f8c3f09c0c2 | cephx       | gaia-dr2-rw    | rw           | active | AQDXxXdfHlWrIRAAw5NQgUrH5H0RuvoPG67+Mg== | 2020-10-03T00:29:11.000000 | 2020-10-03T00:29:11.000000 |
    >   +--------------------------------------+-------------+----------------+--------------+--------+------------------------------------------+----------------------------+----------------------------+


# -----------------------------------------------------
# Get the id of the RW access rule.
#[user@kubernator]

    rwaccess=$(
        openstack \
            --os-cloud "${cloudname:?}" \
            share access list \
                --format json \
                "${shareid:?}" \
        | jq -r '.[] | select(.access_level == "rw") | .id'
        )

    echo "RW access [${rwaccess:?}]"

    >   RW access [e2b663f1-0524-48b9-9d46-2f8c3f09c0c2]


# -----------------------------------------------------
# Get the id of the RO access rule.
#[user@kubernator]

    roaccess=$(
        openstack \
            --os-cloud "${cloudname:?}" \
            share access list \
                --format json \
                "${shareid:?}" \
        | jq -r '.[] | select(.access_level == "ro") | .id'
        )

    echo "RO access [${roaccess:?}]"

    >   RO access [cfdf30de-cd36-4352-8ff1-c797c75efa7d]


# -----------------------------------------------------
# Create the Chart values for our test Pod.
#[user@kubernator]

    source "${HOME}/aglais.env"

cat > "/tmp/${sharename:?}-values.yaml" << EOF

aglais:
  dataset: "gaia-dr2"

share:
  name: ${sharename:?}
  size: ${sharesize:?}
  readonly: false

csi:
  access: "ReadWriteMany"

openstack:
  shareid:  ${shareid:?}
  accessid: ${rwaccess:?}

EOF


# -----------------------------------------------------
# Install our test Pod Chart.
#[user@kubernator]

    helm install \
        "${sharename:?}" \
        "/helm/manila-static-share" \
        --values "/tmp/${sharename:?}-values.yaml"

    >   NAME: gaia-dr2
    >   LAST DEPLOYED: Fri Oct  9 15:50:13 2020
    >   NAMESPACE: default
    >   STATUS: deployed
    >   REVISION: 1
    >   TEST SUITE: None
    >   NOTES:
    >   Use the testpod to check access to the mounted volume.


# -----------------------------------------------------
# Check our test Pod.
#[user@kubernator]

    kubectl describe \
        Pod \
            "${sharename:?}-testpod"

    >   ....
    >   ....
    >     Type    Reason     Age        From                                            Message
    >     ----    ------     ----       ----                                            -------
    >     Normal  Scheduled  <unknown>  default-scheduler                               Successfully assigned default/gaia-dr2-testpod to tiberius-20201009-ddekgti33piz-node-2
    >     Normal  Pulling    9m4s       kubelet, tiberius-20201009-ddekgti33piz-node-2  Pulling image "fedora:32"
    >     Normal  Pulled     8m57s      kubelet, tiberius-20201009-ddekgti33piz-node-2  Successfully pulled image "fedora:32"
    >     Normal  Created    8m56s      kubelet, tiberius-20201009-ddekgti33piz-node-2  Created container gaia-dr2-container
    >     Normal  Started    8m56s      kubelet, tiberius-20201009-ddekgti33piz-node-2  Started container gaia-dr2-container


# -----------------------------------------------------
# Connect to our test Pod and check we can access the dataset.
#[user@kubernator]

    kubectl exec \
        --tty \
        --stdin \
        "${sharename:?}-testpod" \
            -- \
                bash

        ls -al /share-data

    >   drwxrwxrwx. 8 root root 999049389120 Aug 23 05:16 .
    >   drwxr-xr-x. 1 root root           53 Oct  9 15:50 ..
    >   drwxr-xr-x. 2 root root  31681808533 Aug 22 14:48 gaia-dr2-16-0
    >   drwxr-xr-x. 2 root root 253756272164 Aug 22 16:46 gaia-dr2-2-0
    >   drwxr-xr-x. 2 root root  15792075406 Aug 22 14:35 gaia-dr2-32-0
    >   drwxr-xr-x. 2 root root 126836452150 Aug 22 15:43 gaia-dr2-4-0
    >   drwxr-xr-x. 2 root root  63403624720 Aug 22 15:06 gaia-dr2-8-0
    >   drwxr-xr-x. 2 root root 507579156147 Aug 23 06:57 gaia-dr2-full


        ls -al /share-data/gaia-dr2-32-0

    >   -rw-r--r--. 1 root root     87055225 Apr 21 02:08 part-00031-70392076-8b82-4457-8828-22069e7626e9-c000.snappy.parquet
    >   -rw-r--r--. 1 root root     83140178 Apr 21 02:11 part-00063-70392076-8b82-4457-8828-22069e7626e9-c000.snappy.parquet
    >   ....
    >   ....
    >   -rw-r--r--. 1 root root     35834808 Apr 21 12:50 part-06463-70392076-8b82-4457-8828-22069e7626e9-c000.snappy.parquet
    >   -rw-r--r--. 1 root root     32470158 Apr 21 12:53 part-06495-70392076-8b82-4457-8828-22069e7626e9-c000.snappy.parquet


        du -h /share-data

    >   15G     /share-data/gaia-dr2-32-0
    >   119G    /share-data/gaia-dr2-4-0
    >   30G     /share-data/gaia-dr2-16-0
    >   60G     /share-data/gaia-dr2-8-0
    >   237G    /share-data/gaia-dr2-2-0
    >   473G    /share-data/gaia-dr2-full
    >   931G    /share-data


# -----------------------------------------------------
# -----------------------------------------------------
# Edit the interpreter template.
#[user@desktop]

    source "${HOME}/aglais.env"

    gedit "${AGLAIS_CODE:?}/experiments/zrq/zeppelin/k8s/interpreter/100-interpreter-spec.yaml"

        ....
        ....
        ....

    pushd "${AGLAIS_CODE:?}"

        git diff 'experiments/zrq/zeppelin/k8s/interpreter/100-interpreter-spec.yaml'

    popd

    >   @@ -67,6 +67,9 @@ spec:
    >      {% if zeppelin.k8s.interpreter.group.name == "spark" %}
    >        - name: spark-home
    >          mountPath: /spark
    >   +    - name: gaia-dr2
    >   +      mountPath: /gaia-dr2
    >   +      readOnly: true
    >      {% endif %}
    >      {% if zeppelin.k8s.interpreter.group.name == "spark" %}
    >      initContainers:
    >   @@ -76,11 +79,17 @@ spec:
    >        volumeMounts:
    >        - name: spark-home
    >          mountPath: /spark
    >   +    - name: gaia-dr2
    >   +      mountPath: /gaia-dr2
    >   +      readOnly: true
    >      {% endif %}
    >      volumes:
    >      {% if zeppelin.k8s.interpreter.group.name == "spark" %}
    >      - name: spark-home
    >        emptyDir: {}
    >   +  - name: gaia-dr2
    >   +    persistentVolumeClaim:
    >   +      claimName: gaia-dr2-claim
    >      {% endif %}
    >    ---
    >    kind: Service


# -----------------------------------------------------
# Build a new zeppelin-mod image.
#[user@desktop]

    builddir=$(mktemp -d)
    buildsrc=20200914-174101
    buildtag=$(date '+%Y%m%d-%H%M%S')
    buildtime=$(date '+%Y-%m-%dT%H:%M:%S')

    buildah bud \
        --format docker \
        --tag aglais/zeppelin-mod:latest \
        --tag aglais/zeppelin-mod:${buildtag:?} \
        --build-arg "buildsrc=${buildsrc:?}" \
        --build-arg "buildtag=${buildtag:?}" \
        --build-arg "buildtime=${buildtime:?}" \
        --file "${AGLAIS_CODE}/experiments/zrq/zeppelin/docker/Dockermod" \
        "${AGLAIS_CODE:?}/experiments/zrq/zeppelin"

    >   STEP 1: FROM aglais/zeppelin-main:20200914-174101
    >   STEP 2: MAINTAINER Dave Morris <docker-admin@metagrid.co.uk>
    >   STEP 3: ARG buildtag
    >   STEP 4: ARG buildtime
    >   STEP 5: LABEL maintainer="Dave Morris <docker-admin@metagrid.co.uk>"
    >   STEP 6: LABEL buildtag="${buildtag}"
    >   STEP 7: LABEL buildtime="${buildtime}"
    >   STEP 8: LABEL gitrepo="https://github.com/wfau/aglais"
    >   STEP 9: COPY lib/* /zeppelin/lib
    >   STEP 10: COPY k8s/interpreter/100-interpreter-spec.yaml /zeppelin/k8s/interpreter/
    >   STEP 11: COPY conf/shiro.ini /zeppelin/conf/shiro.ini
    >   STEP 12: COMMIT aglais/zeppelin-mod:latest
    >   Getting image source signatures
    >   ....
    >   ....


# -----------------------------------------------------
# Login to the Docker Hub.
#[user@desktop]

    buildah login \
        --username $(secret docker.io.user) \
        --password $(secret docker.io.pass) \
        registry-1.docker.io

    >   Login Succeeded!


# -----------------------------------------------------
# Push our modified image to Docker hub.
#[user@desktop]

    buildah push "aglais/zeppelin-mod:${buildtag:?}"

    >   Getting image source signatures
    >   Copying blob 41a253a417e6 skipped: already exists
    >   Copying blob a5791c8427f1 skipped: already exists
    >   Copying blob e06660e80cf4 skipped: already exists
    >   Copying blob dcc0cc99372e skipped: already exists
    >   Copying blob 87c128261339 skipped: already exists
    >   Copying blob bd59303cdc70 skipped: already exists
    >   Copying blob 01e869dc41a3 done
    >   Copying config c7b04aeae7 done
    >   Writing manifest to image destination
    >   Storing signatures


    buildah push "aglais/zeppelin-mod:latest"

    >   Getting image source signatures
    >   Copying blob 87c128261339 skipped: already exists
    >   Copying blob a5791c8427f1 skipped: already exists
    >   Copying blob bd59303cdc70 skipped: already exists
    >   Copying blob e06660e80cf4 skipped: already exists
    >   Copying blob dcc0cc99372e skipped: already exists
    >   Copying blob 41a253a417e6 skipped: already exists
    >   Copying blob 01e869dc41a3 [--------------------------------------] 0.0b / 0.0b
    >   Copying config c7b04aeae7 [--------------------------------------] 0.0b / 15.8KiB
    >   Writing manifest to image destination
    >   Storing signatures


# -----------------------------------------------------
# Edit our zeppelin-server deployment template.
#[user@desktop]

    # TODO Replace Gedit with Sed.

    source "${HOME}/aglais.env"
    gedit "${AGLAIS_CODE:?}/experiments/zrq/zeppelin/k8s/zeppelin-server.yaml"

        ....
        ....

    diff "${ZEPPELIN_CODE:?}/k8s/zeppelin-server.yaml" \
         "${AGLAIS_CODE:?}/experiments/zrq/zeppelin/k8s/zeppelin-server.yaml"

    >   31,33c31,33
    >   <   ZEPPELIN_K8S_SPARK_CONTAINER_IMAGE: spark:2.4.5
    >   <   ZEPPELIN_K8S_CONTAINER_IMAGE: apache/zeppelin-interpreter:0.9.0-aglais-0.0.1
    >   <   ZEPPELIN_HOME: /opt/zeppelin
    >   ---
    >   >   ZEPPELIN_K8S_SPARK_CONTAINER_IMAGE: aglais/pyspark-mod:2020.08.11
    >   >   ZEPPELIN_K8S_CONTAINER_IMAGE: aglais/zeppelin-mod:20201009-190923
    >   >   ZEPPELIN_HOME: /zeppelin
    >   118c118
    >   <         image: apache/zeppelin-server:0.9.0-aglais-0.0.1
    >   ---
    >   >         image: aglais/zeppelin-mod:20201009-190923

# -----------------------------------------------------
# -----------------------------------------------------
# Deploy Zeppelin.
#[root@kubenator]

    kubectl delete \
        deployment zeppelin-server

    kubectl apply \
        --filename \
            "/zeppelin/k8s/zeppelin-server.yaml"

    >   ....
    >   ....


# -----------------------------------------------------
# -----------------------------------------------------
# Mount the share in our Spark workers.
#[user@zeppelin]


    %spark.conf

    spark.kubernetes.executor.volumes.persistentVolumeClaim.gaia-dr2.mount.path        /gaia-dr2
    spark.kubernetes.executor.volumes.persistentVolumeClaim.gaia-dr2.mount.readOnly    false
    spark.kubernetes.executor.volumes.persistentVolumeClaim.gaia-dr2.options.claimName gaia-dr2-claim




