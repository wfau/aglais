#
# <meta:header>
#   <meta:licence>
#     Copyright (c) 2020, ROE (http://www.roe.ac.uk/)
#
#     This information is free software: you can redistribute it and/or modify
#     it under the terms of the GNU General Public License as published by
#     the Free Software Foundation, either version 3 of the License, or
#     (at your option) any later version.
#
#     This information is distributed in the hope that it will be useful,
#     but WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#     GNU General Public License for more details.
#
#     You should have received a copy of the GNU General Public License
#     along with this program.  If not, see <http://www.gnu.org/licenses/>.
#   </meta:licence>
# </meta:header>
#
#


# -----------------------------------------------------
# Create a container to work with.
#[user@desktop]

    source "${HOME}/aglais.settings"

    podman run \
        --rm \
        --tty \
        --interactive \
        --hostname ansibler \
        --env SSH_AUTH_SOCK=/tmp/ssh_auth_sock \
        --volume "${SSH_AUTH_SOCK}:/tmp/ssh_auth_sock" \
        --volume "${HOME}/clouds.yaml:/etc/openstack/clouds.yaml:z" \
        --volume "${AGLAIS_CODE:?}/experiments/zrq/ansible:/tmp/ansible:z" \
        atolmis/ansible-client \
        bash

    >   Trying to pull docker.io/atolmis/ansible-client...
    >   Getting image source signatures
    >   Copying blob d318c91bf2a8 skipped: already exists
    >   ....
    >   ....
    >   Copying config b24b8280ff done
    >   Writing manifest to image destination
    >   Storing signatures


# -----------------------------------------------------
# Create our config file.
#[root@ansibler]

    cat > /tmp/ansible-vars.yml << EOF

buildtag:  '$(date '+%Y%m%d')'
cloudname: 'gaia-prod'

EOF


# -----------------------------------------------------
# Create our internal network.
#[root@ansibler]

    ANSISRC=/tmp/ansible

    ansible-playbook \
        --verbose \
        --verbose \
        --inventory "${ANSISRC:?}/hosts.yml" \
            "${ANSISRC:?}/01-create-network.yml"


    >   TASK [Create the 'aglais-20200121-network' network] ..
    >   task path: /tmp/ansible/01-create-network.yml:29
    >   An exception occurred during task execution. To see the full traceback, use -vvv. The error was: TypeError: create_network() got an unexpected keyword argument 'dns_domain'
    >   ....

    #
    # Found a matching bug.
    # https://github.com/ansible/ansible/issues/64495

    #
    # Seems to be fixed in later version of the OpenStack client ?
    #

# -----------------------------------------------------
# Patch fix our copy of the Ansible code.
#[root@ansibler]

    find / -name os_network.py

    >   bash: find: command not found


    dnf provides find

    >   Last metadata expiration check: 0:57:35 ago on Tue Jan 21 17:24:22 2020.
    >   findutils-1:4.6.0-24.fc31.x86_64 : The GNU versions of find utilities (find and xargs)
    >   Repo        : fedora
    >   Matched from:
    >   Provide     : /bin/find
    >   Filename    : /usr/bin/find

    dnf install findutils

    >   ....
    >   Installed:
    >     findutils-1:4.6.0-24.fc31.x86_64
    >   ....

    find / -name os_network.py

    >   /usr/lib/python3.7/site-packages/ansible/modules/cloud/openstack/os_network.py


    dnf provides diff

    >   Last metadata expiration check: 0:01:20 ago on Wed Jan 22 00:53:04 2020.
    >   diffutils-3.7-3.fc31.x86_64 : A GNU collection of diff utilities
    >   Repo        : fedora
    >   Matched from:
    >   Filename    : /usr/bin/diff

    dnf install diffutils

    >   ....
    >   Installed:
    >     diffutils-3.7-3.fc31.x86_64
    >   ....


    mkdir ~/attic

    cp /usr/lib/python3.7/site-packages/ansible/modules/cloud/openstack/os_network.py \
      ~/attic

    vi /usr/lib/python3.7/site-packages/ansible/modules/cloud/openstack/os_network.py


        if project_id is not None:
            net = cloud.create_network(name, shared, admin_state_up,
                external, provider, project_id,
                port_security_enabled=port_security_enabled,
    -           mtu_size=mtu, dns_domain=dns_domain)
    +           mtu_size=mtu)
        else:
            net = cloud.create_network(name, shared, admin_state_up,
                external, provider,
                port_security_enabled=port_security_enabled,
    -           mtu_size=mtu, dns_domain=dns_domain)
    +           mtu_size=mtu, dns_domain=dns_domain)


    diff ~/attic/os_network.py \
          /usr/lib/python3.7/site-packages/ansible/modules/cloud/openstack/os_network.py

    >   232c232
    >   <                                                mtu_size=mtu, dns_domain=dns_domain)
    >   ---
    >   >                                                mtu_size=mtu)
    >   237c237
    >   <                                                mtu_size=mtu, dns_domain=dns_domain)
    >   ---
    >   >                                                mtu_size=mtu)


# -----------------------------------------------------
# Create our internal network.
#[root@ansibler]

    ANSISRC=/tmp/ansible

    ansible-playbook \
        --inventory "${ANSISRC:?}/hosts.yml" \
            "${ANSISRC:?}/01-create-network.yml"


    >   PLAY [Create our internal network] ..
    >   
    >   TASK [Gathering Facts] ..
    >   ok: [localhost]
    >   
    >   TASK [Create the 'aglais-20200122-network' network] ..
    >   changed: [localhost]
    >   
    >   TASK [Create a subnet for 'aglais-20200122-network'] ..
    >   changed: [localhost]
    >   
    >   TASK [Create a router for 'aglais-20200122-network'] ..
    >   changed: [localhost]
    >   
    >   PLAY RECAP ..
    >   localhost                  : ok=4    changed=3    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0


# -----------------------------------------------------
# Create our gateway node.
#[root@ansibler]

    ANSISRC=/tmp/ansible

    ansible-playbook \
        --inventory "${ANSISRC:?}/hosts.yml" \
            "${ANSISRC:?}/02-create-gateway.yml"


    >   PLAY [Create our gateway node] ..
    >   
    >   TASK [Gathering Facts] ..
    >   ok: [localhost]
    >   
    >   TASK [Create the 'aglais-20200122-gateway' security group] ..
    >   changed: [localhost]
    >   
    >   TASK [Add a security rule for IPv4 SSH] ..
    >   changed: [localhost]
    >   
    >   TASK [Add a security rule for IPv6 SSH] ..
    >   changed: [localhost]
    >   
    >   TASK [Create our aglais-20200122-gateway node] ..
    >   changed: [localhost]
    >   
    >   TASK [Assign a floating IP address to the aglais-20200122-gateway node] ..
    >   changed: [localhost]
    >   
    >   TASK [Apply the aglais-20200122-gateway security group to the floating IP address] ..
    >   ok: [localhost]
    >   
    >   PLAY RECAP ..
    >   localhost                  : ok=7    changed=5    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0


# -----------------------------------------------------
# Create our master nodes.
#[root@ansibler]

    ANSISRC=/tmp/ansible

    ansible-playbook \
        --inventory "${ANSISRC:?}/hosts.yml" \
            "${ANSISRC:?}/03-create-masters.yml"




