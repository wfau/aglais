#
# <meta:header>
#   <meta:licence>
#     Copyright (c) 2020, ROE (http://www.roe.ac.uk/)
#
#     This information is free software: you can redistribute it and/or modify
#     it under the terms of the GNU General Public License as published by
#     the Free Software Foundation, either version 3 of the License, or
#     (at your option) any later version.
#
#     This information is distributed in the hope that it will be useful,
#     but WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#     GNU General Public License for more details.
#
#     You should have received a copy of the GNU General Public License
#     along with this program.  If not, see <http://www.gnu.org/licenses/>.
#   </meta:licence>
# </meta:header>
#
#

    Static volume, username/password.

# -----------------------------------------------------

    Follow on from previous notes.
    20200901-02-manila-csi.txt

    Requested a standard user name and password account from Cambridge to test the Manila CSI.
    Experiment:

        If the PersistentVolume works with username/password account and fails with application
        credentials, then suggests everything else is fine and the issue is with the way that
        Manila CSi handles application credentials.

        If the PersistentVolume fails with username/password, then there is something else
        wrong with the PersistentVolume configuration.

# -----------------------------------------------------
# Create a container to work with.
#[user@desktop]

    source "${HOME}/aglais.env"

    podman run \
        --rm \
        --tty \
        --interactive \
        --hostname kubernator \
        --env "cloudname=${AGLAIS_CLOUD:?}" \
        --env "clustername=${CLUSTER_NAME:?}" \
        --volume "${HOME}/clouds.yaml:/etc/openstack/clouds.yaml:z" \
        atolmis/openstack-client \
        bash


# -----------------------------------------------------
# Get the connection details for our cluster.
#[user@kubernator]

    mkdir -p "${HOME}/.kube"
    openstack \
        --os-cloud "${cloudname:?}" \
        coe cluster config \
            "${clustername:?}" \
                --force \
                --dir "${HOME}/.kube"


    kubectl \
        cluster-info

    >   Kubernetes master is running at https://....
    >   Heapster is running at https://....
    >   CoreDNS is running at https://....


# -----------------------------------------------------
# Install config editing tools.
# TODO - add this to the kubernator image
#[user@kubernator]

    mkdir   "${HOME:?}/bin"
    wget -O "${HOME:?}/bin/yq" https://github.com/mikefarah/yq/releases/download/3.3.2/yq_linux_amd64
    chmod a+x "${HOME:?}/bin/yq"


# -----------------------------------------------------
# Delete the existing Pod, Secret, PersistentVolumeClaim and PersistentVolume.
#[user@kubernator]

    kubectl delete \
        pod \
            magruela-pod

    kubectl delete \
        persistentvolumeclaim \
            magruela-claim

    kubectl delete \
        persistentvolume \
            magruela-volume

    kubectl delete \
        secret \
            magruela-secrets


# -----------------------------------------------------
# Set the Manila API version.
# https://stackoverflow.com/a/58806536
#[user@kubernator]

    export OS_SHARE_API_VERSION=2.51

# -----------------------------------------------------
# List the available shares.
#[user@kubernator]

    openstack \
        --os-cloud "${cloudname:?}" \
            share list

    >   +--------------------------------------+------------------------------------------+------+-------------+-----------+-----------+------------------+------+-------------------+
    >   | ID                                   | Name                                     | Size | Share Proto | Status    | Is Public | Share Type Name  | Host | Availability Zone |
    >   +--------------------------------------+------------------------------------------+------+-------------+-----------+-----------+------------------+------+-------------------+
    >   | ad1d9ca2-5b1c-4064-8c74-695286de6098 | gaia-dr2-share                           | 4399 | CEPHFS      | available | True      | cephfsnativetype |      | nova              |
    >   | a32ea61f-a922-4b9d-959b-a9d2d2e57c4b | magruela-share                           |    5 | CEPHFS      | available | True      | cephfsnativetype |      | nova              |
    >   | d71dae9a-b508-4a54-a5e9-7a91e8548b1e | pvc-41814ac5-00cc-4ba3-ae8b-6eddad01ef0c |    1 | CEPHFS      | available | False     | cephfsnativetype |      | nova              |
    >   +--------------------------------------+------------------------------------------+------+-------------+-----------+-----------+------------------+------+-------------------+

    sharename=magruela-share

    shareid=$(
        openstack \
            --os-cloud "${cloudname:?}" \
                share list \
                --format json \
        | jq -r '.[] | select(.Name == "'${sharename:?}'") | .ID'
        )

    echo "Share [${shareid}]"

    >   Share [a32ea61f-a922-4b9d-959b-a9d2d2e57c4b]


# -----------------------------------------------------
# List the share access rules.
#[user@kubernator]

    openstack \
        --os-cloud "${cloudname:?}" \
            share access list \
                "${shareid:?}"

    >   +--------------------------------------+-------------+----------------+--------------+--------+------------------------------------------+----------------------------+----------------------------+
    >   | id                                   | access_type | access_to      | access_level | state  | access_key                               | created_at                 | updated_at                 |
    >   +--------------------------------------+-------------+----------------+--------------+--------+------------------------------------------+----------------------------+----------------------------+
    >   | f658ea33-daef-46da-8fff-82b23ced65de | cephx       | magruela-share | rw           | active | AQCEe0xfABd/IhAA5/E9uQ/6ucGr3PzPme4RCQ== | 2020-08-31T04:24:36.000000 | 2020-08-31T04:24:36.000000 |
    >   +--------------------------------------+-------------+----------------+--------------+--------+------------------------------------------+----------------------------+----------------------------+

    shareaccessid=$(
        openstack \
            --os-cloud "${cloudname:?}" \
                share access list \
                    --format json \
                        "${shareid:?}" \
        | jq -r '.[0] | .id'
        )

    echo "Access [${shareaccessid}]"

    >   Access [f658ea33-daef-46da-8fff-82b23ced65de]


# -----------------------------------------------------
# Create our persistent volume.
#[user@kubernator]

    cat > "/tmp/magruela-volume.yaml" << EOF
apiVersion: v1
kind: PersistentVolume
metadata:
  name: magruela-volume
  labels:
    name: magruela-volume
spec:
  accessModes:
  - ReadWriteMany
  capacity:
    storage: 4Gi
  csi:
    driver: cephfs.manila.csi.openstack.org
    volumeHandle: magruela-volume
    nodeStageSecretRef:
      name: magruela-secrets
      namespace: default
    nodePublishSecretRef:
      name: magruela-secrets
      namespace: default
    volumeAttributes:
      shareID: ${shareid:?}
      shareAccessID: ${shareaccessid:?}
EOF

    kubectl apply \
        --filename "/tmp/magruela-volume.yaml"

    >   persistentvolume/magruela-volume created


    kubectl describe \
        persistentvolume \
            magruela-volume

    >   Name:            magruela-volume
    >   Labels:          name=magruela-volume
    >   Annotations:     kubectl.kubernetes.io/last-applied-configuration:
    >                      {"apiVersion":"v1","kind":"PersistentVolume","metadata":{"annotations":{},"labels":{"name":"magruela-volume"},"name":"magruela-volume"},"s...
    >   Finalizers:      [kubernetes.io/pv-protection]
    >   StorageClass:
    >   Status:          Available
    >   Claim:
    >   Reclaim Policy:  Retain
    >   Access Modes:    RWX
    >   VolumeMode:      Filesystem
    >   Capacity:        4Gi
    >   Node Affinity:   <none>
    >   Message:
    >   Source:
    >       Type:              CSI (a Container Storage Interface (CSI) volume source)
    >       Driver:            cephfs.manila.csi.openstack.org
    >       VolumeHandle:      magruela-volume
    >       ReadOnly:          false
    >       VolumeAttributes:      shareAccessID=f658ea33-daef-46da-8fff-82b23ced65de
    >                              shareID=a32ea61f-a922-4b9d-959b-a9d2d2e57c4b
    >   Events:                <none>


# -----------------------------------------------------
# Create our persistent volume claim.
#[user@kubernator]

    cat > "/tmp/magruela-claim.yaml" << EOF
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: magruela-claim
spec:
  accessModes:
  - ReadWriteMany
  resources:
    requests:
      storage: 3Gi
  selector:
    matchExpressions:
    - key: name
      operator: In
      values: ["magruela-volume"]
EOF

    kubectl apply \
        --filename "/tmp/magruela-claim.yaml"

    >   persistentvolumeclaim/magruela-claim created

    kubectl describe \
        persistentvolumeclaim \
            magruela-claim

    >   Name:          magruela-claim
    >   Namespace:     default
    >   StorageClass:
    >   Status:        Bound
    >   Volume:        magruela-volume
    >   Labels:        <none>
    >   Annotations:   kubectl.kubernetes.io/last-applied-configuration:
    >                    {"apiVersion":"v1","kind":"PersistentVolumeClaim","metadata":{"annotations":{},"name":"magruela-claim","namespace":"default"},"spec":{"acc...
    >                  pv.kubernetes.io/bind-completed: yes
    >                  pv.kubernetes.io/bound-by-controller: yes
    >   Finalizers:    [kubernetes.io/pvc-protection]
    >   Capacity:      4Gi
    >   Access Modes:  RWX
    >   VolumeMode:    Filesystem
    >   Mounted By:    <none>
    >   Events:        <none>


# -----------------------------------------------------
# Create a Pod that mounts the volume.
#[user@kubernator]

    cat > /tmp/magruela-pod.yaml << EOF
kind: Pod
apiVersion: v1
metadata:
  name: magruela-pod
  namespace: default
spec:
  volumes:
    - name: magruela-data
      persistentVolumeClaim:
        claimName: magruela-claim
    - name: local-data
      emptyDir: {}
  containers:
    - name: magruela-container
      image: 'fedora:latest'
      volumeMounts:
        - name: magruela-data
          mountPath: /share-data
        - name: local-data
          mountPath: /local-data
      command: ["/bin/sh"]
      args:
        - "-c"
        - >-
          while true; do
          date >> /share-data/\$(hostname).log;
          sleep 1;
          done
EOF

    kubectl \
        apply \
            --filename /tmp/magruela-pod.yaml

    >   pod/magruela-pod created


    kubectl \
        describe pod \
            magruela-pod

    >   Events:
    >     Type     Reason       Age                 From                                            Message
    >     ----     ------       ----                ----                                            -------
    >     Normal   Scheduled    <unknown>           default-scheduler                               Successfully assigned default/magruela-pod to tiberius-20200901-tzufyez4qfkn-node-2
    >     Warning  FailedMount  14s                 kubelet, tiberius-20200901-tzufyez4qfkn-node-2  Unable to attach or mount volumes: unmounted volumes=[magruela-data], unattached volumes=[magruela-data local-data default-token-4dcpn]: timed out waiting for the condition
    >     Warning  FailedMount  9s (x9 over 2m17s)  kubelet, tiberius-20200901-tzufyez4qfkn-node-2  MountVolume.MountDevice failed for volume "magruela-volume" : fetching NodeStageSecretRef default/magruela-secrets failed: kubernetes.io/csi: failed to find the secret magruela-secrets in the namespace default with error: secrets "magruela-secrets" not found


# -----------------------------------------------------
# Create our secrets using application credentials from clouds.yaml.
#[user@kubernator]

    authurl=$(
        yq r /etc/openstack/clouds.yaml \
            'clouds.gaia-prod.auth.auth_url'
        )

    region=$(
        yq r /etc/openstack/clouds.yaml \
            'clouds.gaia-prod.region_name'
        )

    credentialID=$(
        yq r /etc/openstack/clouds.yaml \
            'clouds.gaia-prod.auth.application_credential_id'
        )

    credentialsecret=$(
        yq r /etc/openstack/clouds.yaml \
            'clouds.gaia-prod.auth.application_credential_secret'
        )


    cat > "/tmp/magruela-secrets.yaml" << EOF
apiVersion: v1
kind: Secret
metadata:
  name: magruela-secrets
  namespace: default
stringData:
  # Mandatory
  os-authURL: "${authurl:?}"
  os-region: "${region:?}"

  # Authentication using user credentials
  os-applicationCredentialID: "${credentialID:?}"
  os-applicationCredentialSecret: "${credentialsecret:?}"

EOF

    kubectl create \
        --filename "/tmp/magruela-secrets.yaml"

    >   secret/magruela-secrets created


    kubectl describe \
        secret \
            magruela-secrets

    >   ....
    >   ....
    >
    >   Data
    >   ====
    >   os-region:                       9 bytes
    >   os-authURL:                      47 bytes
    >   os-applicationCredentialID:      32 bytes
    >   os-applicationCredentialSecret:  35 bytes


# -----------------------------------------------------
# Delete and re-create our Pod.
#[user@kubernator]

    kubectl \
        delete pod \
            magruela-pod

    kubectl \
        apply \
            --filename /tmp/magruela-pod.yaml

    kubectl \
        describe pod \
            magruela-pod

    >   ....
    >   ....
    >   Events:
    >     Type     Reason       Age        From                                            Message
    >     ----     ------       ----       ----                                            -------
    >     Normal   Scheduled    <unknown>  default-scheduler                               Successfully assigned default/magruela-pod to tiberius-20200901-tzufyez4qfkn-node-2
    >     Warning  FailedMount  0s         kubelet, tiberius-20200901-tzufyez4qfkn-node-2  MountVolume.MountDevice failed for volume "magruela-volume" : rpc error: code = InvalidArgument desc = invalid OpenStack secrets: parameter 'os-authURL' requires exactly one of [os-password os-trustID] parameters

    #
    # Expected error for application credentials.
    #

    >   .... invalid OpenStack secrets: parameter 'os-authURL' requires exactly one of [os-password os-trustID] parameters


# -----------------------------------------------------
# Delete our secrets and create a new set based on username and password.
#[user@kubernator]

    username=........
    password=........

    cat > "/tmp/magruela-secrets.yaml" << EOF
apiVersion: v1
kind: Secret
metadata:
  name: magruela-secrets
  namespace: default
stringData:
  # Mandatory
  os-authURL: "${authurl:?}"
  os-region: "${region:?}"

  # Authentication using username and passowrd
  os-userName: "${username:?}"
  os-password: "${password:?}"

EOF

    kubectl \
        delete secret \
            magruela-secrets

    kubectl create \
        --filename "/tmp/magruela-secrets.yaml"

    >   secret/magruela-secrets created


    kubectl describe \
        secret \
            magruela-secrets

    >   ....
    >   ....
    >   Data
    >   ====
    >   os-authURL:   47 bytes
    >   os-password:  36 bytes
    >   os-region:    9 bytes
    >   os-userName:  17 bytes


# -----------------------------------------------------
# Delete and re-create our Pod.
#[user@kubernator]

    kubectl \
        delete pod \
            magruela-pod

    kubectl \
        apply \
            --filename /tmp/magruela-pod.yaml

    kubectl \
        describe pod \
            magruela-pod

    >   ....
    >   ....
    >   Events:
    >     Type     Reason       Age        From                                            Message
    >     ----     ------       ----       ----                                            -------
    >     Normal   Scheduled    <unknown>  default-scheduler                               Successfully assigned default/magruela-pod to tiberius-20200901-tzufyez4qfkn-node-2
    >     Warning  FailedMount  0s         kubelet, tiberius-20200901-tzufyez4qfkn-node-2  MountVolume.MountDevice failed for volume "magruela-volume" : rpc error: code = InvalidArgument desc = invalid OpenStack secrets: parameter 'os-password' requires exactly one of [os-domainID os-domainName] parameters

    >   .... invalid OpenStack secrets: parameter 'os-password' requires exactly one of [os-domainID os-domainName] parameters


# -----------------------------------------------------
# Create a new set of secrets including domain name.
#[user@kubernator]

    username=........
    password=........
    domainname=default

    cat > "/tmp/magruela-secrets.yaml" << EOF
apiVersion: v1
kind: Secret
metadata:
  name: magruela-secrets
  namespace: default
stringData:
  # Mandatory
  os-authURL: "${authurl:?}"
  os-region: "${region:?}"

  # Authentication using username and passowrd
  os-userName: "${username:?}"
  os-password: "${password:?}"
  os-domainName: "${domainname:?}"

EOF

    kubectl \
        delete secret \
            magruela-secrets

    kubectl create \
        --filename "/tmp/magruela-secrets.yaml"

    >   secret/magruela-secrets created


    kubectl describe \
        secret \
            magruela-secrets

    >   ....
    >   ....
    >   Data
    >   ====
    >   os-authURL:     47 bytes
    >   os-domainName:  7 bytes
    >   os-password:    36 bytes
    >   os-region:      9 bytes
    >   os-userName:    17 bytes


# -----------------------------------------------------
# Delete and re-create our Pod.
#[user@kubernator]

    kubectl \
        delete pod \
            magruela-pod

    kubectl \
        apply \
            --filename /tmp/magruela-pod.yaml

    kubectl \
        describe pod \
            magruela-pod

    >   ....
    >   ....
    >   Events:
    >     Type     Reason       Age              From                                            Message
    >     ----     ------       ----             ----                                            -------
    >     Normal   Scheduled    <unknown>        default-scheduler                               Successfully assigned default/magruela-pod to tiberius-20200901-tzufyez4qfkn-node-2
    >     Warning  FailedMount  1s (x4 over 5s)  kubelet, tiberius-20200901-tzufyez4qfkn-node-2  MountVolume.MountDevice failed for volume "magruela-volume" : rpc error: code = InvalidArgument desc = invalid OpenStack secrets: parameter 'os-password' requires exactly one of [os-projectID os-projectName] parameters


    >   .... invalid OpenStack secrets: parameter 'os-password' requires exactly one of [os-projectID os-projectName] parameters


# -----------------------------------------------------
# Create a new set of secrets including domain name and project name.
#[user@kubernator]

    username=........
    password=........
    domainname=default
    projectname=${cloudname:?}

    cat > "/tmp/magruela-secrets.yaml" << EOF
apiVersion: v1
kind: Secret
metadata:
  name: magruela-secrets
  namespace: default
stringData:
  # Mandatory
  os-authURL: "${authurl:?}"
  os-region: "${region:?}"

  # Authentication using username and passowrd
  os-userName: "${username:?}"
  os-password: "${password:?}"
  os-domainName: "${domainname:?}"
  os-projectName: "${projectname:?}"

EOF

    kubectl \
        delete secret \
            magruela-secrets

    kubectl create \
        --filename "/tmp/magruela-secrets.yaml"

    >   secret/magruela-secrets created


    kubectl describe \
        secret \
            magruela-secrets

    >   ....
    >   ....
    >   Data
    >   ====
    >   os-password:     36 bytes
    >   os-projectName:  9 bytes
    >   os-region:       9 bytes
    >   os-userName:     17 bytes
    >   os-authURL:      47 bytes
    >   os-domainName:   7 bytes


# -----------------------------------------------------
# Delete and re-create our Pod.
#[user@kubernator]

    kubectl \
        delete pod \
            magruela-pod

    kubectl \
        apply \
            --filename /tmp/magruela-pod.yaml

    kubectl \
        describe pod \
            magruela-pod

    >   ....
    >   ....
    >   Events:
    >     Type     Reason       Age               From                                            Message
    >     ----     ------       ----              ----                                            -------
    >     Normal   Scheduled    <unknown>         default-scheduler                               Successfully assigned default/magruela-pod to tiberius-20200901-tzufyez4qfkn-node-2
    >     Warning  FailedMount  9s (x6 over 25s)  kubelet, tiberius-20200901-tzufyez4qfkn-node-2  MountVolume.MountDevice failed for volume "magruela-volume" : rpc error: code = InvalidArgument desc = stage secrets cannot be nil or empty

    >   .... stage secrets cannot be nil or empty

    #
    # Hmm .. is this a side effect of how the sequernce they were created in ?
    #

# -----------------------------------------------------
# Delete and re-create in the right sequence.
#[user@kubernator]

    kubectl delete \
        pod \
            magruela-pod

    kubectl delete \
        persistentvolumeclaim \
            magruela-claim

    kubectl delete \
        persistentvolume \
            magruela-volume

    kubectl delete \
        secret \
            magruela-secrets


    kubectl create \
        --filename "/tmp/magruela-secrets.yaml"

    kubectl apply \
        --filename "/tmp/magruela-volume.yaml"

    kubectl apply \
        --filename "/tmp/magruela-claim.yaml"

    kubectl \
        apply \
            --filename /tmp/magruela-pod.yaml

    kubectl \
        describe pod \
            magruela-pod

    >   .... stage secrets cannot be nil or empty


# -----------------------------------------------------
# Check the volume specification.
#[user@kubernator]

    kubectl get \
        --output json \
        persistentvolume \
            magruela-volume \
    | jq '.spec'

    >   {
    >     "accessModes": [
    >       "ReadWriteMany"
    >     ],
    >     "capacity": {
    >       "storage": "4Gi"
    >     },
    >     "claimRef": {
    >       "apiVersion": "v1",
    >       "kind": "PersistentVolumeClaim",
    >       "name": "magruela-claim",
    >       "namespace": "default",
    >       "resourceVersion": "528529",
    >       "uid": "2c523c37-e30f-4013-a873-ce7273bd1a66"
    >     },
    >     "csi": {
    >       "driver": "cephfs.manila.csi.openstack.org",
    >       "nodePublishSecretRef": {
    >         "name": "magruela-secrets",
    >         "namespace": "default"
    >       },
    >       "nodeStageSecretRef": {
    >         "name": "magruela-secrets",
    >         "namespace": "default"
    >       },
    >       "volumeAttributes": {
    >         "shareAccessID": "f658ea33-daef-46da-8fff-82b23ced65de",
    >         "shareID": "a32ea61f-a922-4b9d-959b-a9d2d2e57c4b"
    >       },
    >       "volumeHandle": "magruela-volume"
    >     },
    >     "persistentVolumeReclaimPolicy": "Retain",
    >     "volumeMode": "Filesystem"
    >   }








