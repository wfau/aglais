#
# <meta:header>
#   <meta:licence>
#     Copyright (c) 2020, ROE (http://www.roe.ac.uk/)
#
#     This information is free software: you can redistribute it and/or modify
#     it under the terms of the GNU General Public License as published by
#     the Free Software Foundation, either version 3 of the License, or
#     (at your option) any later version.
#
#     This information is distributed in the hope that it will be useful,
#     but WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#     GNU General Public License for more details.
#
#     You should have received a copy of the GNU General Public License
#     along with this program.  If not, see <http://www.gnu.org/licenses/>.
#   </meta:licence>
# </meta:header>
#
#

    #
    # Follow on from previous notes.
    # notes/zrq/20200710-02-zeppelin-k8s.txt
    #

# -----------------------------------------------------
# Debugging things via the GUI ..



    #
    # Spark Service works, Spark Pods fail.
    #

    >   Failed to pull image "spark:2.4.5": rpc error: code = Unknown desc = repository docker.io/spark not found: does not exist or no pull access

    It looks like Spark don't publish ready-built images.
    https://spark.apache.org/docs/2.4.5/running-on-kubernetes.html#docker-images

        Kubernetes requires users to supply images that can be deployed into containers within pods.
        The images are built to be run in a container runtime environment that Kubernetes supports.
        Docker is a container runtime environment that is frequently used with Kubernetes.
        Spark (starting with version 2.3) ships with a Dockerfile that can be used for this purpose,
        or customized to match an individual applicationâ€™s needs.
        It can be found in the kubernetes/dockerfiles/ directory.


    Staroid (Open Data Studioi) have published their images.
    https://medium.com/@leemoonsoo/spark-3-0-zeppelin-on-kubernetes-with-staroid-c3a9d4052e20

    https://hub.docker.com/r/opendatastudio/spark/tags

        opendatastudio/spark:v3.0.0

    #
    # More clues - different issue ?
    # Just a plain MarkDown cell in a notebook
    # https://zeppelin.apache.org/docs/0.6.1/interpreter/markdown.html

    %md
    ## Welcome to my world

    In the notebook :

        org.apache.zeppelin.interpreter.InterpreterException: java.io.IOException: Interpreter process is not running

    In K8s dashboard :

    Launches a new Pod using the zeppelin image

        name  :  md-lrowqh
        image : apache/zeppelin:0.9.0
        command :
            sh
            -c
            $(ZEPPELIN_HOME)/bin/interpreter.sh -d $(ZEPPELIN_HOME)/interpreter/md -r 12321:12321 -c zeppelin-server-695446f7c6-9rncm.default.svc -p 12320 -i md-shared_process -l /tmp/local-repo -g md

        log :
            Interpreter launch command:  /usr/lib/jvm/java-8-openjdk-amd64/bin/java -Dfile.encoding=UTF-8 -Dlog4j.configuration=file:///zeppelin/conf/log4j.properties -Dzeppelin.log.file='/zeppelin/logs/zeppelin-interpreter-md-shared_process--md-lrowqh.log' -Xms1024m -Xmx2048m -XX:MaxPermSize=512m -cp ":/zeppelin/interpreter/md/*::/zeppelin/interpreter/zeppelin-interpreter-shaded-0.9.0-preview1.jar" org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer zeppelin-server-695446f7c6-9rncm.default.svc 12320 "md-shared_process" 12321:12321
            OpenJDK 64-Bit Server VM warning: ignoring option MaxPermSize=512m; support was removed in 8.0
             WARN [2020-07-16 08:31:38,522] ({main} ZeppelinConfiguration.java[create]:159) - Failed to load configuration, proceeding with a default
             INFO [2020-07-16 08:31:38,559] ({main} ZeppelinConfiguration.java[create]:171) - Server Host: 0.0.0.0
             INFO [2020-07-16 08:31:38,560] ({main} ZeppelinConfiguration.java[create]:173) - Server Port: 8080
             INFO [2020-07-16 08:31:38,560] ({main} ZeppelinConfiguration.java[create]:177) - Context Path: /
             INFO [2020-07-16 08:31:38,562] ({main} ZeppelinConfiguration.java[create]:178) - Zeppelin Version: 0.9.0-preview1
             INFO [2020-07-16 08:31:38,563] ({main} RemoteInterpreterServer.java[<init>]:161) - Starting remote interpreter server on port 0, intpEventServerAddress: zeppelin-server-695446f7c6-9rncm.default.svc:12320
            Exception in thread "main" org.apache.zeppelin.shaded.org.apache.thrift.transport.TTransportException: java.net.UnknownHostException: zeppelin-server-695446f7c6-9rncm.default.svc
	            at org.apache.zeppelin.shaded.org.apache.thrift.transport.TSocket.open(TSocket.java:226)
	            at org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.<init>(RemoteInterpreterServer.java:167)
	            at org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.<init>(RemoteInterpreterServer.java:152)
	            at org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.main(RemoteInterpreterServer.java:321)
            Caused by: java.net.UnknownHostException: zeppelin-server-695446f7c6-9rncm.default.svc
	            at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184)
	            at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	            at java.net.Socket.connect(Socket.java:607)
	            at org.apache.zeppelin.shaded.org.apache.thrift.transport.TSocket.open(TSocket.java:221)
	            ... 3 more


    In the main zeppelin-server pod

        name :  zeppelin-server-695446f7c6-9rncm
        image : apache/zeppelin:0.9.0
        command :
            sh
            -c
            $(ZEPPELIN_HOME)/bin/zeppelin.sh

        log :
            INFO [2020-07-16 08:31:36,090] ({SchedulerFactory45} K8sStandardInterpreterLauncher.java[launch]:135) - Launching Interpreter: md
            INFO [2020-07-16 08:31:36,094] ({SchedulerFactory45} K8sRemoteInterpreterProcess.java[apply]:225) - Apply /zeppelin/k8s/interpreter/100-interpreter-spec.yaml
            INFO [2020-07-16 08:31:36,100] ({SchedulerFactory45} Kubectl.java[execAndGet]:121) - kubectl [apply, -f, -, --namespace=default]
            INFO [2020-07-16 08:31:36,393] ({SchedulerFactory45} Kubectl.java[execAndGet]:121) - kubectl [wait, pod/md-lrowqh, --for=condition=Ready, --timeout=60s, --namespace=default]
            INFO [2020-07-16 08:32:38,652] ({SchedulerFactory45} K8sRemoteInterpreterProcess.java[start]:117) - Interpreter pod creation is time out in 60 seconds
            INFO [2020-07-16 08:32:38,882] ({SchedulerFactory45} Kubectl.java[execAndGet]:121) - kubectl [get, pods/md-lrowqh, -o, json, --namespace=default]
            WARN [2020-07-16 08:32:39,044] ({SchedulerFactory45} NotebookServer.java[onStatusChange]:1901) - Job paragraph_1594887984939_-1853065570 is finished, status: ERROR, exception: null, result: %text org.apache.zeppelin.interpreter.InterpreterException: java.io.IOException: Interpreter process is not running
            null
	            at org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open(RemoteInterpreter.java:134)
	            at org.apache.zeppelin.interpreter.remote.RemoteInterpreter.getFormType(RemoteInterpreter.java:298)
	            at org.apache.zeppelin.notebook.Paragraph.jobRun(Paragraph.java:431)
	            at org.apache.zeppelin.notebook.Paragraph.jobRun(Paragraph.java:74)
	            at org.apache.zeppelin.scheduler.Job.run(Job.java:172)
	            at org.apache.zeppelin.scheduler.AbstractScheduler.runJob(AbstractScheduler.java:130)
	            at org.apache.zeppelin.scheduler.RemoteScheduler$JobRunner.run(RemoteScheduler.java:159)
	            at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	            at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	            at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	            at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	            at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	            at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	            at java.lang.Thread.run(Thread.java:748)
            Caused by: java.io.IOException: Interpreter process is not running
            null
	            at org.apache.zeppelin.interpreter.remote.RemoteInterpreter.internal_create(RemoteInterpreter.java:166)
	            at org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open(RemoteInterpreter.java:131)
	            ... 13 more
            INFO [2020-07-16 08:32:39,045] ({SchedulerFactory45} VFSNotebookRepo.java[save]:145) - Saving note 2FDZ75SS9 to Untitled Note 1_2FDZ75SS9.zpln
            INFO [2020-07-16 08:32:39,058] ({SchedulerFactory45} AbstractScheduler.java[runJob]:152) - Job paragraph_1594887984939_-1853065570 finished by scheduler RemoteInterpreter-md-shared_process-shared_session


    #
    # Why is the interpreter pod being given 'zeppelin-server-695446f7c6-9rncm.default.svc' as the hostname ?
    # Why can't the interpreter pod resolve 'zeppelin-server-695446f7c6-9rncm.default.svc' into an address ?
    #




# -----------------------------------------------------
# Getting the logs via command line.
#[user@kubernator]

    kubectl \
        --kubeconfig "${HOME}/.kube/${clustername:?}/config" \
        --namespace default \
        get pods

    >   NAME                               READY   STATUS      RESTARTS   AGE
    >   md-lrowqh                          0/1     Completed   0          30m
    >   sh-pqwnor                          0/1     Completed   0          5d6h
    >   zeppelin-server-695446f7c6-9rncm   3/3     Running     0          5d17h


    kubectl \
        --kubeconfig "${HOME}/.kube/${clustername:?}/config" \
        --namespace default \
        logs \
            sh-pqwnor

    >   Interpreter launch command:  /usr/lib/jvm/java-8-openjdk-amd64/bin/java -Dfile.encoding=UTF-8 -Dlog4j.configuration=file:///zeppelin/conf/log4j.properties -Dzeppelin.log.file='/zeppelin/logs/zeppelin-interpreter-sh-shared_process--sh-pqwnor.log' -Xms1024m -Xmx2048m -XX:MaxPermSize=512m -cp ":/zeppelin/interpreter/sh/*::/zeppelin/interpreter/zeppelin-interpreter-shaded-0.9.0-preview1.jar" org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer zeppelin-server-695446f7c6-9rncm.default.svc 12320 "sh-shared_process" 12321:12321
    >   OpenJDK 64-Bit Server VM warning: ignoring option MaxPermSize=512m; support was removed in 8.0
    >    WARN [2020-07-11 02:17:44,246] ({main} ZeppelinConfiguration.java[create]:159) - Failed to load configuration, proceeding with a default
    >    INFO [2020-07-11 02:17:44,286] ({main} ZeppelinConfiguration.java[create]:171) - Server Host: 0.0.0.0
    >    INFO [2020-07-11 02:17:44,286] ({main} ZeppelinConfiguration.java[create]:173) - Server Port: 8080
    >    INFO [2020-07-11 02:17:44,286] ({main} ZeppelinConfiguration.java[create]:177) - Context Path: /
    >    INFO [2020-07-11 02:17:44,288] ({main} ZeppelinConfiguration.java[create]:178) - Zeppelin Version: 0.9.0-preview1
    >    INFO [2020-07-11 02:17:44,290] ({main} RemoteInterpreterServer.java[<init>]:161) - Starting remote interpreter server on port 0, intpEventServerAddress: zeppelin-server-695446f7c6-9rncm.default.svc:12320
    >   Exception in thread "main" org.apache.zeppelin.shaded.org.apache.thrift.transport.TTransportException: java.net.UnknownHostException: zeppelin-server-695446f7c6-9rncm.default.svc
    >   	at org.apache.zeppelin.shaded.org.apache.thrift.transport.TSocket.open(TSocket.java:226)
    >   	at org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.<init>(RemoteInterpreterServer.java:167)
    >   	at org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.<init>(RemoteInterpreterServer.java:152)
    >   	at org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.main(RemoteInterpreterServer.java:321)
    >   Caused by: java.net.UnknownHostException: zeppelin-server-695446f7c6-9rncm.default.svc
    >   	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184)
    >   	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
    >   	at java.net.Socket.connect(Socket.java:607)
    >   	at org.apache.zeppelin.shaded.org.apache.thrift.transport.TSocket.open(TSocket.java:221)
    >   	... 3 more


    kubectl \
        --kubeconfig "${HOME}/.kube/${clustername:?}/config" \
        --namespace default \
        logs \
            md-lrowqh

    >   Interpreter launch command:  /usr/lib/jvm/java-8-openjdk-amd64/bin/java -Dfile.encoding=UTF-8 -Dlog4j.configuration=file:///zeppelin/conf/log4j.properties -Dzeppelin.log.file='/zeppelin/logs/zeppelin-interpreter-md-shared_process--md-lrowqh.log' -Xms1024m -Xmx2048m -XX:MaxPermSize=512m -cp ":/zeppelin/interpreter/md/*::/zeppelin/interpreter/zeppelin-interpreter-shaded-0.9.0-preview1.jar" org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer zeppelin-server-695446f7c6-9rncm.default.svc 12320 "md-shared_process" 12321:12321
    >   OpenJDK 64-Bit Server VM warning: ignoring option MaxPermSize=512m; support was removed in 8.0
    >    WARN [2020-07-16 08:31:38,522] ({main} ZeppelinConfiguration.java[create]:159) - Failed to load configuration, proceeding with a default
    >    INFO [2020-07-16 08:31:38,559] ({main} ZeppelinConfiguration.java[create]:171) - Server Host: 0.0.0.0
    >    INFO [2020-07-16 08:31:38,560] ({main} ZeppelinConfiguration.java[create]:173) - Server Port: 8080
    >    INFO [2020-07-16 08:31:38,560] ({main} ZeppelinConfiguration.java[create]:177) - Context Path: /
    >    INFO [2020-07-16 08:31:38,562] ({main} ZeppelinConfiguration.java[create]:178) - Zeppelin Version: 0.9.0-preview1
    >    INFO [2020-07-16 08:31:38,563] ({main} RemoteInterpreterServer.java[<init>]:161) - Starting remote interpreter server on port 0, intpEventServerAddress: zeppelin-server-695446f7c6-9rncm.default.svc:12320
    >   Exception in thread "main" org.apache.zeppelin.shaded.org.apache.thrift.transport.TTransportException: java.net.UnknownHostException: zeppelin-server-695446f7c6-9rncm.default.svc
    >   	at org.apache.zeppelin.shaded.org.apache.thrift.transport.TSocket.open(TSocket.java:226)
    >   	at org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.<init>(RemoteInterpreterServer.java:167)
    >   	at org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.<init>(RemoteInterpreterServer.java:152)
    >   	at org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.main(RemoteInterpreterServer.java:321)
    >   Caused by: java.net.UnknownHostException: zeppelin-server-695446f7c6-9rncm.default.svc
    >   	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184)
    >   	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
    >   	at java.net.Socket.connect(Socket.java:607)
    >   	at org.apache.zeppelin.shaded.org.apache.thrift.transport.TSocket.open(TSocket.java:221)
    >   	... 3 more


    kubectl \
        --kubeconfig "${HOME}/.kube/${clustername:?}/config" \
        --namespace default \
        logs \
            zeppelin-server-695446f7c6-9rncm

    >   Error from server (BadRequest): a container name must be specified for pod zeppelin-server-695446f7c6-9rncm, choose one of: [zeppelin-server zeppelin-server-gateway dnsmasq]


    kubectl \
        --kubeconfig "${HOME}/.kube/${clustername:?}/config" \
        --namespace default \
        logs \
            zeppelin-server-695446f7c6-9rncm \
            zeppelin-server

    >    INFO [2020-07-16 08:31:36,090] ({SchedulerFactory45} K8sStandardInterpreterLauncher.java[launch]:135) - Launching Interpreter: md
    >    INFO [2020-07-16 08:31:36,094] ({SchedulerFactory45} K8sRemoteInterpreterProcess.java[apply]:225) - Apply /zeppelin/k8s/interpreter/100-interpreter-spec.yaml
    >    INFO [2020-07-16 08:31:36,100] ({SchedulerFactory45} Kubectl.java[execAndGet]:121) - kubectl [apply, -f, -, --namespace=default]
    >    INFO [2020-07-16 08:31:36,393] ({SchedulerFactory45} Kubectl.java[execAndGet]:121) - kubectl [wait, pod/md-lrowqh, --for=condition=Ready, --timeout=60s, --namespace=default]
    >    INFO [2020-07-16 08:32:38,652] ({SchedulerFactory45} K8sRemoteInterpreterProcess.java[start]:117) - Interpreter pod creation is time out in 60 seconds
    >    INFO [2020-07-16 08:32:38,882] ({SchedulerFactory45} Kubectl.java[execAndGet]:121) - kubectl [get, pods/md-lrowqh, -o, json, --namespace=default]
    >    WARN [2020-07-16 08:32:39,044] ({SchedulerFactory45} NotebookServer.java[onStatusChange]:1901) - Job paragraph_1594887984939_-1853065570 is finished, status: ERROR, exception: null, result: %text org.apache.zeppelin.interpreter.InterpreterException: java.io.IOException: Interpreter process is not running
    >   null
    >   	at org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open(RemoteInterpreter.java:134)
    >   	at org.apache.zeppelin.interpreter.remote.RemoteInterpreter.getFormType(RemoteInterpreter.java:298)
    >   	at org.apache.zeppelin.notebook.Paragraph.jobRun(Paragraph.java:431)
    >   	at org.apache.zeppelin.notebook.Paragraph.jobRun(Paragraph.java:74)
    >   	at org.apache.zeppelin.scheduler.Job.run(Job.java:172)
    >   	at org.apache.zeppelin.scheduler.AbstractScheduler.runJob(AbstractScheduler.java:130)
    >   	at org.apache.zeppelin.scheduler.RemoteScheduler$JobRunner.run(RemoteScheduler.java:159)
    >   	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
    >   	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
    >   	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
    >   	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
    >   	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
    >   	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
    >   	at java.lang.Thread.run(Thread.java:748)
    >   Caused by: java.io.IOException: Interpreter process is not running
    >   null
    >   	at org.apache.zeppelin.interpreter.remote.RemoteInterpreter.internal_create(RemoteInterpreter.java:166)
    >   	at org.apache.zeppelin.interpreter.remote.RemoteInterpreter.open(RemoteInterpreter.java:131)
    >   	... 13 more
    >   
    >    INFO [2020-07-16 08:32:39,045] ({SchedulerFactory45} VFSNotebookRepo.java[save]:145) - Saving note 2FDZ75SS9 to Untitled Note 1_2FDZ75SS9.zpln
    >    INFO [2020-07-16 08:32:39,058] ({SchedulerFactory45} AbstractScheduler.java[runJob]:152) - Job paragraph_1594887984939_-1853065570 finished by scheduler RemoteInterpreter-md-shared_process-shared_session
    >    INFO [2020-07-16 08:32:39,373] ({qtp540159270-2250} Kubectl.java[execAndGet]:121) - kubectl [get, pods/sh-pqwnor, -o, json, --namespace=default]
    >    INFO [2020-07-16 08:32:39,520] ({qtp540159270-2250} Kubectl.java[execAndGet]:121) - kubectl [get, pods/md-lrowqh, -o, json, --namespace=default]


    #
    # So where does 'zeppelin-server-695446f7c6-9rncm.default.svc:12320' come from ?
    #


# -----------------------------------------------------
# Try resolving the names from inside a pod.
#[user@kubernator]

    kubectl \
        --kubeconfig "${HOME}/.kube/${clustername:?}/config" \
        --namespace default \
        attach \
            md-lrowqh \
            -i

    >   error: cannot attach a container in a completed pod; current phase is Succeeded


    kubectl \
        --kubeconfig "${HOME}/.kube/${clustername:?}/config" \
        --namespace default \
        attach \
            zeppelin-server-695446f7c6-9rncm \
            -i

    >   Defaulting container name to zeppelin-server.
    >   Use 'kubectl describe pod/zeppelin-server-695446f7c6-9rncm -n default' to see all of the containers in this pod.
    >   If you don't see a command prompt, try pressing enter.
    >   


    kubectl \
        --kubeconfig "${HOME}/.kube/${clustername:?}/config" \
        --namespace default \
        exec \
            zeppelin-server-695446f7c6-9rncm \
            -- \
            ls

    >   Defaulting container name to zeppelin-server.
    >   Use 'kubectl describe pod/zeppelin-server-695446f7c6-9rncm -n default' to see all of the containers in this pod.
    >   bin
    >   conf
    >   interpreter
    >   k8s
    >   lib
    >   LICENSE
    >   licenses
    >   logs
    >   notebook
    >   NOTICE
    >   plugins
    >   README.md
    >   run
    >   webapps
    >   zeppelin-web-0.9.0-preview1.war
    >   zeppelin-web-angular-0.9.0-preview1.war


    kubectl \
        --kubeconfig "${HOME}/.kube/${clustername:?}/config" \
        --namespace default \
        exec \
            zeppelin-server-695446f7c6-9rncm \
            -c 'zeppelin-server' \
            host 'md-lrowqh'

    >   rpc error: code = 2 desc = oci runtime error: exec failed: container_linux.go:247: starting container process caused "exec: \"host\": executable file not found in $PATH"


    kubectl \
        --kubeconfig "${HOME}/.kube/${clustername:?}/config" \
        --namespace default \
        exec \
            zeppelin-server-695446f7c6-9rncm \
            -c 'zeppelin-server' \
            -i -t \
            /bin/bash

    >   zeppelin@zeppelin-server-695446f7c6-9rncm:~$ ls
    >   bin   interpreter  lib	    licenses  notebook	plugins    run	    zeppelin-web-0.9.0-preview1.war
    >   conf  k8s	   LICENSE  logs      NOTICE	README.md  webapps  zeppelin-web-angular-0.9.0-preview1.war

# -----------------------------------------------------
# Try resolve the name using 'host' or 'ping'.
#[user@container]

    host md-lrowqh

    >   bash: host: command not found

ping md-lrowqh

    >   bash: ping: command not found


# -----------------------------------------------------
# Try using apt to install 'host' or 'ping'.
#[user@container]

    apt-get update

    >   Reading package lists... Done
    >   W: chmod 0700 of directory /var/lib/apt/lists/partial failed - SetupAPTPartialDirectory (1: Operation not permitted)
    >   E: Could not open lock file /var/lib/apt/lists/lock - open (13: Permission denied)
    >   E: Unable to lock directory /var/lib/apt/lists/


# -----------------------------------------------------
# Try resolve the name using 'curl'.
#[user@container]

    curl --head 'http://md-lrowqh/'

    >   curl: (6) Could not resolve host: md-lrowqh

    # Ahah - got a clue !


    curl --head 'http://zeppelin-server/'

    >   HTTP/1.1 200 OK
    >   Server: nginx/1.14.0
    >   Date: Thu, 16 Jul 2020 09:21:34 GMT
    >   Content-Type: text/html
    >   Content-Length: 4660
    >   Connection: keep-alive
    >   ....


    curl --head 'http://zeppelin-server-695446f7c6-9rncm.default.svc/'

    >   curl: (6) Could not resolve host: zeppelin-server-695446f7c6-9rncm.default.svc


    curl --head 'http://zeppelin-server-695446f7c6-9rncm.default/'

    >   curl: (6) Could not resolve host: zeppelin-server-695446f7c6-9rncm.default


    curl --head 'http://zeppelin-server-695446f7c6-9rncm/'

    >   HTTP/1.1 200 OK
    >   Server: nginx/1.14.0
    >   Date: Thu, 16 Jul 2020 09:23:49 GMT
    >   Content-Type: text/html
    >   Content-Length: 4660
    >   Connection: keep-alive
    >   ....


# -----------------------------------------------------
# Check what our hostname is.
#[user@container]

    hostname

    >   zeppelin-server-695446f7c6-9rncm

    hostname -f

    >   zeppelin-server-695446f7c6-9rncm

    # So who is adding '.default.svc' to the end ?


    #
    # A clue ?
    # https://github.com/apache/zeppelin/pull/3240#pullrequestreview-233308069

# -----------------------------------------------------
# Grep for the phrase 'default.svc'.
#[user@container]

    grep -r 'default.svc' *

    >   conf/interpreter.json:          "value": "k8s://https://kubernetes.default.svc",
    >   k8s/zeppelin-server.yaml:      value: k8s://https://kubernetes.default.svc

    #
    # Only appear once, in the Spark section
    #

    less conf/interpreter.json
    /default.svc/

        "SPARK_MASTER": {
          "name": "SPARK_MASTER",
          "value": "k8s://https://kubernetes.default.svc",
          "type": "string",
          "description": "local | yarn-client"
        },


# -----------------------------------------------------
# Anything interesting in our environment ?
#[user@container]

    set | less

    >   ....
    >   HOME=/zeppelin
    >   HOSTNAME=zeppelin-server-695446f7c6-9rncm
    >   HOSTTYPE=x86_64
    >   ....
    >   KUBERNETES_PORT=tcp://10.254.0.1:443
    >   KUBERNETES_PORT_443_TCP=tcp://10.254.0.1:443
    >   KUBERNETES_PORT_443_TCP_ADDR=10.254.0.1
    >   KUBERNETES_PORT_443_TCP_PORT=443
    >   KUBERNETES_PORT_443_TCP_PROTO=tcp
    >   KUBERNETES_SERVICE_HOST=10.254.0.1
    >   KUBERNETES_SERVICE_PORT=443
    >   KUBERNETES_SERVICE_PORT_HTTPS=443
    >   ....
    >   POD_NAME=zeppelin-server-695446f7c6-9rncm
    >   POD_UID=c230fe83-44ca-40d0-89ec-0d3f2cb57f11
    >   ....
    >   SERVICE_DOMAIN=local.zeppelin-project.org:8080
    >   ....
    >   SPARK_HOME=/spark
    >   SPARK_MASTER=k8s://https://kubernetes.default.svc
    >   ....
    >   ZEPPELIN_ADDR=0.0.0.0
    >   ZEPPELIN_HOME=/zeppelin
    >   ZEPPELIN_K8S_CONTAINER_IMAGE=apache/zeppelin:0.9.0
    >   ZEPPELIN_K8S_SPARK_CONTAINER_IMAGE=spark:2.4.5
    >   ZEPPELIN_SERVER_PORT=tcp://10.254.177.111:80
    >   ZEPPELIN_SERVER_PORT_12320_TCP=tcp://10.254.177.111:12320
    >   ZEPPELIN_SERVER_PORT_12320_TCP_ADDR=10.254.177.111
    >   ZEPPELIN_SERVER_PORT_12320_TCP_PORT=12320
    >   ZEPPELIN_SERVER_PORT_12320_TCP_PROTO=tcp
    >   ZEPPELIN_SERVER_PORT_80_TCP=tcp://10.254.177.111:80
    >   ZEPPELIN_SERVER_PORT_80_TCP_ADDR=10.254.177.111
    >   ZEPPELIN_SERVER_PORT_80_TCP_PORT=80
    >   ZEPPELIN_SERVER_PORT_80_TCP_PROTO=tcp
    >   ZEPPELIN_SERVER_RPC_PORTRANGE=12320:12320
    >   ZEPPELIN_SERVER_SERVICE_HOST=10.254.177.111
    >   ZEPPELIN_SERVER_SERVICE_PORT=80
    >   ZEPPELIN_SERVER_SERVICE_PORT_HTTP=80
    >   ZEPPELIN_SERVER_SERVICE_PORT_RPC=12320
    >   Z_HOME=/zeppelin
    >   Z_VERSION=0.9.0-preview1
    >   ....

# -----------------------------------------------------
# Grep for the phrase 'default'.
#[user@container]

    grep -r 'default' *

    >   bin/zeppelin-daemon.sh:function initialize_default_directories() {
    >   bin/zeppelin-daemon.sh:  initialize_default_directories
    >   bin/zeppelin-daemon.sh:  initialize_default_directories
    >   ....
    >   ....
    >   Binary file plugins/Launcher/ClusterInterpreterLauncher/activation-1.1.jar matches
    >   Binary file plugins/Launcher/DockerInterpreterLauncher/activation-1.1.jar matches
    >   Binary file plugins/NotebookRepo/S3NotebookRepo/aws-java-sdk-core-1.11.736.jar matches
    >   Binary file zeppelin-web-0.9.0-preview1.war matches
    >   Binary file zeppelin-web-angular-0.9.0-preview1.war matches


# -----------------------------------------------------
# Grep for the phrase 'svc'.
#[user@container]

    grep -r 'svc' *

    >   ....
    >   ....
    >   Binary file plugins/Launcher/ClusterInterpreterLauncher/guava-22.0.jar matches
    >   Binary file plugins/Launcher/DockerInterpreterLauncher/guava-22.0.jar matches
    >   Binary file plugins/Launcher/K8sStandardInterpreterLauncher/guava-22.0.jar matches
    >   Binary file plugins/NotebookRepo/S3NotebookRepo/aws-java-sdk-kms-1.11.736.jar matches
    >   Binary file plugins/NotebookRepo/S3NotebookRepo/aws-java-sdk-s3-1.11.736.jar matches
    >   Binary file zeppelin-web-0.9.0-preview1.war matches
    >   Binary file zeppelin-web-angular-0.9.0-preview1.war matches


# -----------------------------------------------------
# Found where the interpreter command comes from.
#[user@container]

    https://zeppelin.apache.org/docs/0.9.0-SNAPSHOT/quickstart/kubernetes.html#zeppelin-on-kubernetes-1

        The launcher creates each interpreter in a Pod using templates located under k8s/interpreter/ directory.
        Templates in the directory applied in alphabetical order.


    ls k8s/interpreter/

    >   100-interpreter-spec.yaml


    less k8s/interpreter/100-interpreter-spec.yaml

    >   ....
    >     containers:
    >     - name: {{zeppelin.k8s.interpreter.container.name}}
    >       image: {{zeppelin.k8s.interpreter.container.image}}
    >       command: ["sh", "-c", "$(ZEPPELIN_HOME)/bin/interpreter.sh -d $(ZEPPELIN_HOME)/interpreter/{{zeppelin.k8s.interpreter.group.name}} -r {{zeppelin.k8s.interpreter.rpc.portRange}} -c {{zeppelin.k8s.server.rpc.host}} -p {{zeppelin.k8s.server.rpc.portRange}} -i {{zeppelin.k8s.interpreter.group.id}} -l {{zeppelin.k8s.interpreter.localRepo}} -g {{zeppelin.k8s.interpreter.setting.name}}"]
    >       lifecycle:
    >         preStop:
    >           exec:
    >             # SIGTERM triggers a quick exit; gracefully terminate instead
    >             command: ["sh", "-c", "ps -ef | grep org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer | grep -v grep | awk '{print $2}' | xargs kill"]
    >       env:
    >   ....


# -----------------------------------------------------
# Find where 'zeppelin.k8s.server.rpc.host' come from ..
#[user@container]

    grep -r 'zeppelin.k8s.server.rpc.host'

    >   ....
    >   k8s/interpreter/100-interpreter-spec.yaml:    command: ["sh", "-c", "$(ZEPPELIN_HOME)/bin/interpreter.sh ....
    >   ....

    #
    # Only in the template ?
    # Something has to have set the value !


    Google search found this.
    http://mail-archives.apache.org/mod_mbox/zeppelin-dev/201905.mbox/%3C155685032201.5878.14237618149044549801.gitbox@gitbox.apache.org%3E

    Discussion about pull request #3240: [ZEPPELIN-3840] Zeppelin on Kubernetes

    zeppelinServiceHost is passed to K8sRemoteInterpreterProcess in the constructor
    not changed or used, apart from put into k8sProperties

    File path: zeppelin-plugins/launcher/k8s-standard/src/main/java/org/apache/zeppelin/interpreter/launcher/K8sRemoteInterpreterProcess.java

         ....
    +  Properties getTemplateBindings() throws IOException {
    +    Properties k8sProperties = new Properties();
         ....
    +    k8sProperties.put("zeppelin.k8s.server.rpc.host", zeppelinServiceHost);
         ....
    +    // interpreter properties overrides the values
    +    k8sProperties.putAll(Maps.fromProperties(properties));
    +    return k8sProperties;
    +  }
         ....

    That last comment might be a way to fix the issue for now.
    +    // interpreter properties overrides the values

    #
    # Clues on how to set properties ?
    # https://stackoverflow.com/questions/62209713/zeppelin-k8s-change-interpreter-pod-configuration

    #
    # Pull request [ZEPPELIN-3840] Zeppelin on Kubernetes #3240
    # https://github.com/apache/zeppelin/pull/3240

    #
    # Most recent image tag for Zeppelin is 0.9.0
    # https://hub.docker.com/r/apache/zeppelin/tags

    #
    # Latest documentation for Zeppelin.
    # 2020-04-05 05:06 https://zeppelin.apache.org/docs/0.9.0-SNAPSHOT/
    # 2020-03-27 04:40 https://zeppelin.apache.org/docs/0.9.0-preview1/

    #
    # Zeppelin on Kubernetes
    # https://zeppelin.apache.org/docs/0.9.0-SNAPSHOT/quickstart/kubernetes.html#zeppelin-on-kubernetes-1

    #
    # Similar issue, no fix.
    # https://stackoverflow.com/questions/61356372/zeppelin-error-interpreter-process-is-not-running-after-delploy-to-kubernetes

    #
    # Similar issue, no fix.
    # https://issues.apache.org/jira/projects/ZEPPELIN/issues/ZEPPELIN-4804?filter=allopenissues

    #
    # Entry point shell script for interpreter pod containers.
    # https://github.com/apache/zeppelin/blob/master/bin/interpreter.sh


    #
    # Spark 3.0 + Zeppelin on Kubernetes in 5min with STAROID
    # https://medium.com/@leemoonsoo/spark-3-0-zeppelin-on-kubernetes-with-staroid-c3a9d4052e20

    #
    # opendatastudio/spark
    # https://hub.docker.com/r/opendatastudio/spark/tags





-------------


    #
    # Running Spark on Kubernetes
    # http://spark.apache.org/docs/latest/running-on-kubernetes.html#docker-images

    #
    # Building a Scalable Spark cluster with Docker Containers
    # https://towardsdatascience.com/building-a-scalable-spark-cluster-with-docker-containers-f921d860fa46











