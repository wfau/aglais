#
# <meta:header>
#   <meta:licence>
#     Copyright (c) 2020, ROE (http://www.roe.ac.uk/)
#
#     This information is free software: you can redistribute it and/or modify
#     it under the terms of the GNU General Public License as published by
#     the Free Software Foundation, either version 3 of the License, or
#     (at your option) any later version.
#
#     This information is distributed in the hope that it will be useful,
#     but WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#     GNU General Public License for more details.
#
#     You should have received a copy of the GNU General Public License
#     along with this program.  If not, see <http://www.gnu.org/licenses/>.
#   </meta:licence>
# </meta:header>
#
#

    Documenting the steps needed to deploy a modified version of Zeppelin.
    These steps require a VM at ROE to build and upload the zeppelin-main image.


# -----------------------------------------------------
# First edit .. add some debug
#[user@Desktop]

    Paragraph
    zeppelin-zengine/src/main/java/org/apache/zeppelin/notebook/Paragraph.java

    >   ....
    >   ....
    >         if (this.user != null) {
    >           if (subject != null && !interpreterSetting.isUserAuthorized(subject.getUsersAndRoles())) {
    >             String msg = String.format("%s has no permission for %s", subject.getUser(), intpText);
    >             LOGGER.error(msg);
    >             return new InterpreterResult(Code.ERROR, msg);
    >           }
    >         }
    >
    >   +     LOGGER.info(
    >   +       "ZRQ test [paragraph: {}, interpreter: {}, note_id: {}, user: {}, subject: {}]",
    >   +       this.getId(),
    >   +       this.interpreter.getClassName(),
    >   +       this.note.getId(),
    >   +       this.user,
    >   +       this.subject.getUser()
    >   +       );
    >
    >         for (Paragraph p : userParagraphMap.values()) {
    >           p.setText(getText());
    >         }
    >   ....
    >   ....

# -----------------------------------------------------
# Commit and push
#[user@Desktop]

    git add zeppelin-zengine/src/main/java/org/apache/zeppelin/notebook/Paragraph.java
    git commit -m "First edit"
    git push


# -----------------------------------------------------
# -----------------------------------------------------
# Run a Java build container.
#[user@wumar]

    podman run \
        --rm \
        --tty \
        --interactive \
        --hostname builder \
        --env "SSH_AUTH_SOCK=/tmp/ssh_auth_sock" \
        --volume "${SSH_AUTH_SOCK}:/tmp/ssh_auth_sock:z" \
        --volume '/var/local/cache:/var/local/cache:rw' \
        --volume '/var/local/build:/var/local/build:rw' \
        "firethorn/builder:latest" \
        bash

    >   ....
    >   ....


# -----------------------------------------------------
# Install bzip2.
# TODO Add this to our builder image.
#[root@builder]

    dnf install -y bzip2

# -----------------------------------------------------
# Add a user account to run the build.
#[root@builder]

    adduser Tinselpear
    su - Tinselpear


# -----------------------------------------------------
# Configure the source code paths.
#[user@builder]

    cat > "${HOME}/aglais.env" << 'EOF'
AGLAIS_REPO='https://github.com/Zarquan/aglais.git'
AGLAIS_HOME='/var/local/build/aglais'
AGLAIS_CODE="${AGLAIS_HOME:?}/github-zrq"
AGLAIS_CLOUD=gaia-prod
AGLAIS_USER=albert

ZEPPELIN_REPO='https://github.com/Zarquan/aglais-zeppelin.git'
ZEPPELIN_HOME='/var/local/build/aglais-zeppelin'
ZEPPELIN_CODE="${ZEPPELIN_HOME:?}/github-zrq"
EOF


# -----------------------------------------------------
# Update our source code.
#[user@builder]

    source "${HOME}/aglais.env"
    pushd  "${AGLAIS_CODE:?}"

        git pull

    popd

    source "${HOME}/aglais.env"
    pushd  "${ZEPPELIN_CODE:?}"

        git pull

    popd

# -----------------------------------------------------
# Build our Zeppelin code.
#[user@builder]

    source "${HOME}/aglais.env"
    pushd  "${ZEPPELIN_CODE:?}"

        mvn clean package -D skipTests -P build-distr -P hadoop3

    popd

    source "${HOME}/aglais.env"
    pushd  "${ZEPPELIN_CODE:?}"

        pushd zeppelin-zengine
            mvn clean install -D skipTests -P hadoop3
        popd

        pushd zeppelin-distribution
            mvn clean package -D skipTests -P build-distr -P hadoop3
        popd

    popd


# -----------------------------------------------------
# -----------------------------------------------------
# Build our main Zeppelin image.
#[user@wumar]

    source "${HOME}/aglais.env"

    buildsrc=20200913-152718
    buildtag=$(date '+%Y%m%d-%H%M%S')
    buildtime=$(date '+%Y-%m-%dT%H:%M:%S')

    buildah bud \
        --format docker \
        --tag aglais/zeppelin-main:latest \
        --tag aglais/zeppelin-main:${buildtag:?} \
        --build-arg "buildsrc=${buildsrc:?}" \
        --build-arg "buildtag=${buildtag:?}" \
        --build-arg "buildtime=${buildtime:?}" \
        --file "${AGLAIS_CODE:?}/experiments/zrq/zeppelin/docker/Dockerfile" \
        "${ZEPPELIN_CODE:?}/${zepresult:?}"

    >   ....
    >   ....


# -----------------------------------------------------
# Push our main image to Docker hub.
#[user@wumar]

    podman push "aglais/zeppelin-main:${buildtag:?}"
    podman push "aglais/zeppelin-main:latest"

    >   ....
    >   ....

# -----------------------------------------------------
# Build our modified Zeppelin image.
#[user@wumar]

    # This includes shiro.ini with hard test users.
    # This includes an interpreter-spec with hard coded PVC.

    buildsrc=${buildtag:?}

    buildtag=$(date '+%Y%m%d-%H%M%S')
    buildtime=$(date '+%Y-%m-%dT%H:%M:%S')

    buildah bud \
        --format docker \
        --tag aglais/zeppelin-mod:latest \
        --tag aglais/zeppelin-mod:${buildtag:?} \
        --build-arg "buildsrc=${buildsrc:?}" \
        --build-arg "buildtag=${buildtag:?}" \
        --build-arg "buildtime=${buildtime:?}" \
        --file "${AGLAIS_CODE}/experiments/zrq/zeppelin/docker/Dockermod" \
        "${AGLAIS_CODE:?}/experiments/zrq/zeppelin"

    >   ....
    >   ....


# -----------------------------------------------------
# Push our modified image to Docker hub.
#[user@wumar]

    podman push "aglais/zeppelin-mod:${buildtag:?}"
    podman push "aglais/zeppelin-mod:latest"

    >   ....
    >   ....


# -----------------------------------------------------
# -----------------------------------------------------
# Edit our zeppelin-server deployment template.
#[user@desktop]

    # TODO Replace Gedit with Sed.

    source "${HOME}/aglais.env"
    gedit "${AGLAIS_CODE:?}/experiments/zrq/zeppelin/k8s/zeppelin-server.yaml"

        ....
        ....

    diff "${ZEPPELIN_CODE:?}/k8s/zeppelin-server.yaml" \
         "${AGLAIS_CODE:?}/experiments/zrq/zeppelin/k8s/zeppelin-server.yaml"

    >   31,33c31,33
    >   <   ZEPPELIN_K8S_SPARK_CONTAINER_IMAGE: spark:2.4.5
    >   <   ZEPPELIN_K8S_CONTAINER_IMAGE: apache/zeppelin-interpreter:0.9.0-aglais-0.0.1
    >   <   ZEPPELIN_HOME: /opt/zeppelin
    >   ---
    >   >   ZEPPELIN_K8S_SPARK_CONTAINER_IMAGE: aglais/pyspark-mod:2020.08.11
    >   >   ZEPPELIN_K8S_CONTAINER_IMAGE: aglais/zeppelin-mod:20200914-180450
    >   >   ZEPPELIN_HOME: /zeppelin
    >   118c118
    >   <         image: apache/zeppelin-server:0.9.0-aglais-0.0.1
    >   ---
    >   >         image: aglais/zeppelin-mod:20200914-180450

# -----------------------------------------------------
# -----------------------------------------------------
# Deploy Zeppelin.
#[root@kubenator]

    kubectl delete \
        deployment zeppelin-server

    kubectl apply \
        --filename \
            "/zeppelin/k8s/zeppelin-server.yaml"

    >   ....
    >   ....


