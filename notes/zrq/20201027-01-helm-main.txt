#
# <meta:header>
#   <meta:licence>
#     Copyright (c) 2020, ROE (http://www.roe.ac.uk/)
#
#     This information is free software: you can redistribute it and/or modify
#     it under the terms of the GNU General Public License as published by
#     the Free Software Foundation, either version 3 of the License, or
#     (at your option) any later version.
#
#     This information is distributed in the hope that it will be useful,
#     but WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#     GNU General Public License for more details.
#
#     You should have received a copy of the GNU General Public License
#     along with this program.  If not, see <http://www.gnu.org/licenses/>.
#   </meta:licence>
# </meta:header>
#
#


    Target:

        Create K8s cluster
        Add Ceph router

        Create a top level Helm chart to install the Aglais components

            Ceph CSI driver
            Ceph Manila driver
            Dashboard

            Zeppelin
            Drupal

    Result:



    Sources:

        Openstack

            Delete everything
            20201013-03-delete-all.txt

            Magnum cluster
            20201009-02-cluster-create.txt

            Ceph router
            20201027-02-ceph-router.txt

        Kubernetes/Helm

            Nginx-controller
            20200807-06-nginx-ingress.txt

            Dashboard
            20200807-07-dashboard.txt

            CephFS-CSI
            20200904-02-cephfs-csi.txt

            Manila-CSI
            20200904-03-manila-csi.txt

        Helm chart examples
        https://github.com/codefresh-io/helm-chart-examples/tree/master/chart-of-charts

        Helm best practices
        https://codefresh.io/docs/docs/new-helm/helm-best-practices/#umbrella-charts

# -----------------------------------------------------
# Find the latest version by requesting 'index.yaml' from the Helm repo.
#[user@desktop]

    curl https://kubernetes.github.io/cloud-provider-openstack/index.yaml

    >   apiVersion: v1
    >   entries:
    >     openstack-cinder-csi:
    >     - apiVersion: v1
    >       appVersion: v1.19.0
    >       created: "2020-09-28T10:25:35.075557926Z"
    >       description: Cinder CSI Chart for OpenStack
    >       digest: 4059348056c4c64f4188f5935e5def80214514ff8198d5213c6d49bffa94409a
    >       home: https://github.com/kubernetes/cloud-provider-openstack
    >       icon: https://github.com/kubernetes/kubernetes/blob/master/logo/logo.png
    >       maintainers:
    >       - email: brtknr@bath.edu
    >         name: brtknr
    >       name: openstack-cinder-csi
    >       urls:
    >       - https://github.com/kubernetes/cloud-provider-openstack/releases/download/openstack-cinder-csi-1.2.2/openstack-cinder-csi-1.2.2.tgz
    >       version: 1.2.2
    >     openstack-manila-csi:
    >     - apiVersion: v1
    >       appVersion: v1.19.0
    >       created: "2020-09-28T10:25:35.206069325Z"
    >       description: Manila CSI Chart for OpenStack
    >       digest: 1d8c90f04db976befe9e27a315e787ab66657da35cbbcd253582e179e30b344d
    >       home: http://github.com/kubernetes/cloud-provider-openstack
    >       icon: https://github.com/kubernetes/kubernetes/blob/master/logo/logo.png
    >       maintainers:
    >       - email: brtknr@bath.edu
    >         name: brtknr
    >       name: openstack-manila-csi
    >       urls:
    >       - https://github.com/kubernetes/cloud-provider-openstack/releases/download/openstack-manila-csi-0.2.1/openstack-manila-csi-0.2.1.tgz
    >       version: 0.2.1
    >   generated: "2020-09-28T10:25:34.941244248Z"


# -----------------------------------------------------
# Create a container to work with.
#[user@desktop]

    source "${HOME}/aglais.env"

    podman run \
        --rm \
        --tty \
        --interactive \
        --hostname kubernator \
        --env "cloudname=${AGLAIS_CLOUD:?}" \
        --env "clustername=${CLUSTER_NAME:?}" \
        --volume "${HOME}/clouds.yaml:/etc/openstack/clouds.yaml:z" \
        --volume "${AGLAIS_CODE:?}/experiments/zrq/helm:/helm:z" \
        atolmis/openstack-client \
        bash


# -----------------------------------------------------
# Get the connection details for our cluster.
#[user@kubernator]

    mkdir -p "${HOME}/.kube"
    openstack \
        --os-cloud "${cloudname:?}" \
        coe cluster config \
            "${clustername:?}" \
                --force \
                --dir "${HOME}/.kube"

    kubectl \
        cluster-info

    >   Kubernetes master is running at https://....
    >   Heapster is running at https://....
    >   CoreDNS is running at https://....


# -----------------------------------------------------
# Install the main Aglias chart.
#[user@kubernator]

    namespace=${clustername,,}
    chartname=aglais

    helm dependency update \
        "/helm/aglais"

    >   Saving 3 charts
    >   Downloading ingress-nginx from repo https://kubernetes.github.io/ingress-nginx
    >   Downloading ceph-csi-cephfs from repo https://ceph.github.io/csi-charts
    >   Downloading openstack-manila-csi from repo https://kubernetes.github.io/cloud-provider-openstack
    >   Deleting outdated charts


    helm install \
        --debug \
        --create-namespace \
        --namespace "${namespace:?}" \
        "${chartname:?}" \
        "/helm/aglais"


    >   install.go:159: [debug] Original chart version: ""
    >   install.go:176: [debug] CHART PATH: /helm/aglais
    >
    >   client.go:108: [debug] creating 1 resource(s)
    >   client.go:258: [debug] Starting delete for "aglais-ingress-nginx-admission" ServiceAccount
    >   client.go:287: [debug] serviceaccounts "aglais-ingress-nginx-admission" not found
    >   client.go:108: [debug] creating 1 resource(s)
    >   client.go:258: [debug] Starting delete for "aglais-ingress-nginx-admission" ClusterRole
    >   client.go:287: [debug] clusterroles.rbac.authorization.k8s.io "aglais-ingress-nginx-admission" not found
    >   client.go:108: [debug] creating 1 resource(s)
    >   client.go:258: [debug] Starting delete for "aglais-ingress-nginx-admission" ClusterRoleBinding
    >   client.go:287: [debug] clusterrolebindings.rbac.authorization.k8s.io "aglais-ingress-nginx-admission" not found
    >   client.go:108: [debug] creating 1 resource(s)
    >   client.go:258: [debug] Starting delete for "aglais-ingress-nginx-admission" Role
    >   client.go:287: [debug] roles.rbac.authorization.k8s.io "aglais-ingress-nginx-admission" not found
    >   client.go:108: [debug] creating 1 resource(s)
    >   client.go:258: [debug] Starting delete for "aglais-ingress-nginx-admission" RoleBinding
    >   client.go:287: [debug] rolebindings.rbac.authorization.k8s.io "aglais-ingress-nginx-admission" not found
    >   client.go:108: [debug] creating 1 resource(s)
    >   client.go:258: [debug] Starting delete for "aglais-ingress-nginx-admission-create" Job
    >   client.go:287: [debug] jobs.batch "aglais-ingress-nginx-admission-create" not found
    >   client.go:108: [debug] creating 1 resource(s)
    >   client.go:467: [debug] Watching for changes to Job aglais-ingress-nginx-admission-create with timeout of 5m0s
    >   client.go:495: [debug] Add/Modify event for aglais-ingress-nginx-admission-create: ADDED
    >   client.go:534: [debug] aglais-ingress-nginx-admission-create: Jobs active: 1, jobs failed: 0, jobs succeeded: 0
    >   client.go:495: [debug] Add/Modify event for aglais-ingress-nginx-admission-create: MODIFIED
    >   client.go:258: [debug] Starting delete for "aglais-ingress-nginx-admission" ServiceAccount
    >   client.go:258: [debug] Starting delete for "aglais-ingress-nginx-admission" ClusterRole
    >   client.go:258: [debug] Starting delete for "aglais-ingress-nginx-admission" ClusterRoleBinding
    >   client.go:258: [debug] Starting delete for "aglais-ingress-nginx-admission" Role
    >   client.go:258: [debug] Starting delete for "aglais-ingress-nginx-admission" RoleBinding
    >   client.go:258: [debug] Starting delete for "aglais-ingress-nginx-admission-create" Job
    >   client.go:108: [debug] creating 36 resource(s)
    >   client.go:258: [debug] Starting delete for "aglais-ingress-nginx-admission" ServiceAccount
    >   client.go:287: [debug] serviceaccounts "aglais-ingress-nginx-admission" not found
    >   client.go:108: [debug] creating 1 resource(s)
    >   client.go:258: [debug] Starting delete for "aglais-ingress-nginx-admission" ClusterRole
    >   client.go:287: [debug] clusterroles.rbac.authorization.k8s.io "aglais-ingress-nginx-admission" not found
    >   client.go:108: [debug] creating 1 resource(s)
    >   client.go:258: [debug] Starting delete for "aglais-ingress-nginx-admission" ClusterRoleBinding
    >   client.go:287: [debug] clusterrolebindings.rbac.authorization.k8s.io "aglais-ingress-nginx-admission" not found
    >   client.go:108: [debug] creating 1 resource(s)
    >   client.go:258: [debug] Starting delete for "aglais-ingress-nginx-admission" Role
    >   client.go:287: [debug] roles.rbac.authorization.k8s.io "aglais-ingress-nginx-admission" not found
    >   client.go:108: [debug] creating 1 resource(s)
    >   client.go:258: [debug] Starting delete for "aglais-ingress-nginx-admission" RoleBinding
    >   client.go:287: [debug] rolebindings.rbac.authorization.k8s.io "aglais-ingress-nginx-admission" not found
    >   client.go:108: [debug] creating 1 resource(s)
    >   client.go:258: [debug] Starting delete for "aglais-ingress-nginx-admission-patch" Job
    >   client.go:287: [debug] jobs.batch "aglais-ingress-nginx-admission-patch" not found
    >   client.go:108: [debug] creating 1 resource(s)
    >   client.go:467: [debug] Watching for changes to Job aglais-ingress-nginx-admission-patch with timeout of 5m0s
    >   client.go:495: [debug] Add/Modify event for aglais-ingress-nginx-admission-patch: ADDED
    >   client.go:534: [debug] aglais-ingress-nginx-admission-patch: Jobs active: 1, jobs failed: 0, jobs succeeded: 0
    >   client.go:495: [debug] Add/Modify event for aglais-ingress-nginx-admission-patch: MODIFIED
    >   client.go:258: [debug] Starting delete for "aglais-ingress-nginx-admission" ServiceAccount
    >   client.go:258: [debug] Starting delete for "aglais-ingress-nginx-admission" ClusterRole
    >   client.go:258: [debug] Starting delete for "aglais-ingress-nginx-admission" ClusterRoleBinding
    >   client.go:258: [debug] Starting delete for "aglais-ingress-nginx-admission" Role
    >   client.go:258: [debug] Starting delete for "aglais-ingress-nginx-admission" RoleBinding
    >   client.go:258: [debug] Starting delete for "aglais-ingress-nginx-admission-patch" Job
    >   NAME: aglais
    >   LAST DEPLOYED: Thu Oct 29 17:55:14 2020
    >   NAMESPACE: tiberius-20201028
    >   STATUS: deployed
    >   REVISION: 1
    >   TEST SUITE: None
    >   USER-SUPPLIED VALUES:
    >   {}
    >
    >   COMPUTED VALUES:
    >   ceph-csi-cephfs:
    >     configMapName: ceph-csi-config-cephfs
    >     csiConfig: []
    >     driverName: cephfs.csi.ceph.com
    >     externallyManagedConfigmap: false
    >     global: {}
    >     nodeplugin:
    >       affinity: {}
    >       httpMetrics:
    >         containerPort: 8081
    >         enabled: true
    >         service:
    >           annotations: {}
    >           clusterIP: ""
    >           enabled: true
    >           externalIPs: []
    >           loadBalancerIP: ""
    >           loadBalancerSourceRanges: []
    >           servicePort: 8080
    >           type: ClusterIP
    >       name: nodeplugin
    >       nodeSelector: {}
    >       plugin:
    >         image:
    >           pullPolicy: IfNotPresent
    >           repository: quay.io/cephcsi/cephcsi
    >           tag: v3.1.1
    >         resources: {}
    >       podSecurityPolicy:
    >         enabled: false
    >       registrar:
    >         image:
    >           pullPolicy: IfNotPresent
    >           repository: quay.io/k8scsi/csi-node-driver-registrar
    >           tag: v1.3.0
    >         resources: {}
    >       tolerations: []
    >       updateStrategy: RollingUpdate
    >     pluginDir: /var/lib/kubelet/plugins
    >     pluginSocketFile: csi.sock
    >     provisioner:
    >       affinity: {}
    >       attacher:
    >         enabled: true
    >         image:
    >           pullPolicy: IfNotPresent
    >           repository: quay.io/k8scsi/csi-attacher
    >           tag: v2.1.1
    >         name: attacher
    >         resources: {}
    >       httpMetrics:
    >         containerPort: 8081
    >         enabled: true
    >         service:
    >           annotations: {}
    >           clusterIP: ""
    >           enabled: true
    >           externalIPs: []
    >           loadBalancerIP: ""
    >           loadBalancerSourceRanges: []
    >           servicePort: 8080
    >           type: ClusterIP
    >       name: provisioner
    >       nodeSelector: {}
    >       podSecurityPolicy:
    >         enabled: false
    >       provisioner:
    >         image:
    >           pullPolicy: IfNotPresent
    >           repository: quay.io/k8scsi/csi-provisioner
    >           tag: v1.6.0
    >         resources: {}
    >       replicaCount: 3
    >       resizer:
    >         enabled: true
    >         image:
    >           pullPolicy: IfNotPresent
    >           repository: quay.io/k8scsi/csi-resizer
    >           tag: v0.5.0
    >         name: resizer
    >         resources: {}
    >       snapshotter:
    >         image:
    >           pullPolicy: IfNotPresent
    >           repository: quay.io/k8scsi/csi-snapshotter
    >           tag: v2.1.1
    >         resources: {}
    >       timeout: 60s
    >       tolerations: []
    >     provisionerSocketFile: csi-provisioner.sock
    >     rbac:
    >       create: true
    >     registrationDir: /var/lib/kubelet/plugins_registry
    >     serviceAccounts:
    >       nodeplugin:
    >         create: true
    >       provisioner:
    >         create: true
    >     socketDir: /var/lib/kubelet/plugins/cephfs.csi.ceph.com
    >     topology:
    >       domainLabels:
    >       - failure-domain/region
    >       - failure-domain/zone
    >       enabled: false
    >   ingress-nginx:
    >     controller:
    >       addHeaders: {}
    >       admissionWebhooks:
    >         annotations: {}
    >         certificate: /usr/local/certificates/cert
    >         enabled: true
    >         failurePolicy: Fail
    >         key: /usr/local/certificates/key
    >         namespaceSelector: {}
    >         objectSelector: {}
    >         patch:
    >           enabled: true
    >           image:
    >             pullPolicy: IfNotPresent
    >             repository: docker.io/jettech/kube-webhook-certgen
    >             tag: v1.3.0
    >           nodeSelector: {}
    >           podAnnotations: {}
    >           priorityClassName: ""
    >           runAsUser: 2000
    >           tolerations: []
    >         port: 8443
    >         service:
    >           annotations: {}
    >           externalIPs: []
    >           loadBalancerSourceRanges: []
    >           servicePort: 443
    >           type: ClusterIP
    >       affinity: {}
    >       annotations: {}
    >       autoscaling:
    >         enabled: false
    >         maxReplicas: 11
    >         minReplicas: 1
    >         targetCPUUtilizationPercentage: 50
    >         targetMemoryUtilizationPercentage: 50
    >       autoscalingTemplate: []
    >       config: {}
    >       configAnnotations: {}
    >       configMapNamespace: ""
    >       containerPort:
    >         http: 80
    >         https: 443
    >       customTemplate:
    >         configMapKey: ""
    >         configMapName: ""
    >       dnsConfig: {}
    >       dnsPolicy: ClusterFirst
    >       electionID: ingress-controller-leader
    >       enableMimalloc: true
    >       extraArgs: {}
    >       extraContainers: []
    >       extraEnvs: []
    >       extraInitContainers: []
    >       extraVolumeMounts: []
    >       extraVolumes: []
    >       healthCheckPath: /healthz
    >       hostNetwork: false
    >       hostPort:
    >         enabled: false
    >         ports:
    >           http: 80
    >           https: 443
    >       image:
    >         allowPrivilegeEscalation: true
    >         digest: sha256:46ba23c3fbaafd9e5bd01ea85b2f921d9f2217be082580edc22e6c704a83f02f
    >         pullPolicy: IfNotPresent
    >         repository: k8s.gcr.io/ingress-nginx/controller
    >         runAsUser: 101
    >         tag: v0.40.2
    >       ingressClass: nginx
    >       kind: Deployment
    >       labels: {}
    >       lifecycle:
    >         preStop:
    >           exec:
    >             command:
    >             - /wait-shutdown
    >       livenessProbe:
    >         failureThreshold: 5
    >         initialDelaySeconds: 10
    >         periodSeconds: 10
    >         port: 10254
    >         successThreshold: 1
    >         timeoutSeconds: 1
    >       metrics:
    >         enabled: false
    >         port: 10254
    >         prometheusRule:
    >           additionalLabels: {}
    >           enabled: false
    >           rules: []
    >         service:
    >           annotations: {}
    >           externalIPs: []
    >           loadBalancerSourceRanges: []
    >           servicePort: 9913
    >           type: ClusterIP
    >         serviceMonitor:
    >           additionalLabels: {}
    >           enabled: false
    >           metricRelabelings: []
    >           namespace: ""
    >           namespaceSelector: {}
    >           scrapeInterval: 30s
    >           targetLabels: []
    >       minAvailable: 1
    >       minReadySeconds: 0
    >       nodeSelector:
    >         kubernetes.io/os: linux
    >       podAnnotations: {}
    >       podLabels: {}
    >       podSecurityContext: {}
    >       priorityClassName: ""
    >       proxySetHeaders: {}
    >       publishService:
    >         enabled: true
    >         pathOverride: ""
    >       readinessProbe:
    >         failureThreshold: 3
    >         initialDelaySeconds: 10
    >         periodSeconds: 10
    >         port: 10254
    >         successThreshold: 1
    >         timeoutSeconds: 1
    >       replicaCount: 1
    >       reportNodeInternalIp: false
    >       resources:
    >         requests:
    >           cpu: 100m
    >           memory: 90Mi
    >       scope:
    >         enabled: false
    >         namespace: ""
    >       service:
    >         annotations: {}
    >         enableHttp: true
    >         enableHttps: true
    >         enabled: true
    >         externalIPs: []
    >         internal:
    >           annotations: {}
    >           enabled: false
    >         labels: {}
    >         loadBalancerSourceRanges: []
    >         nodePorts:
    >           http: ""
    >           https: ""
    >           tcp: {}
    >           udp: {}
    >         ports:
    >           http: 80
    >           https: 443
    >         targetPorts:
    >           http: http
    >           https: https
    >         type: LoadBalancer
    >       sysctls: {}
    >       tcp:
    >         annotations: {}
    >         configMapNamespace: ""
    >       terminationGracePeriodSeconds: 300
    >       tolerations: []
    >       topologySpreadConstraints: []
    >       udp:
    >         annotations: {}
    >         configMapNamespace: ""
    >       updateStrategy: {}
    >     defaultBackend:
    >       affinity: {}
    >       enabled: false
    >       extraArgs: {}
    >       extraEnvs: []
    >       image:
    >         pullPolicy: IfNotPresent
    >         repository: k8s.gcr.io/defaultbackend-amd64
    >         runAsUser: 65534
    >         tag: "1.5"
    >       livenessProbe:
    >         failureThreshold: 3
    >         initialDelaySeconds: 30
    >         periodSeconds: 10
    >         successThreshold: 1
    >         timeoutSeconds: 5
    >       minAvailable: 1
    >       nodeSelector: {}
    >       podAnnotations: {}
    >       podLabels: {}
    >       podSecurityContext: {}
    >       port: 8080
    >       priorityClassName: ""
    >       readinessProbe:
    >         failureThreshold: 6
    >         initialDelaySeconds: 0
    >         periodSeconds: 5
    >         successThreshold: 1
    >         timeoutSeconds: 5
    >       replicaCount: 1
    >       resources: {}
    >       service:
    >         annotations: {}
    >         externalIPs: []
    >         loadBalancerSourceRanges: []
    >         servicePort: 80
    >         type: ClusterIP
    >       serviceAccount:
    >         create: true
    >       tolerations: []
    >     global: {}
    >     imagePullSecrets: []
    >     maxmindLicenseKey: ""
    >     podSecurityPolicy:
    >       enabled: false
    >     rbac:
    >       create: true
    >       scope: false
    >     revisionHistoryLimit: 10
    >     serviceAccount:
    >       create: true
    >     tcp: {}
    >     udp: {}
    >   openstack-manila-csi:
    >     controllerplugin:
    >       affinity: {}
    >       name: controllerplugin
    >       nodeSelector: {}
    >       nodeplugin:
    >         resources: {}
    >       provisioner:
    >         image:
    >           pullPolicy: IfNotPresent
    >           repository: quay.io/k8scsi/csi-provisioner
    >           tag: v1.4.0
    >         resources: {}
    >       snapshotter:
    >         image:
    >           pullPolicy: IfNotPresent
    >           repository: quay.io/k8scsi/csi-snapshotter
    >           tag: v1.2.2
    >         resources: {}
    >       tolerations: []
    >     csimanila:
    >       image:
    >         pullPolicy: IfNotPresent
    >         repository: k8scloudprovider/manila-csi-plugin
    >         tag: v1.18.0
    >       runtimeConfig:
    >         enabled: false
    >         jsonData: |-
    >           {
    >             "nfs": {
    >               "matchExportLocationAddress": "172.168.122.0/24"
    >             }
    >           }
    >       topologyAwarenessEnabled: false
    >     driverName: manila.csi.openstack.org
    >     fullNameOverride: ""
    >     global: {}
    >     nameOverride: ""
    >     nodeplugin:
    >       affinity: {}
    >       name: nodeplugin
    >       nodeSelector: {}
    >       nodeplugin:
    >         resources: {}
    >       registrar:
    >         image:
    >           pullPolicy: IfNotPresent
    >           repository: quay.io/k8scsi/csi-node-driver-registrar
    >           tag: v1.1.0
    >         resources: {}
    >       tolerations: []
    >     shareProtocols:
    >     - fwdNodePluginEndpoint:
    >         dir: /var/lib/kubelet/plugins/cephfs.csi.ceph.com
    >         sockFile: csi.sock
    >       protocolSelector: CEPHFS
    >
    >   HOOKS:
    >   ---
    >   # Source: aglais/charts/ingress-nginx/templates/admission-webhooks/job-patch/serviceaccount.yaml
    >   apiVersion: v1
    >   kind: ServiceAccount
    >   metadata:
    >     name: aglais-ingress-nginx-admission
    >     annotations:
    >       "helm.sh/hook": pre-install,pre-upgrade,post-install,post-upgrade
    >       "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
    >     labels:
    >       helm.sh/chart: ingress-nginx-3.7.1
    >       app.kubernetes.io/name: ingress-nginx
    >       app.kubernetes.io/instance: aglais
    >       app.kubernetes.io/version: "0.40.2"
    >       app.kubernetes.io/managed-by: Helm
    >       app.kubernetes.io/component: admission-webhook
    >   ---
    >   # Source: aglais/charts/ingress-nginx/templates/admission-webhooks/job-patch/clusterrole.yaml
    >   apiVersion: rbac.authorization.k8s.io/v1
    >   kind: ClusterRole
    >   metadata:
    >     name: aglais-ingress-nginx-admission
    >     annotations:
    >       "helm.sh/hook": pre-install,pre-upgrade,post-install,post-upgrade
    >       "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
    >     labels:
    >       helm.sh/chart: ingress-nginx-3.7.1
    >       app.kubernetes.io/name: ingress-nginx
    >       app.kubernetes.io/instance: aglais
    >       app.kubernetes.io/version: "0.40.2"
    >       app.kubernetes.io/managed-by: Helm
    >       app.kubernetes.io/component: admission-webhook
    >   rules:
    >     - apiGroups:
    >         - admissionregistration.k8s.io
    >       resources:
    >         - validatingwebhookconfigurations
    >       verbs:
    >         - get
    >         - update
    >   ---
    >   # Source: aglais/charts/ingress-nginx/templates/admission-webhooks/job-patch/clusterrolebinding.yaml
    >   apiVersion: rbac.authorization.k8s.io/v1
    >   kind: ClusterRoleBinding
    >   metadata:
    >     name:  aglais-ingress-nginx-admission
    >     annotations:
    >       "helm.sh/hook": pre-install,pre-upgrade,post-install,post-upgrade
    >       "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
    >     labels:
    >       helm.sh/chart: ingress-nginx-3.7.1
    >       app.kubernetes.io/name: ingress-nginx
    >       app.kubernetes.io/instance: aglais
    >       app.kubernetes.io/version: "0.40.2"
    >       app.kubernetes.io/managed-by: Helm
    >       app.kubernetes.io/component: admission-webhook
    >   roleRef:
    >     apiGroup: rbac.authorization.k8s.io
    >     kind: ClusterRole
    >     name: aglais-ingress-nginx-admission
    >   subjects:
    >     - kind: ServiceAccount
    >       name: aglais-ingress-nginx-admission
    >       namespace: tiberius-20201028
    >   ---
    >   # Source: aglais/charts/ingress-nginx/templates/admission-webhooks/job-patch/role.yaml
    >   apiVersion: rbac.authorization.k8s.io/v1
    >   kind: Role
    >   metadata:
    >     name:  aglais-ingress-nginx-admission
    >     annotations:
    >       "helm.sh/hook": pre-install,pre-upgrade,post-install,post-upgrade
    >       "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
    >     labels:
    >       helm.sh/chart: ingress-nginx-3.7.1
    >       app.kubernetes.io/name: ingress-nginx
    >       app.kubernetes.io/instance: aglais
    >       app.kubernetes.io/version: "0.40.2"
    >       app.kubernetes.io/managed-by: Helm
    >       app.kubernetes.io/component: admission-webhook
    >   rules:
    >     - apiGroups:
    >         - ""
    >       resources:
    >         - secrets
    >       verbs:
    >         - get
    >         - create
    >   ---
    >   # Source: aglais/charts/ingress-nginx/templates/admission-webhooks/job-patch/rolebinding.yaml
    >   apiVersion: rbac.authorization.k8s.io/v1
    >   kind: RoleBinding
    >   metadata:
    >     name: aglais-ingress-nginx-admission
    >     annotations:
    >       "helm.sh/hook": pre-install,pre-upgrade,post-install,post-upgrade
    >       "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
    >     labels:
    >       helm.sh/chart: ingress-nginx-3.7.1
    >       app.kubernetes.io/name: ingress-nginx
    >       app.kubernetes.io/instance: aglais
    >       app.kubernetes.io/version: "0.40.2"
    >       app.kubernetes.io/managed-by: Helm
    >       app.kubernetes.io/component: admission-webhook
    >   roleRef:
    >     apiGroup: rbac.authorization.k8s.io
    >     kind: Role
    >     name: aglais-ingress-nginx-admission
    >   subjects:
    >     - kind: ServiceAccount
    >       name: aglais-ingress-nginx-admission
    >       namespace: tiberius-20201028
    >   ---
    >   # Source: aglais/charts/ingress-nginx/templates/admission-webhooks/job-patch/job-createSecret.yaml
    >   apiVersion: batch/v1
    >   kind: Job
    >   metadata:
    >     name: aglais-ingress-nginx-admission-create
    >     annotations:
    >       "helm.sh/hook": pre-install,pre-upgrade
    >       "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
    >     labels:
    >       helm.sh/chart: ingress-nginx-3.7.1
    >       app.kubernetes.io/name: ingress-nginx
    >       app.kubernetes.io/instance: aglais
    >       app.kubernetes.io/version: "0.40.2"
    >       app.kubernetes.io/managed-by: Helm
    >       app.kubernetes.io/component: admission-webhook
    >   spec:
    >     template:
    >       metadata:
    >         name: aglais-ingress-nginx-admission-create
    >         labels:
    >           helm.sh/chart: ingress-nginx-3.7.1
    >           app.kubernetes.io/name: ingress-nginx
    >           app.kubernetes.io/instance: aglais
    >           app.kubernetes.io/version: "0.40.2"
    >           app.kubernetes.io/managed-by: Helm
    >           app.kubernetes.io/component: admission-webhook
    >       spec:
    >         containers:
    >           - name: create
    >             image: "docker.io/jettech/kube-webhook-certgen:v1.3.0"
    >             imagePullPolicy: IfNotPresent
    >             args:
    >               - create
    >               - --host=aglais-ingress-nginx-controller-admission,aglais-ingress-nginx-controller-admission.$(POD_NAMESPACE).svc
    >               - --namespace=$(POD_NAMESPACE)
    >               - --secret-name=aglais-ingress-nginx-admission
    >             env:
    >               - name: POD_NAMESPACE
    >                 valueFrom:
    >                   fieldRef:
    >                     fieldPath: metadata.namespace
    >         restartPolicy: OnFailure
    >         serviceAccountName: aglais-ingress-nginx-admission
    >         securityContext:
    >           runAsNonRoot: true
    >           runAsUser: 2000
    >   ---
    >   # Source: aglais/charts/ingress-nginx/templates/admission-webhooks/job-patch/job-patchWebhook.yaml
    >   apiVersion: batch/v1
    >   kind: Job
    >   metadata:
    >     name: aglais-ingress-nginx-admission-patch
    >     annotations:
    >       "helm.sh/hook": post-install,post-upgrade
    >       "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
    >     labels:
    >       helm.sh/chart: ingress-nginx-3.7.1
    >       app.kubernetes.io/name: ingress-nginx
    >       app.kubernetes.io/instance: aglais
    >       app.kubernetes.io/version: "0.40.2"
    >       app.kubernetes.io/managed-by: Helm
    >       app.kubernetes.io/component: admission-webhook
    >   spec:
    >     template:
    >       metadata:
    >         name: aglais-ingress-nginx-admission-patch
    >         labels:
    >           helm.sh/chart: ingress-nginx-3.7.1
    >           app.kubernetes.io/name: ingress-nginx
    >           app.kubernetes.io/instance: aglais
    >           app.kubernetes.io/version: "0.40.2"
    >           app.kubernetes.io/managed-by: Helm
    >           app.kubernetes.io/component: admission-webhook
    >       spec:
    >         containers:
    >           - name: patch
    >             image: "docker.io/jettech/kube-webhook-certgen:v1.3.0"
    >             imagePullPolicy: IfNotPresent
    >             args:
    >               - patch
    >               - --webhook-name=aglais-ingress-nginx-admission
    >               - --namespace=$(POD_NAMESPACE)
    >               - --patch-mutating=false
    >               - --secret-name=aglais-ingress-nginx-admission
    >               - --patch-failure-policy=Fail
    >             env:
    >               - name: POD_NAMESPACE
    >                 valueFrom:
    >                   fieldRef:
    >                     fieldPath: metadata.namespace
    >         restartPolicy: OnFailure
    >         serviceAccountName: aglais-ingress-nginx-admission
    >         securityContext:
    >           runAsNonRoot: true
    >           runAsUser: 2000
    >   MANIFEST:
    >   ---
    >   # Source: aglais/charts/ceph-csi-cephfs/templates/nodeplugin-serviceaccount.yaml
    >   apiVersion: v1
    >   kind: ServiceAccount
    >   metadata:
    >     name: aglais-ceph-csi-cephfs-nodeplugin
    >     namespace: tiberius-20201028
    >     labels:
    >       app: ceph-csi-cephfs
    >       chart: ceph-csi-cephfs-3.1.1
    >       component: nodeplugin
    >       release: aglais
    >       heritage: Helm
    >   ---
    >   # Source: aglais/charts/ceph-csi-cephfs/templates/provisioner-serviceaccount.yaml
    >   apiVersion: v1
    >   kind: ServiceAccount
    >   metadata:
    >     name: aglais-ceph-csi-cephfs-provisioner
    >     namespace: tiberius-20201028
    >     labels:
    >       app: ceph-csi-cephfs
    >       chart: ceph-csi-cephfs-3.1.1
    >       component: provisioner
    >       release: aglais
    >       heritage: Helm
    >   ---
    >   # Source: aglais/charts/ingress-nginx/templates/controller-serviceaccount.yaml
    >   apiVersion: v1
    >   kind: ServiceAccount
    >   metadata:
    >     labels:
    >       helm.sh/chart: ingress-nginx-3.7.1
    >       app.kubernetes.io/name: ingress-nginx
    >       app.kubernetes.io/instance: aglais
    >       app.kubernetes.io/version: "0.40.2"
    >       app.kubernetes.io/managed-by: Helm
    >       app.kubernetes.io/component: controller
    >     name: aglais-ingress-nginx
    >   ---
    >   # Source: aglais/charts/openstack-manila-csi/templates/controllerplugin-serviceaccount.yaml
    >   apiVersion: v1
    >   kind: ServiceAccount
    >   metadata:
    >     name: aglais-openstack-manila-csi-controllerplugin
    >     labels:
    >       app: openstack-manila-csi
    >       chart: openstack-manila-csi-0.2.1
    >       component: controllerplugin
    >       release: aglais
    >       heritage: Helm
    >   ---
    >   # Source: aglais/charts/openstack-manila-csi/templates/nodeplugin-serviceaccount.yaml
    >   apiVersion: v1
    >   kind: ServiceAccount
    >   metadata:
    >     name: aglais-openstack-manila-csi-nodeplugin
    >     labels:
    >       app: openstack-manila-csi
    >       chart: openstack-manila-csi-0.2.1
    >       component: nodeplugin
    >       release: aglais
    >       heritage: Helm
    >   ---
    >   # Source: aglais/charts/ceph-csi-cephfs/templates/csiplugin-configmap.yaml
    >   apiVersion: v1
    >   kind: ConfigMap
    >   metadata:
    >     name: "ceph-csi-config-cephfs"
    >     namespace: tiberius-20201028
    >     labels:
    >       app: ceph-csi-cephfs
    >       chart: ceph-csi-cephfs-3.1.1
    >       component: provisioner
    >       release: aglais
    >       heritage: Helm
    >   data:
    >     config.json: |-
    >       []
    >   ---
    >   # Source: aglais/charts/ingress-nginx/templates/controller-configmap.yaml
    >   apiVersion: v1
    >   kind: ConfigMap
    >   metadata:
    >     labels:
    >       helm.sh/chart: ingress-nginx-3.7.1
    >       app.kubernetes.io/name: ingress-nginx
    >       app.kubernetes.io/instance: aglais
    >       app.kubernetes.io/version: "0.40.2"
    >       app.kubernetes.io/managed-by: Helm
    >       app.kubernetes.io/component: controller
    >     name: aglais-ingress-nginx-controller
    >   data:
    >   ---
    >   # Source: aglais/charts/ceph-csi-cephfs/templates/provisioner-clusterrole.yaml
    >   kind: ClusterRole
    >   apiVersion: rbac.authorization.k8s.io/v1
    >   metadata:
    >     name: aglais-ceph-csi-cephfs-provisioner
    >     labels:
    >       app: ceph-csi-cephfs
    >       chart: ceph-csi-cephfs-3.1.1
    >       component: provisioner
    >       release: aglais
    >       heritage: Helm
    >   aggregationRule:
    >     clusterRoleSelectors:
    >       - matchLabels:
    >           rbac.cephfs.csi.ceph.com/aggregate-to-aglais-ceph-csi-cephfs-provisioner: "true"
    >   rules: []
    >   ---
    >   # Source: aglais/charts/ceph-csi-cephfs/templates/provisioner-rules-clusterrole.yaml
    >   kind: ClusterRole
    >   apiVersion: rbac.authorization.k8s.io/v1
    >   metadata:
    >     name: aglais-ceph-csi-cephfs-provisioner-rules
    >     labels:
    >       app: ceph-csi-cephfs
    >       chart: ceph-csi-cephfs-3.1.1
    >       component: provisioner
    >       release: aglais
    >       heritage: Helm
    >       rbac.cephfs.csi.ceph.com/aggregate-to-aglais-ceph-csi-cephfs-provisioner: "true"
    >   rules:
    >     - apiGroups: [""]
    >       resources: ["secrets"]
    >       verbs: ["get", "list"]
    >     - apiGroups: [""]
    >       resources: ["persistentvolumes"]
    >       verbs: ["get", "list", "watch", "create", "delete","patch"]
    >     - apiGroups: [""]
    >       resources: ["persistentvolumeclaims"]
    >       verbs: ["get", "list", "watch", "update"]
    >     - apiGroups: ["storage.k8s.io"]
    >       resources: ["storageclasses"]
    >       verbs: ["get", "list", "watch"]
    >     - apiGroups: [""]
    >       resources: ["events"]
    >       verbs: ["list", "watch", "create", "update", "patch"]
    >     - apiGroups: ["snapshot.storage.k8s.io"]
    >       resources: ["volumesnapshots"]
    >       verbs: ["get", "list"]
    >     - apiGroups: ["snapshot.storage.k8s.io"]
    >       resources: ["volumesnapshotcontents"]
    >       verbs: ["create", "get", "list", "watch", "update", "delete"]
    >     - apiGroups: ["snapshot.storage.k8s.io"]
    >       resources: ["volumesnapshotclasses"]
    >       verbs: ["get", "list", "watch"]
    >     - apiGroups: ["snapshot.storage.k8s.io"]
    >       resources: ["volumesnapshotcontents/status"]
    >       verbs: ["update"]
    >     - apiGroups: ["storage.k8s.io"]
    >       resources: ["volumeattachments"]
    >       verbs: ["get", "list", "watch", "update", "patch"]
    >     - apiGroups: [""]
    >       resources: ["persistentvolumeclaims/status"]
    >       verbs: ["update", "patch"]
    >   ---
    >   # Source: aglais/charts/ingress-nginx/templates/clusterrole.yaml
    >   apiVersion: rbac.authorization.k8s.io/v1
    >   kind: ClusterRole
    >   metadata:
    >     labels:
    >       helm.sh/chart: ingress-nginx-3.7.1
    >       app.kubernetes.io/name: ingress-nginx
    >       app.kubernetes.io/instance: aglais
    >       app.kubernetes.io/version: "0.40.2"
    >       app.kubernetes.io/managed-by: Helm
    >     name: aglais-ingress-nginx
    >   rules:
    >     - apiGroups:
    >         - ""
    >       resources:
    >         - configmaps
    >         - endpoints
    >         - nodes
    >         - pods
    >         - secrets
    >       verbs:
    >         - list
    >         - watch
    >     - apiGroups:
    >         - ""
    >       resources:
    >         - nodes
    >       verbs:
    >         - get
    >     - apiGroups:
    >         - ""
    >       resources:
    >         - services
    >       verbs:
    >         - get
    >         - list
    >         - update
    >         - watch
    >     - apiGroups:
    >         - extensions
    >         - "networking.k8s.io" # k8s 1.14+
    >       resources:
    >         - ingresses
    >       verbs:
    >         - get
    >         - list
    >         - watch
    >     - apiGroups:
    >         - ""
    >       resources:
    >         - events
    >       verbs:
    >         - create
    >         - patch
    >     - apiGroups:
    >         - extensions
    >         - "networking.k8s.io" # k8s 1.14+
    >       resources:
    >         - ingresses/status
    >       verbs:
    >         - update
    >     - apiGroups:
    >         - "networking.k8s.io" # k8s 1.14+
    >       resources:
    >         - ingressclasses
    >       verbs:
    >         - get
    >         - list
    >         - watch
    >   ---
    >   # Source: aglais/charts/openstack-manila-csi/templates/controllerplugin-clusterrole.yaml
    >   kind: ClusterRole
    >   apiVersion: rbac.authorization.k8s.io/v1
    >   metadata:
    >     name: aglais-openstack-manila-csi-controllerplugin
    >     labels:
    >       app: openstack-manila-csi
    >       chart: openstack-manila-csi-0.2.1
    >       component: controllerplugin
    >       release: aglais
    >       heritage: Helm
    >   aggregationRule:
    >     clusterRoleSelectors:
    >       - matchLabels:
    >           rbac.manila.csi.openstack.org/aggregate-to-aglais-openstack-manila-csi-controllerplugin: "true"
    >   rules: []
    >   ---
    >   # Source: aglais/charts/openstack-manila-csi/templates/controllerplugin-rules-clusterrole.yaml
    >   kind: ClusterRole
    >   apiVersion: rbac.authorization.k8s.io/v1
    >   metadata:
    >     name: aglais-openstack-manila-csi-controllerplugin-rules
    >     labels:
    >       app: openstack-manila-csi
    >       chart: openstack-manila-csi-0.2.1
    >       component: controllerplugin
    >       release: aglais
    >       heritage: Helm
    >       rbac.manila.csi.openstack.org/aggregate-to-aglais-openstack-manila-csi-controllerplugin: "true"
    >   rules:
    >     - apiGroups: [""]
    >       resources: ["nodes"]
    >       verbs: ["get", "list", "watch"]
    >     - apiGroups: [""]
    >       resources: ["secrets"]
    >       verbs: ["get", "list"]
    >     - apiGroups: [""]
    >       resources: ["persistentvolumes"]
    >       verbs: ["get", "list", "watch", "create", "delete"]
    >     - apiGroups: [""]
    >       resources: ["persistentvolumeclaims"]
    >       verbs: ["get", "list", "watch", "update"]
    >     - apiGroups: [""]
    >       resources: ["events"]
    >       verbs: ["list", "watch", "create", "update", "patch"]
    >     - apiGroups: ["storage.k8s.io"]
    >       resources: ["storageclasses"]
    >       verbs: ["get", "list", "watch"]
    >     - apiGroups: ["storage.k8s.io"]
    >       resources: ["csinodes"]
    >       verbs: ["get", "list", "watch"]
    >     - apiGroups: ["snapshot.storage.k8s.io"]
    >       resources: ["volumesnapshotclasses"]
    >       verbs: ["get", "list", "watch"]
    >     - apiGroups: ["snapshot.storage.k8s.io"]
    >       resources: ["volumesnapshotcontents"]
    >       verbs: ["create", "get", "list", "watch", "update", "delete"]
    >     - apiGroups: ["snapshot.storage.k8s.io"]
    >       resources: ["volumesnapshots"]
    >       verbs: ["get", "list", "watch", "update"]
    >     - apiGroups: ["snapshot.storage.k8s.io"]
    >       resources: ["volumesnapshots/status"]
    >       verbs: ["update"]
    >     - apiGroups: ["apiextensions.k8s.io"]
    >       resources: ["customresourcedefinitions"]
    >       verbs: ["create", "list", "watch", "delete", "get", "update"]
    >   ---
    >   # Source: aglais/charts/openstack-manila-csi/templates/nodeplugin-clusterrole.yaml
    >   kind: ClusterRole
    >   apiVersion: rbac.authorization.k8s.io/v1
    >   metadata:
    >     name: aglais-openstack-manila-csi-nodeplugin
    >     labels:
    >       app: openstack-manila-csi
    >       chart: openstack-manila-csi-0.2.1
    >       component: nodeplugin
    >       release: aglais
    >       heritage: Helm
    >   aggregationRule:
    >     clusterRoleSelectors:
    >       - matchLabels:
    >           rbac.manila.csi.openstack.org/aggregate-to-aglais-openstack-manila-csi-nodeplugin: "true"
    >   rules: []
    >   ---
    >   # Source: aglais/charts/openstack-manila-csi/templates/nodeplugin-rules-clusterrole.yaml
    >   kind: ClusterRole
    >   apiVersion: rbac.authorization.k8s.io/v1
    >   metadata:
    >     name: aglais-openstack-manila-csi-nodeplugin-rules
    >     labels:
    >       app: openstack-manila-csi
    >       chart: openstack-manila-csi-0.2.1
    >       component: nodeplugin
    >       release: aglais
    >       heritage: Helm
    >       rbac.manila.csi.openstack.org/aggregate-to-aglais-openstack-manila-csi-nodeplugin: "true"
    >   rules:
    >     - apiGroups: [""]
    >       resources: ["configmaps"]
    >       verbs: ["get", "list"]
    >     - apiGroups: [""]
    >       resources: ["nodes"]
    >       verbs: ["get", "list", "update"]
    >     - apiGroups: [""]
    >       resources: ["namespaces"]
    >       verbs: ["get", "list"]
    >     - apiGroups: [""]
    >       resources: ["persistentvolumes"]
    >       verbs: ["get", "list", "watch", "update"]
    >   ---
    >   # Source: aglais/charts/ceph-csi-cephfs/templates/provisioner-clusterrolebinding.yaml
    >   kind: ClusterRoleBinding
    >   apiVersion: rbac.authorization.k8s.io/v1
    >   metadata:
    >     name: aglais-ceph-csi-cephfs-provisioner
    >     labels:
    >       app: ceph-csi-cephfs
    >       chart: ceph-csi-cephfs-3.1.1
    >       component: provisioner
    >       release: aglais
    >       heritage: Helm
    >   subjects:
    >     - kind: ServiceAccount
    >       name: aglais-ceph-csi-cephfs-provisioner
    >       namespace: tiberius-20201028
    >   roleRef:
    >     kind: ClusterRole
    >     name: aglais-ceph-csi-cephfs-provisioner
    >     apiGroup: rbac.authorization.k8s.io
    >   ---
    >   # Source: aglais/charts/ingress-nginx/templates/clusterrolebinding.yaml
    >   apiVersion: rbac.authorization.k8s.io/v1
    >   kind: ClusterRoleBinding
    >   metadata:
    >     labels:
    >       helm.sh/chart: ingress-nginx-3.7.1
    >       app.kubernetes.io/name: ingress-nginx
    >       app.kubernetes.io/instance: aglais
    >       app.kubernetes.io/version: "0.40.2"
    >       app.kubernetes.io/managed-by: Helm
    >     name: aglais-ingress-nginx
    >   roleRef:
    >     apiGroup: rbac.authorization.k8s.io
    >     kind: ClusterRole
    >     name: aglais-ingress-nginx
    >   subjects:
    >     - kind: ServiceAccount
    >       name: aglais-ingress-nginx
    >       namespace: tiberius-20201028
    >   ---
    >   # Source: aglais/charts/openstack-manila-csi/templates/controllerplugin-clusterrolebinding.yaml
    >   kind: ClusterRoleBinding
    >   apiVersion: rbac.authorization.k8s.io/v1
    >   metadata:
    >     name: aglais-openstack-manila-csi-controllerplugin
    >     labels:
    >       app: openstack-manila-csi
    >       chart: openstack-manila-csi-0.2.1
    >       component: controllerplugin
    >       release: aglais
    >       heritage: Helm
    >   subjects:
    >     - kind: ServiceAccount
    >       name: aglais-openstack-manila-csi-controllerplugin
    >       namespace: tiberius-20201028
    >   roleRef:
    >     kind: ClusterRole
    >     name: aglais-openstack-manila-csi-controllerplugin
    >     apiGroup: rbac.authorization.k8s.io
    >   ---
    >   # Source: aglais/charts/openstack-manila-csi/templates/nodeplugin-clusterrolebinding.yaml
    >   kind: ClusterRoleBinding
    >   apiVersion: rbac.authorization.k8s.io/v1
    >   metadata:
    >     name: aglais-openstack-manila-csi-nodeplugin
    >     labels:
    >       app: openstack-manila-csi
    >       chart: openstack-manila-csi-0.2.1
    >       component: nodeplugin
    >       release: aglais
    >       heritage: Helm
    >   subjects:
    >     - kind: ServiceAccount
    >       name: aglais-openstack-manila-csi-nodeplugin
    >       namespace: tiberius-20201028
    >   roleRef:
    >     kind: ClusterRole
    >     name: aglais-openstack-manila-csi-nodeplugin
    >     apiGroup: rbac.authorization.k8s.io
    >   ---
    >   # Source: aglais/charts/ceph-csi-cephfs/templates/provisioner-role.yaml
    >   kind: Role
    >   apiVersion: rbac.authorization.k8s.io/v1
    >   metadata:
    >     name: aglais-ceph-csi-cephfs-provisioner
    >     namespace: tiberius-20201028
    >     labels:
    >       app: ceph-csi-cephfs
    >       chart: ceph-csi-cephfs-3.1.1
    >       component: provisioner
    >       release: aglais
    >       heritage: Helm
    >   rules:
    >     - apiGroups: [""]
    >       resources: ["configmaps"]
    >       verbs: ["get", "list", "watch", "create", "delete"]
    >     - apiGroups: ["coordination.k8s.io"]
    >       resources: ["leases"]
    >       verbs: ["get", "watch", "list", "delete", "update", "create"]
    >   ---
    >   # Source: aglais/charts/ingress-nginx/templates/controller-role.yaml
    >   apiVersion: rbac.authorization.k8s.io/v1
    >   kind: Role
    >   metadata:
    >     labels:
    >       helm.sh/chart: ingress-nginx-3.7.1
    >       app.kubernetes.io/name: ingress-nginx
    >       app.kubernetes.io/instance: aglais
    >       app.kubernetes.io/version: "0.40.2"
    >       app.kubernetes.io/managed-by: Helm
    >       app.kubernetes.io/component: controller
    >     name: aglais-ingress-nginx
    >   rules:
    >     - apiGroups:
    >         - ""
    >       resources:
    >         - namespaces
    >       verbs:
    >         - get
    >     - apiGroups:
    >         - ""
    >       resources:
    >         - configmaps
    >         - pods
    >         - secrets
    >         - endpoints
    >       verbs:
    >         - get
    >         - list
    >         - watch
    >     - apiGroups:
    >         - ""
    >       resources:
    >         - services
    >       verbs:
    >         - get
    >         - list
    >         - update
    >         - watch
    >     - apiGroups:
    >         - extensions
    >         - "networking.k8s.io" # k8s 1.14+
    >       resources:
    >         - ingresses
    >       verbs:
    >         - get
    >         - list
    >         - watch
    >     - apiGroups:
    >         - extensions
    >         - "networking.k8s.io" # k8s 1.14+
    >       resources:
    >         - ingresses/status
    >       verbs:
    >         - update
    >     - apiGroups:
    >         - "networking.k8s.io" # k8s 1.14+
    >       resources:
    >         - ingressclasses
    >       verbs:
    >         - get
    >         - list
    >         - watch
    >     - apiGroups:
    >         - ""
    >       resources:
    >         - configmaps
    >       resourceNames:
    >         - ingress-controller-leader-nginx
    >       verbs:
    >         - get
    >         - update
    >     - apiGroups:
    >         - ""
    >       resources:
    >         - configmaps
    >       verbs:
    >         - create
    >     - apiGroups:
    >         - ""
    >       resources:
    >         - endpoints
    >       verbs:
    >         - create
    >         - get
    >         - update
    >     - apiGroups:
    >         - ""
    >       resources:
    >         - events
    >       verbs:
    >         - create
    >         - patch
    >   ---
    >   # Source: aglais/charts/openstack-manila-csi/templates/controllerplugin-role.yaml
    >   kind: Role
    >   apiVersion: rbac.authorization.k8s.io/v1
    >   metadata:
    >     name: aglais-openstack-manila-csi-controllerplugin
    >     labels:
    >       app: openstack-manila-csi
    >       chart: openstack-manila-csi-0.2.1
    >       component: controllerplugin
    >       release: aglais
    >       heritage: Helm
    >   rules:
    >     - apiGroups: [""]
    >       resources: ["endpoints"]
    >       verbs: ["get", "watch", "list", "delete", "update", "create"]
    >     - apiGroups: [""]
    >       resources: ["configmaps"]
    >       verbs: ["get", "list", "watch", "create", "delete"]
    >   ---
    >   # Source: aglais/charts/ceph-csi-cephfs/templates/provisioner-rolebinding.yaml
    >   kind: RoleBinding
    >   apiVersion: rbac.authorization.k8s.io/v1
    >   metadata:
    >     name: aglais-ceph-csi-cephfs-provisioner
    >     namespace: tiberius-20201028
    >     labels:
    >       app: ceph-csi-cephfs
    >       chart: ceph-csi-cephfs-3.1.1
    >       component: provisioner
    >       release: aglais
    >       heritage: Helm
    >   subjects:
    >     - kind: ServiceAccount
    >       name: aglais-ceph-csi-cephfs-provisioner
    >       namespace: tiberius-20201028
    >   roleRef:
    >     kind: Role
    >     name: aglais-ceph-csi-cephfs-provisioner
    >     apiGroup: rbac.authorization.k8s.io
    >   ---
    >   # Source: aglais/charts/ingress-nginx/templates/controller-rolebinding.yaml
    >   apiVersion: rbac.authorization.k8s.io/v1
    >   kind: RoleBinding
    >   metadata:
    >     labels:
    >       helm.sh/chart: ingress-nginx-3.7.1
    >       app.kubernetes.io/name: ingress-nginx
    >       app.kubernetes.io/instance: aglais
    >       app.kubernetes.io/version: "0.40.2"
    >       app.kubernetes.io/managed-by: Helm
    >       app.kubernetes.io/component: controller
    >     name: aglais-ingress-nginx
    >   roleRef:
    >     apiGroup: rbac.authorization.k8s.io
    >     kind: Role
    >     name: aglais-ingress-nginx
    >   subjects:
    >     - kind: ServiceAccount
    >       name: aglais-ingress-nginx
    >       namespace: tiberius-20201028
    >   ---
    >   # Source: aglais/charts/openstack-manila-csi/templates/controllerplugin-rolebinding.yaml
    >   kind: RoleBinding
    >   apiVersion: rbac.authorization.k8s.io/v1
    >   metadata:
    >     name: aglais-openstack-manila-csi-controllerplugin
    >     labels:
    >       app: openstack-manila-csi
    >       chart: openstack-manila-csi-0.2.1
    >       component: controllerplugin
    >       release: aglais
    >       heritage: Helm
    >   subjects:
    >     - kind: ServiceAccount
    >       name: aglais-openstack-manila-csi-controllerplugin
    >       namespace: tiberius-20201028
    >   roleRef:
    >     kind: Role
    >     name: aglais-openstack-manila-csi-controllerplugin
    >     apiGroup: rbac.authorization.k8s.io
    >   ---
    >   # Source: aglais/charts/ceph-csi-cephfs/templates/nodeplugin-http-service.yaml
    >   apiVersion: v1
    >   kind: Service
    >   metadata:
    >     name: aglais-ceph-csi-cephfs-nodeplugin-http-metrics
    >     namespace: tiberius-20201028
    >     labels:
    >       app: aglais-ceph-csi-cephfs
    >       chart: ceph-csi-cephfs-3.1.1
    >       component: nodeplugin
    >       release: aglais
    >       heritage: Helm
    >   spec:
    >     ports:
    >       - name: http-metrics
    >         port: 8080
    >         targetPort: 8081
    >     selector:
    >       app: ceph-csi-cephfs
    >       component: nodeplugin
    >       release: aglais
    >     type: "ClusterIP"
    >   ---
    >   # Source: aglais/charts/ceph-csi-cephfs/templates/provisioner-http-service.yaml
    >   apiVersion: v1
    >   kind: Service
    >   metadata:
    >     name: aglais-ceph-csi-cephfs-provisioner-http-metrics
    >     namespace: tiberius-20201028
    >     labels:
    >       app: aglais-ceph-csi-cephfs
    >       chart: ceph-csi-cephfs-3.1.1
    >       component: provisioner
    >       release: aglais
    >       heritage: Helm
    >   spec:
    >     ports:
    >       - name: http-metrics
    >         port: 8080
    >         targetPort: 8081
    >     selector:
    >       app: ceph-csi-cephfs
    >       component: provisioner
    >       release: aglais
    >     type: "ClusterIP"
    >   ---
    >   # Source: aglais/charts/ingress-nginx/templates/controller-service-webhook.yaml
    >   apiVersion: v1
    >   kind: Service
    >   metadata:
    >     labels:
    >       helm.sh/chart: ingress-nginx-3.7.1
    >       app.kubernetes.io/name: ingress-nginx
    >       app.kubernetes.io/instance: aglais
    >       app.kubernetes.io/version: "0.40.2"
    >       app.kubernetes.io/managed-by: Helm
    >       app.kubernetes.io/component: controller
    >     name: aglais-ingress-nginx-controller-admission
    >   spec:
    >     type: ClusterIP
    >     ports:
    >       - name: https-webhook
    >         port: 443
    >         targetPort: webhook
    >     selector:
    >       app.kubernetes.io/name: ingress-nginx
    >       app.kubernetes.io/instance: aglais
    >       app.kubernetes.io/component: controller
    >   ---
    >   # Source: aglais/charts/ingress-nginx/templates/controller-service.yaml
    >   apiVersion: v1
    >   kind: Service
    >   metadata:
    >     labels:
    >       helm.sh/chart: ingress-nginx-3.7.1
    >       app.kubernetes.io/name: ingress-nginx
    >       app.kubernetes.io/instance: aglais
    >       app.kubernetes.io/version: "0.40.2"
    >       app.kubernetes.io/managed-by: Helm
    >       app.kubernetes.io/component: controller
    >     name: aglais-ingress-nginx-controller
    >   spec:
    >     type: LoadBalancer
    >     ports:
    >       - name: http
    >         port: 80
    >         protocol: TCP
    >         targetPort: http
    >       - name: https
    >         port: 443
    >         protocol: TCP
    >         targetPort: https
    >     selector:
    >       app.kubernetes.io/name: ingress-nginx
    >       app.kubernetes.io/instance: aglais
    >       app.kubernetes.io/component: controller
    >   ---
    >   # Source: aglais/charts/openstack-manila-csi/templates/controllerplugin-service.yaml
    >   kind: Service
    >   apiVersion: v1
    >   metadata:
    >     name: aglais-openstack-manila-csi-controllerplugin
    >     labels:
    >       app: openstack-manila-csi
    >       chart: openstack-manila-csi-0.2.1
    >       component: controllerplugin
    >       release: aglais
    >       heritage: Helm
    >   spec:
    >     selector:
    >       app: openstack-manila-csi
    >       component: controllerplugin
    >       release: aglais
    >     ports:
    >       - name: dummy
    >         port: 12345
    >   ---
    >   # Source: aglais/charts/ceph-csi-cephfs/templates/nodeplugin-daemonset.yaml
    >   kind: DaemonSet
    >   apiVersion: apps/v1
    >   metadata:
    >     name: aglais-ceph-csi-cephfs-nodeplugin
    >     namespace: tiberius-20201028
    >     labels:
    >       app: ceph-csi-cephfs
    >       chart: ceph-csi-cephfs-3.1.1
    >       component: nodeplugin
    >       release: aglais
    >       heritage: Helm
    >   spec:
    >     selector:
    >       matchLabels:
    >         app: ceph-csi-cephfs
    >         component: nodeplugin
    >         release: aglais
    >     updateStrategy:
    >       type: RollingUpdate
    >     template:
    >       metadata:
    >         labels:
    >           app: ceph-csi-cephfs
    >           chart: ceph-csi-cephfs-3.1.1
    >           component: nodeplugin
    >           release: aglais
    >           heritage: Helm
    >       spec:
    >         serviceAccountName: aglais-ceph-csi-cephfs-nodeplugin
    >         hostNetwork: true
    >         # to use e.g. Rook orchestrated cluster, and mons' FQDN is
    >         # resolved through k8s service, set dns policy to cluster first
    >         dnsPolicy: ClusterFirstWithHostNet
    >         containers:
    >           - name: driver-registrar
    >             # This is necessary only for systems with SELinux, where
    >             # non-privileged sidecar containers cannot access unix domain socket
    >             # created by privileged CSI driver container.
    >             securityContext:
    >               privileged: true
    >             image: "quay.io/k8scsi/csi-node-driver-registrar:v1.3.0"
    >             imagePullPolicy: IfNotPresent
    >             args:
    >               - "--v=5"
    >               - "--csi-address=/csi/csi.sock"
    >               - "--kubelet-registration-path=/var/lib/kubelet/plugins/cephfs.csi.ceph.com/csi.sock"
    >             lifecycle:
    >               preStop:
    >                 exec:
    >                   command: [
    >                     "/bin/sh", "-c",
    >                     "rm -rf /registration/cephfs.csi.ceph.com \
    >                     /registration/cephfs.csi.ceph.com-reg.sock"
    >                   ]
    >             env:
    >               - name: KUBE_NODE_NAME
    >                 valueFrom:
    >                   fieldRef:
    >                     fieldPath: spec.nodeName
    >             volumeMounts:
    >               - name: socket-dir
    >                 mountPath: /csi
    >               - name: registration-dir
    >                 mountPath: /registration
    >             resources:
    >               {}
    >           - name: csi-cephfsplugin
    >             image: "quay.io/cephcsi/cephcsi:v3.1.1"
    >             imagePullPolicy: IfNotPresent
    >             args:
    >               - "--nodeid=$(NODE_ID)"
    >               - "--type=cephfs"
    >               - "--nodeserver=true"
    >               - "--pidlimit=-1"
    >               - "--endpoint=$(CSI_ENDPOINT)"
    >               - "--v=5"
    >               - "--drivername=$(DRIVER_NAME)"
    >             env:
    >               - name: POD_IP
    >                 valueFrom:
    >                   fieldRef:
    >                     fieldPath: status.podIP
    >               - name: DRIVER_NAME
    >                 value: cephfs.csi.ceph.com
    >               - name: NODE_ID
    >                 valueFrom:
    >                   fieldRef:
    >                     fieldPath: spec.nodeName
    >               - name: CSI_ENDPOINT
    >                 value: "unix:///csi/csi.sock"
    >             securityContext:
    >               privileged: true
    >               capabilities:
    >                 add: ["SYS_ADMIN"]
    >               allowPrivilegeEscalation: true
    >             volumeMounts:
    >               - name: socket-dir
    >                 mountPath: /csi
    >               - name: mountpoint-dir
    >                 mountPath: /var/lib/kubelet/pods
    >                 mountPropagation: Bidirectional
    >               - name: plugin-dir
    >                 mountPath: /var/lib/kubelet/plugins
    >                 mountPropagation: "Bidirectional"
    >               - mountPath: /dev
    >                 name: host-dev
    >               - mountPath: /run/mount
    >                 name: host-mount
    >               - mountPath: /sys
    >                 name: host-sys
    >               - mountPath: /lib/modules
    >                 name: lib-modules
    >                 readOnly: true
    >               - name: ceph-csi-config
    >                 mountPath: /etc/ceph-csi-config/
    >               - name: keys-tmp-dir
    >                 mountPath: /tmp/csi/keys
    >             resources:
    >               {}
    >           - name: liveness-prometheus
    >             securityContext:
    >               privileged: true
    >             image: "quay.io/cephcsi/cephcsi:v3.1.1"
    >             imagePullPolicy: IfNotPresent
    >             args:
    >               - "--type=liveness"
    >               - "--endpoint=$(CSI_ENDPOINT)"
    >               - "--metricsport=8081"
    >               - "--metricspath=/metrics"
    >               - "--polltime=60s"
    >               - "--timeout=3s"
    >             env:
    >               - name: CSI_ENDPOINT
    >                 value: "unix:///csi/csi.sock"
    >               - name: POD_IP
    >                 valueFrom:
    >                   fieldRef:
    >                     fieldPath: status.podIP
    >             volumeMounts:
    >               - name: socket-dir
    >                 mountPath: /csi
    >             resources:
    >               {}
    >         volumes:
    >           - name: socket-dir
    >             hostPath:
    >               path: /var/lib/kubelet/plugins/cephfs.csi.ceph.com
    >               type: DirectoryOrCreate
    >           - name: registration-dir
    >             hostPath:
    >               path: /var/lib/kubelet/plugins_registry
    >               type: Directory
    >           - name: mountpoint-dir
    >             hostPath:
    >               path: /var/lib/kubelet/pods
    >               type: DirectoryOrCreate
    >           - name: plugin-dir
    >             hostPath:
    >               path: /var/lib/kubelet/plugins
    >               type: Directory
    >           - name: host-sys
    >             hostPath:
    >               path: /sys
    >           - name: host-mount
    >             hostPath:
    >               path: /run/mount
    >           - name: lib-modules
    >             hostPath:
    >               path: /lib/modules
    >           - name: host-dev
    >             hostPath:
    >               path: /dev
    >           - name: ceph-csi-config
    >             configMap:
    >               name: "ceph-csi-config-cephfs"
    >           - name: keys-tmp-dir
    >             emptyDir: {
    >               medium: "Memory"
    >             }
    >   ---
    >   # Source: aglais/charts/openstack-manila-csi/templates/nodeplugin-daemonset.yaml
    >   kind: DaemonSet
    >   apiVersion: apps/v1
    >   metadata:
    >     name: aglais-openstack-manila-csi-nodeplugin
    >     labels:
    >       app: openstack-manila-csi
    >       chart: openstack-manila-csi-0.2.1
    >       component: nodeplugin
    >       release: aglais
    >       heritage: Helm
    >   spec:
    >     selector:
    >       matchLabels:
    >         app: openstack-manila-csi
    >         component: nodeplugin
    >         release: aglais
    >     template:
    >       metadata:
    >         labels:
    >           app: openstack-manila-csi
    >           chart: openstack-manila-csi-0.2.1
    >           component: nodeplugin
    >           release: aglais
    >           heritage: Helm
    >       spec:
    >         serviceAccountName: aglais-openstack-manila-csi-nodeplugin
    >         hostNetwork: true
    >         dnsPolicy: ClusterFirstWithHostNet
    >         containers:
    >           - name: cephfs-registrar
    >             image: "quay.io/k8scsi/csi-node-driver-registrar:v1.1.0"
    >             args:
    >               - "--v=5"
    >               - "--csi-address=/csi/csi.sock"
    >               - "--kubelet-registration-path=/var/lib/kubelet/plugins/cephfs.manila.csi.openstack.org/csi.sock"
    >             lifecycle:
    >               preStop:
    >                 exec:
    >                     command: [
    >                       "/bin/sh", "-c",
    >                       'rm -rf /registration/cephfs.manila.csi.openstack.org
    >                     /registration/cephfs.manila.csi.openstack.org-reg.sock'
    >                     ]
    >             env:
    >               - name: KUBE_NODE_NAME
    >                 valueFrom:
    >                   fieldRef:
    >                     fieldPath: spec.nodeName
    >             imagePullPolicy: IfNotPresent
    >             volumeMounts:
    >               - name: cephfs-plugin-dir
    >                 mountPath: /csi
    >               - name: registration-dir
    >                 mountPath: /registration
    >             resources:
    >               {}
    >           - name: cephfs-nodeplugin
    >             securityContext:
    >               privileged: true
    >               capabilities:
    >                 add: ["SYS_ADMIN"]
    >               allowPrivilegeEscalation: true
    >             image: "k8scloudprovider/manila-csi-plugin:v1.18.0"
    >             command: ["/bin/sh", "-c",
    >               '/bin/manila-csi-plugin
    >               --v=5
    >               --nodeid=$(NODE_ID)
    >               --endpoint=$(CSI_ENDPOINT)
    >               --drivername=$(DRIVER_NAME)
    >               --share-protocol-selector=$(MANILA_SHARE_PROTO)
    >               --fwdendpoint=$(FWD_CSI_ENDPOINT)'
    >             ]
    >             env:
    >               - name: DRIVER_NAME
    >                 value: cephfs.manila.csi.openstack.org
    >               - name: NODE_ID
    >                 valueFrom:
    >                   fieldRef:
    >                     fieldPath: spec.nodeName
    >               - name: CSI_ENDPOINT
    >                 value: "unix:///var/lib/kubelet/plugins/cephfs.manila.csi.openstack.org/csi.sock"
    >               - name: FWD_CSI_ENDPOINT
    >                 value: "unix:///var/lib/kubelet/plugins/cephfs.csi.ceph.com/csi.sock"
    >               - name: MANILA_SHARE_PROTO
    >                 value: "CEPHFS"
    >             imagePullPolicy: IfNotPresent
    >             volumeMounts:
    >               - name: cephfs-plugin-dir
    >                 mountPath: /var/lib/kubelet/plugins/cephfs.manila.csi.openstack.org
    >               - name: cephfs-fwd-plugin-dir
    >                 mountPath: /var/lib/kubelet/plugins/cephfs.csi.ceph.com
    >             resources:
    >               {}
    >         volumes:
    >           - name: registration-dir
    >             hostPath:
    >               path: /var/lib/kubelet/plugins_registry
    >               type: Directory
    >           - name: cephfs-plugin-dir
    >             hostPath:
    >               path: /var/lib/kubelet/plugins/cephfs.manila.csi.openstack.org
    >               type: DirectoryOrCreate
    >           - name: cephfs-fwd-plugin-dir
    >             hostPath:
    >               path: /var/lib/kubelet/plugins/cephfs.csi.ceph.com
    >               type: DirectoryOrCreate
    >   ---
    >   # Source: aglais/charts/ceph-csi-cephfs/templates/provisioner-deployment.yaml
    >   kind: Deployment
    >   apiVersion: apps/v1
    >   metadata:
    >     name: aglais-ceph-csi-cephfs-provisioner
    >     namespace: tiberius-20201028
    >     labels:
    >       app: ceph-csi-cephfs
    >       chart: ceph-csi-cephfs-3.1.1
    >       component: provisioner
    >       release: aglais
    >       heritage: Helm
    >   spec:
    >     replicas: 3
    >     selector:
    >       matchLabels:
    >         app: ceph-csi-cephfs
    >         component: provisioner
    >         release: aglais
    >     template:
    >       metadata:
    >         labels:
    >           app: ceph-csi-cephfs
    >           chart: ceph-csi-cephfs-3.1.1
    >           component: provisioner
    >           release: aglais
    >           heritage: Helm
    >       spec:
    >         serviceAccountName: aglais-ceph-csi-cephfs-provisioner
    >         containers:
    >           - name: csi-provisioner
    >             image: "quay.io/k8scsi/csi-provisioner:v1.6.0"
    >             imagePullPolicy: IfNotPresent
    >             args:
    >               - "--csi-address=$(ADDRESS)"
    >               - "--v=5"
    >               - "--timeout=60s"
    >               - "--enable-leader-election=true"
    >               - "--leader-election-type=leases"
    >               - "--retry-interval-start=500ms"
    >             env:
    >               - name: ADDRESS
    >                 value: "unix:///csi/csi-provisioner.sock"
    >             volumeMounts:
    >               - name: socket-dir
    >                 mountPath: /csi
    >             resources:
    >               {}
    >           - name: csi-snapshotter
    >             image: quay.io/k8scsi/csi-snapshotter:v2.1.1
    >             imagePullPolicy: IfNotPresent
    >             args:
    >               - "--csi-address=$(ADDRESS)"
    >               - "--v=5"
    >               - "--timeout=60s"
    >               - "--leader-election=true"
    >             env:
    >               - name: ADDRESS
    >                 value: "unix:///csi/csi-provisioner.sock"
    >             securityContext:
    >               privileged: true
    >             volumeMounts:
    >               - name: socket-dir
    >                 mountPath: /csi
    >             resources:
    >               {}
    >           - name: csi-attacher
    >             image: "quay.io/k8scsi/csi-attacher:v2.1.1"
    >             imagePullPolicy: IfNotPresent
    >             args:
    >               - "--v=5"
    >               - "--csi-address=$(ADDRESS)"
    >               - "--leader-election=true"
    >               - "--retry-interval-start=500ms"
    >             env:
    >               - name: ADDRESS
    >                 value: "unix:///csi/csi-provisioner.sock"
    >             volumeMounts:
    >               - name: socket-dir
    >                 mountPath: /csi
    >             resources:
    >               {}
    >           - name: csi-resizer
    >             image: "quay.io/k8scsi/csi-resizer:v0.5.0"
    >             imagePullPolicy: IfNotPresent
    >             args:
    >               - "--v=5"
    >               - "--csi-address=$(ADDRESS)"
    >               - "--csiTimeout=60s"
    >               - "--leader-election"
    >               - "--retry-interval-start=500ms"
    >             env:
    >               - name: ADDRESS
    >                 value: "unix:///csi/csi-provisioner.sock"
    >             volumeMounts:
    >               - name: socket-dir
    >                 mountPath: /csi
    >             resources:
    >               {}
    >           - name: csi-cephfsplugin
    >             image: "quay.io/cephcsi/cephcsi:v3.1.1"
    >             imagePullPolicy: IfNotPresent
    >             args:
    >               - "--nodeid=$(NODE_ID)"
    >               - "--type=cephfs"
    >               - "--controllerserver=true"
    >               - "--pidlimit=-1"
    >               - "--endpoint=$(CSI_ENDPOINT)"
    >               - "--v=5"
    >               - "--drivername=$(DRIVER_NAME)"
    >             env:
    >               - name: POD_IP
    >                 valueFrom:
    >                   fieldRef:
    >                     fieldPath: status.podIP
    >               - name: DRIVER_NAME
    >                 value: cephfs.csi.ceph.com
    >               - name: NODE_ID
    >                 valueFrom:
    >                   fieldRef:
    >                     fieldPath: spec.nodeName
    >               - name: CSI_ENDPOINT
    >                 value: "unix:///csi/csi-provisioner.sock"
    >             securityContext:
    >               privileged: true
    >               capabilities:
    >                 add: ["SYS_ADMIN"]
    >               allowPrivilegeEscalation: true
    >             volumeMounts:
    >               - name: socket-dir
    >                 mountPath: /csi
    >               - name: host-sys
    >                 mountPath: /sys
    >               - name: lib-modules
    >                 mountPath: /lib/modules
    >                 readOnly: true
    >               - name: host-dev
    >                 mountPath: /dev
    >               - name: ceph-csi-config
    >                 mountPath: /etc/ceph-csi-config/
    >               - name: keys-tmp-dir
    >                 mountPath: /tmp/csi/keys
    >             resources:
    >               {}
    >           - name: liveness-prometheus
    >             image: "quay.io/cephcsi/cephcsi:v3.1.1"
    >             imagePullPolicy: IfNotPresent
    >             args:
    >               - "--type=liveness"
    >               - "--endpoint=$(CSI_ENDPOINT)"
    >               - "--metricsport=8081"
    >               - "--metricspath=/metrics"
    >               - "--polltime=60s"
    >               - "--timeout=3s"
    >             env:
    >               - name: CSI_ENDPOINT
    >                 value: "unix:///csi/csi-provisioner.sock"
    >               - name: POD_IP
    >                 valueFrom:
    >                   fieldRef:
    >                     fieldPath: status.podIP
    >             volumeMounts:
    >               - name: socket-dir
    >                 mountPath: /csi
    >             resources:
    >               {}
    >         volumes:
    >           - name: socket-dir
    >             emptyDir: {
    >               medium: "Memory"
    >             }
    >           - name: host-sys
    >             hostPath:
    >               path: /sys
    >           - name: lib-modules
    >             hostPath:
    >               path: /lib/modules
    >           - name: host-dev
    >             hostPath:
    >               path: /dev
    >           - name: ceph-csi-config
    >             configMap:
    >               name: "ceph-csi-config-cephfs"
    >           - name: keys-tmp-dir
    >             emptyDir: {
    >               medium: "Memory"
    >             }
    >   ---
    >   # Source: aglais/charts/ingress-nginx/templates/controller-deployment.yaml
    >   apiVersion: apps/v1
    >   kind: Deployment
    >   metadata:
    >     labels:
    >       helm.sh/chart: ingress-nginx-3.7.1
    >       app.kubernetes.io/name: ingress-nginx
    >       app.kubernetes.io/instance: aglais
    >       app.kubernetes.io/version: "0.40.2"
    >       app.kubernetes.io/managed-by: Helm
    >       app.kubernetes.io/component: controller
    >     name: aglais-ingress-nginx-controller
    >   spec:
    >     selector:
    >       matchLabels:
    >         app.kubernetes.io/name: ingress-nginx
    >         app.kubernetes.io/instance: aglais
    >         app.kubernetes.io/component: controller
    >     replicas: 1
    >     revisionHistoryLimit: 10
    >     minReadySeconds: 0
    >     template:
    >       metadata:
    >         labels:
    >           app.kubernetes.io/name: ingress-nginx
    >           app.kubernetes.io/instance: aglais
    >           app.kubernetes.io/component: controller
    >       spec:
    >         dnsPolicy: ClusterFirst
    >         containers:
    >           - name: controller
    >             image: "k8s.gcr.io/ingress-nginx/controller:v0.40.2@sha256:46ba23c3fbaafd9e5bd01ea85b2f921d9f2217be082580edc22e6c704a83f02f"
    >             imagePullPolicy: IfNotPresent
    >             lifecycle:
    >               preStop:
    >                 exec:
    >                   command:
    >                   - /wait-shutdown
    >             args:
    >               - /nginx-ingress-controller
    >               - --publish-service=$(POD_NAMESPACE)/aglais-ingress-nginx-controller
    >               - --election-id=ingress-controller-leader
    >               - --ingress-class=nginx
    >               - --configmap=$(POD_NAMESPACE)/aglais-ingress-nginx-controller
    >               - --validating-webhook=:8443
    >               - --validating-webhook-certificate=/usr/local/certificates/cert
    >               - --validating-webhook-key=/usr/local/certificates/key
    >             securityContext:
    >               capabilities:
    >                   drop:
    >                   - ALL
    >                   add:
    >                   - NET_BIND_SERVICE
    >               runAsUser: 101
    >               allowPrivilegeEscalation: true
    >             env:
    >               - name: POD_NAME
    >                 valueFrom:
    >                   fieldRef:
    >                     fieldPath: metadata.name
    >               - name: POD_NAMESPACE
    >                 valueFrom:
    >                   fieldRef:
    >                     fieldPath: metadata.namespace
    >               - name: LD_PRELOAD
    >                 value: /usr/local/lib/libmimalloc.so
    >             livenessProbe:
    >               httpGet:
    >                 path: /healthz
    >                 port: 10254
    >                 scheme: HTTP
    >               initialDelaySeconds: 10
    >               periodSeconds: 10
    >               timeoutSeconds: 1
    >               successThreshold: 1
    >               failureThreshold: 5
    >             readinessProbe:
    >               httpGet:
    >                 path: /healthz
    >                 port: 10254
    >                 scheme: HTTP
    >               initialDelaySeconds: 10
    >               periodSeconds: 10
    >               timeoutSeconds: 1
    >               successThreshold: 1
    >               failureThreshold: 3
    >             ports:
    >               - name: http
    >                 containerPort: 80
    >                 protocol: TCP
    >               - name: https
    >                 containerPort: 443
    >                 protocol: TCP
    >               - name: webhook
    >                 containerPort: 8443
    >                 protocol: TCP
    >             volumeMounts:
    >               - name: webhook-cert
    >                 mountPath: /usr/local/certificates/
    >                 readOnly: true
    >             resources:
    >               requests:
    >                 cpu: 100m
    >                 memory: 90Mi
    >         nodeSelector:
    >           kubernetes.io/os: linux
    >         serviceAccountName: aglais-ingress-nginx
    >         terminationGracePeriodSeconds: 300
    >         volumes:
    >           - name: webhook-cert
    >             secret:
    >               secretName: aglais-ingress-nginx-admission
    >   ---
    >   # Source: aglais/charts/openstack-manila-csi/templates/controllerplugin-statefulset.yaml
    >   kind: StatefulSet
    >   apiVersion: apps/v1
    >   metadata:
    >     name: aglais-openstack-manila-csi-controllerplugin
    >     labels:
    >       app: openstack-manila-csi
    >       chart: openstack-manila-csi-0.2.1
    >       component: controllerplugin
    >       release: aglais
    >       heritage: Helm
    >   spec:
    >     serviceName: aglais-openstack-manila-csi-controllerplugin
    >     replicas: 1
    >     selector:
    >       matchLabels:
    >         app: openstack-manila-csi
    >         component: controllerplugin
    >         release: aglais
    >     template:
    >       metadata:
    >         labels:
    >           app: openstack-manila-csi
    >           chart: openstack-manila-csi-0.2.1
    >           component: controllerplugin
    >           release: aglais
    >           heritage: Helm
    >       spec:
    >         serviceAccountName: aglais-openstack-manila-csi-controllerplugin
    >         containers:
    >           - name: cephfs-provisioner
    >             image: "quay.io/k8scsi/csi-provisioner:v1.4.0"
    >             args:
    >               - "--v=5"
    >               - "--csi-address=$(ADDRESS)"
    >             env:
    >               - name: ADDRESS
    >                 value: "unix:///var/lib/kubelet/plugins/cephfs.manila.csi.openstack.org/csi-controllerplugin.sock"
    >             imagePullPolicy: IfNotPresent
    >             volumeMounts:
    >               - name: cephfs-plugin-dir
    >                 mountPath: /var/lib/kubelet/plugins/cephfs.manila.csi.openstack.org
    >             resources:
    >               {}
    >           - name: cephfs-snapshotter
    >             image: "quay.io/k8scsi/csi-snapshotter:v1.2.2"
    >             args:
    >               - "--v=5"
    >               - "--csi-address=$(ADDRESS)"
    >             env:
    >               - name: ADDRESS
    >                 value: "unix:///var/lib/kubelet/plugins/cephfs.manila.csi.openstack.org/csi-controllerplugin.sock"
    >             imagePullPolicy: IfNotPresent
    >             volumeMounts:
    >               - name: cephfs-plugin-dir
    >                 mountPath: /var/lib/kubelet/plugins/cephfs.manila.csi.openstack.org
    >             resources:
    >               {}
    >           - name: cephfs-nodeplugin
    >             securityContext:
    >               privileged: true
    >               capabilities:
    >                 add: ["SYS_ADMIN"]
    >               allowPrivilegeEscalation: true
    >             image: "k8scloudprovider/manila-csi-plugin:v1.18.0"
    >             command: ["/bin/sh", "-c",
    >               '/bin/manila-csi-plugin
    >               --v=5
    >               --nodeid=$(NODE_ID)
    >               --endpoint=$(CSI_ENDPOINT)
    >               --drivername=$(DRIVER_NAME)
    >               --share-protocol-selector=$(MANILA_SHARE_PROTO)
    >               --fwdendpoint=$(FWD_CSI_ENDPOINT)'
    >             ]
    >             env:
    >               - name: DRIVER_NAME
    >                 value: cephfs.manila.csi.openstack.org
    >               - name: NODE_ID
    >                 valueFrom:
    >                   fieldRef:
    >                     fieldPath: spec.nodeName
    >               - name: CSI_ENDPOINT
    >                 value: "unix:///var/lib/kubelet/plugins/cephfs.manila.csi.openstack.org/csi-controllerplugin.sock"
    >               - name: FWD_CSI_ENDPOINT
    >                 value: "unix:///var/lib/kubelet/plugins/cephfs.csi.ceph.com/csi.sock"
    >               - name: MANILA_SHARE_PROTO
    >                 value: "CEPHFS"
    >             imagePullPolicy: IfNotPresent
    >             volumeMounts:
    >               - name: cephfs-plugin-dir
    >                 mountPath: /var/lib/kubelet/plugins/cephfs.manila.csi.openstack.org
    >               - name: cephfs-fwd-plugin-dir
    >                 mountPath: /var/lib/kubelet/plugins/cephfs.csi.ceph.com
    >               - name: pod-mounts
    >                 mountPath: /var/lib/kubelet/pods
    >                 mountPropagation: Bidirectional
    >             resources:
    >               {}
    >         volumes:
    >           - name: cephfs-plugin-dir
    >             hostPath:
    >               path: /var/lib/kubelet/plugins/cephfs.manila.csi.openstack.org
    >               type: DirectoryOrCreate
    >           - name: cephfs-fwd-plugin-dir
    >             hostPath:
    >               path: /var/lib/kubelet/plugins/cephfs.csi.ceph.com
    >               type: Directory
    >           - name: pod-mounts
    >             hostPath:
    >               path: /var/lib/kubelet/pods
    >               type: Directory
    >   ---
    >   # Source: aglais/charts/openstack-manila-csi/templates/csidriver.yaml
    >   apiVersion: storage.k8s.io/v1beta1
    >   kind: CSIDriver
    >   metadata:
    >     name: cephfs.manila.csi.openstack.org
    >   spec:
    >     attachRequired: false
    >     podInfoOnMount: false
    >   ---
    >   # Source: aglais/charts/ingress-nginx/templates/admission-webhooks/validating-webhook.yaml
    >   # before changing this value, check the required kubernetes version
    >   # https://kubernetes.io/docs/reference/access-authn-authz/extensible-admission-controllers/#prerequisites
    >   apiVersion: admissionregistration.k8s.io/v1
    >   kind: ValidatingWebhookConfiguration
    >   metadata:
    >     labels:
    >       helm.sh/chart: ingress-nginx-3.7.1
    >       app.kubernetes.io/name: ingress-nginx
    >       app.kubernetes.io/instance: aglais
    >       app.kubernetes.io/version: "0.40.2"
    >       app.kubernetes.io/managed-by: Helm
    >       app.kubernetes.io/component: admission-webhook
    >     name: aglais-ingress-nginx-admission
    >   webhooks:
    >     - name: validate.nginx.ingress.kubernetes.io
    >       rules:
    >         - apiGroups:
    >             - networking.k8s.io
    >           apiVersions:
    >             - v1beta1
    >             - v1
    >           operations:
    >             - CREATE
    >             - UPDATE
    >           resources:
    >             - ingresses
    >       failurePolicy: Fail
    >       sideEffects: None
    >       admissionReviewVersions:
    >         - v1
    >         - v1beta1
    >       clientConfig:
    >         service:
    >           namespace: tiberius-20201028
    >           name: aglais-ingress-nginx-controller-admission
    >           path: /networking/v1beta1/ingresses


# -----------------------------------------------------
# Check the components.
#[user@kubernator]

    kubectl \
        --namespace "${namespace:?}" \
        get all

    >   NAME                                                            READY   STATUS    RESTARTS   AGE
    >   pod/aglais-ceph-csi-cephfs-nodeplugin-5r97v                     3/3     Running   0          2m34s
    >   pod/aglais-ceph-csi-cephfs-nodeplugin-sctk8                     3/3     Running   0          2m34s
    >   pod/aglais-ceph-csi-cephfs-nodeplugin-sj42c                     3/3     Running   0          2m34s
    >   pod/aglais-ceph-csi-cephfs-provisioner-f9ff8cd4c-h9m75          6/6     Running   0          2m34s
    >   pod/aglais-ceph-csi-cephfs-provisioner-f9ff8cd4c-tj9jw          6/6     Running   0          2m34s
    >   pod/aglais-ceph-csi-cephfs-provisioner-f9ff8cd4c-wv5k9          6/6     Running   0          2m34s
    >   pod/aglais-ingress-nginx-controller-54f444477b-7pknn            1/1     Running   0          2m34s
    >   pod/aglais-openstack-manila-csi-controllerplugin-0              3/3     Running   0          2m34s
    >   pod/aglais-openstack-manila-csi-nodeplugin-jj7jd                2/2     Running   0          2m34s
    >   pod/aglais-openstack-manila-csi-nodeplugin-v2nxc                2/2     Running   0          2m34s
    >   pod/aglais-openstack-manila-csi-nodeplugin-v7ncp                2/2     Running   0          2m34s
    >
    >   NAME                                                            TYPE           CLUSTER-IP       EXTERNAL-IP       PORT(S)                      AGE
    >   service/aglais-ceph-csi-cephfs-nodeplugin-http-metrics          ClusterIP      10.254.254.235   <none>            8080/TCP                     2m34s
    >   service/aglais-ceph-csi-cephfs-provisioner-http-metrics         ClusterIP      10.254.168.163   <none>            8080/TCP                     2m34s
    >   service/aglais-ingress-nginx-controller                         LoadBalancer   10.254.17.173    128.232.227.204   80:30104/TCP,443:30372/TCP   2m34s
    >   service/aglais-ingress-nginx-controller-admission               ClusterIP      10.254.107.25    <none>            443/TCP                      2m34s
    >   service/aglais-openstack-manila-csi-controllerplugin            ClusterIP      10.254.24.136    <none>            12345/TCP                    2m34s
    >
    >   NAME                                                            DESIRED   CURRENT   READY   UP-TO-DATE   AVAILABLE   NODE SELECTOR   AGE
    >   daemonset.apps/aglais-ceph-csi-cephfs-nodeplugin                3         3         3       3            3           <none>          2m34s
    >   daemonset.apps/aglais-openstack-manila-csi-nodeplugin           3         3         3       3            3           <none>          2m34s
    >
    >   NAME                                                            READY   UP-TO-DATE   AVAILABLE   AGE
    >   deployment.apps/aglais-ceph-csi-cephfs-provisioner              3/3     3            3           2m34s
    >   deployment.apps/aglais-ingress-nginx-controller                 1/1     1            1           2m34s
    >
    >   NAME                                                            DESIRED   CURRENT   READY   AGE
    >   replicaset.apps/aglais-ceph-csi-cephfs-provisioner-f9ff8cd4c    3         3         3       2m34s
    >   replicaset.apps/aglais-ingress-nginx-controller-54f444477b      1         1         1       2m34s
    >
    >   NAME                                                            READY   AGE
    >   statefulset.apps/aglais-openstack-manila-csi-controllerplugin   1/1     2m34s






