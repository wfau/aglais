#
# <meta:header>
#   <meta:licence>
#     Copyright (c) 2020, ROE (http://www.roe.ac.uk/)
#
#     This information is free software: you can redistribute it and/or modify
#     it under the terms of the GNU General Public License as published by
#     the Free Software Foundation, either version 3 of the License, or
#     (at your option) any later version.
#
#     This information is distributed in the hope that it will be useful,
#     but WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#     GNU General Public License for more details.
#
#     You should have received a copy of the GNU General Public License
#     along with this program.  If not, see <http://www.gnu.org/licenses/>.
#   </meta:licence>
# </meta:header>
#
#


    The problem seems to be that a launched interpreter can't resolve the callback hostname it is given.

    >   ....
    >   INFO [2020-07-11 02:17:44,290] ({main} RemoteInterpreterServer.java[<init>]:161) - Starting remote interpreter server on port 0, intpEventServerAddress: zeppelin-server-695446f7c6-9rncm.default.svc:12320
    >   Exception in thread "main" org.apache.zeppelin.shaded.org.apache.thrift.transport.TTransportException: java.net.UnknownHostException: zeppelin-server-695446f7c6-9rncm.default.svc
    >       at org.apache.zeppelin.shaded.org.apache.thrift.transport.TSocket.open(TSocket.java:226)
    >       at org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.<init>(RemoteInterpreterServer.java:167)
    >       at org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.<init>(RemoteInterpreterServer.java:152)
    >       at org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer.main(RemoteInterpreterServer.java:321)
    >   Caused by: java.net.UnknownHostException: zeppelin-server-695446f7c6-9rncm.default.svc
    >       at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184)
    >       at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
    >       at java.net.Socket.connect(Socket.java:607)
    >       at org.apache.zeppelin.shaded.org.apache.thrift.transport.TSocket.open(TSocket.java:221)
    >       ... 3 more
    >   ....


    The callback host is set in the interpreter command line, configured here:
    [k8s/interpreter/100-interpreter-spec.yaml]

    >   ....
    >   containers:
    >   - name: {{zeppelin.k8s.interpreter.container.name}}
    >     image: {{zeppelin.k8s.interpreter.container.image}}
    >     command: ["sh", "-c", "$(ZEPPELIN_HOME)/bin/interpreter.sh -d $(ZEPPELIN_HOME)/interpreter/{{zeppelin.k8s.interpreter.group.name}} -r {{zeppelin.k8s.interpreter.rpc.portRange}} -c {{zeppelin.k8s.server.rpc.service}} -p {{zeppelin.k8s.server.rpc.portRange}} -i {{zeppelin.k8s.interpreter.group.id}} -l {{zeppelin.k8s.interpreter.localRepo}} -g {{zeppelin.k8s.interpreter.setting.name}}"]
    >   ....


    The template property is set here:
    [zeppelin-plugins/launcher/k8s-standard/src/main/java/org/apache/zeppelin/interpreter/launcher/K8sRemoteInterpreterProcess.java]

    >   ....
    >   k8sProperties.put("zeppelin.k8s.server.rpc.service", intpEventServerHost);
    >   k8sProperties.put("zeppelin.k8s.server.rpc.portRange", intpEventServerPort);
    >   ....


    The K8sRemoteInterpreterProcess is created by this class:
    [zeppelin-plugins/launcher/k8s-standard/src/main/java/org/apache/zeppelin/interpreter/launcher/K8sStandardInterpreterLauncher.java]

    K8sStandardInterpreterLauncher uses this method to create the Zeppelin service name.

    >     /**
    >      * get Zeppelin service.
    >      * return <service-name>.<namespace>.svc
    >      * @throws IOException
    >      */
    >     private String getZeppelinService() throws IOException {
    >       if (isRunningOnKubernetes()) {
    >         return String.format("%s.%s.svc",
    >                 zConf.getK8sServiceName(),
    >                 getNamespace());
    >       } else {
    >         return context.getIntpEventServerHost();
    >       }
    >     }

    So this looks deliberate, but it doesn't resolve in DNS on our platform.

    Two possibilities - the name is wrong, or our DNS resolver doesn't work.



