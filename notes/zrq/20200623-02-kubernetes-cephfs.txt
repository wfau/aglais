#
# <meta:header>
#   <meta:licence>
#     Copyright (c) 2020, ROE (http://www.roe.ac.uk/)
#
#     This information is free software: you can redistribute it and/or modify
#     it under the terms of the GNU General Public License as published by
#     the Free Software Foundation, either version 3 of the License, or
#     (at your option) any later version.
#
#     This information is distributed in the hope that it will be useful,
#     but WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#     GNU General Public License for more details.
#
#     You should have received a copy of the GNU General Public License
#     along with this program.  If not, see <http://www.gnu.org/licenses/>.
#   </meta:licence>
# </meta:header>
#
#


    #
    # Step through the CephFS example from StackHPC.
    # https://github.com/RSE-Cambridge/iris-magnum/blob/master/manila-cephfs-pvc/README.md
    # Follow on from 20200623-01-terraform-cluster.txt
    #


# -----------------------------------------------------
# Create a container to work with.
#[user@desktop]

    podman run \
        --rm \
        --tty \
        --interactive \
        --publish 8100 \
        --hostname terraformer \
        --volume "${HOME}/clouds.yaml:/etc/openstack/clouds.yaml:z" \
        atolmis/terraform-client \
        bash


# -----------------------------------------------------
# Set the project and cluster names.
#[user@terraformer]

    cloudname=gaia-prod
    clustername=Tiberius


# -----------------------------------------------------
# Set the cluster name.
#[user@terraformer]

    # This is hard-coded into the templates
    export clustername=my-test

# -----------------------------------------------------
# List our clusters.
#[user@terraformer]

    openstack \
        --os-cloud "${cloudname:?}" \
        coe cluster list

    >   +--------------------------------------+---------+---------+------------+--------------+-----------------+---------------+
    >   | uuid                                 | name    | keypair | node_count | master_count | status          | health_status |
    >   +--------------------------------------+---------+---------+------------+--------------+-----------------+---------------+
    >   | ab708936-f205-4953-9ce0-50f9097fbecd | my-test | my-test |          1 |            1 | CREATE_COMPLETE | HEALTHY       |
    >   +--------------------------------------+---------+---------+------------+--------------+-----------------+---------------+


# -----------------------------------------------------
# Get the details for our cluster.
#[user@terraformer]

    clusterid=$(
        openstack \
        --os-cloud "${cloudname:?}" \
            coe cluster list \
                --format json \
        | jq -r '.[] | select(.name == "'${clustername:?}'") | .uuid'
        )

    openstack \
        --os-cloud "${cloudname:?}" \
        coe cluster show \
            "${clusterid}" \
                --format json \
    | jq '.'

    >   {
    >     "status": "CREATE_COMPLETE",
    >     "health_status": "HEALTHY",
    >     "cluster_template_id": "d54167d9-495f-437e-88fe-d182b2a230ea",
    >     "node_addresses": [
    >       "10.0.0.83"
    >     ],
    >     "uuid": "ab708936-f205-4953-9ce0-50f9097fbecd",
    >     "stack_id": "33553b5b-7221-4898-8a3f-92c0c61da418",
    >     "status_reason": null,
    >     "created_at": "2020-06-23T11:09:38+00:00",
    >     "updated_at": "2020-06-23T11:15:40+00:00",
    >     "coe_version": "v1.15.9",
    >     "labels": {
    >       "auto_healing_controller": "magnum-auto-healer",
    >       "max_node_count": "2",
    >       "cloud_provider_tag": "v1.15.0",
    >       "etcd_tag": "3.3.17",
    >       "monitoring_enabled": "true",
    >       "tiller_enabled": "true",
    >       "autoscaler_tag": "v1.15.2",
    >       "master_lb_floating_ip_enabled": "true",
    >       "min_node_count": "1",
    >       "tiller_tag": "v2.16.1",
    >       "use_podman": "true",
    >       "auto_healing_enabled": "true",
    >       "heat_container_agent_tag": "train-stable-1",
    >       "kube_tag": "v1.15.9",
    >       "auto_scaling_enabled": "true"
    >     },
    >     "faults": "",
    >     "keypair": "my-test",
    >     "api_address": "https://128.232.227.218:6443",
    >     "master_addresses": [
    >       "10.0.0.95"
    >     ],
    >     "create_timeout": null,
    >     "node_count": 1,
    >     "discovery_url": "https://discovery.etcd.io/b0a06da82b49d3a4cda9233a01cedc6f",
    >     "master_count": 1,
    >     "container_version": "1.12.6",
    >     "name": "my-test",
    >     "master_flavor_id": "general.v1.tiny",
    >     "flavor_id": "general.v1.tiny",
    >     "health_status_reason": {
    >       "my-test-lmck76anbakg-master-0.Ready": "True",
    >       "my-test-lmck76anbakg-node-0.Ready": "True",
    >       "api": "ok"
    >     },
    >     "project_id": "21b4ae3a2ea44bc5a9c14005ed2963af"
    >   }


# -----------------------------------------------------
# Get the kubectl config for our cluster.
#[user@terraformer]

    pushd "${HOME}"

        openstack \
            --os-cloud "${cloudname:?}" \
            coe cluster config \
                "${clusterid}"

    popd

    cat "${HOME}/config"

    >   apiVersion: v1
    >   clusters:
    >   - cluster:
    >       certificate-authority-data: LS0tLS1C........RS0tLS0t
    >       server: https://128.232.227.218:6443
    >     name: my-test
    >   contexts:
    >   - context:
    >       cluster: my-test
    >       user: admin
    >     name: default
    >   current-context: default
    >   kind: Config
    >   preferences: {}
    >   users:
    >   - name: admin
    >     user:
    >       client-certificate-data: LS0tLS1C........FLS0tLS0=
    >       client-key-data: LS0tLS1C........tLS0tLQo=


# -----------------------------------------------------
# Use kubectl to get details of our cluster.
#[user@terraformer]

    kubectl \
        --kubeconfig "${HOME}/config" \
        cluster-info

    >   Kubernetes master is running at https://128.232.227.218:6443
    >   Heapster is running at https://128.232.227.218:6443/api/v1/namespaces/kube-system/services/heapster/proxy
    >   CoreDNS is running at https://128.232.227.218:6443/api/v1/namespaces/kube-system/services/kube-dns:dns/proxy
    >   
    >   To further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.


# -----------------------------------------------------
# Clone the StackHPC examples.
#[user@terraformer]

    pushd "${HOME}"

        git clone 'https://github.com/RSE-Cambridge/iris-magnum.git'

    popd

    #
    # https://github.com/RSE-Cambridge/iris-magnum/blob/master/manila-cephfs-pvc/README.md#networking-to-cephfs
    #   "We need an extra router for the private network that is created by Magnum to
    #    reach the 10.206.0.0/16 network on which the CephFS storage is exposed."
    #


# -----------------------------------------------------
# Replace the old version of the Python Manila client.
#[user@terraformer]

    sudo dnf remove python3-manilaclient

    >   ....
    >   ....
    >   Removed:
    >     python3-manilaclient-1.29.0-2.fc32.noarch


    pip install python-manilaclient

    >   Collecting python-manilaclient
    >   ....
    >   ....
    >   Installing collected packages: python-manilaclient
    >   Successfully installed python-manilaclient-2.2.0


# -----------------------------------------------------
# List the existing Manila shares.
#[user@terraformer]

    openstack \
        --os-cloud "${cloudname:?}" \
        share list

    >   Version 2.55 is not supported by the API. Minimum is 2.0 and maximum is 2.51. (HTTP 406) (Request-ID: req-6d4c4f8e-7606-41f5-b341-f30dd2754693)


# -----------------------------------------------------
# Set the API version.
# https://stackoverflow.com/a/58806536
#[user@terraformer]

    export OS_SHARE_API_VERSION=2.51


# -----------------------------------------------------
# List the existing Manila shares.
#[user@terraformer]

    openstack \
        --os-cloud "${cloudname:?}" \
        share list

    >   +--------------------------------------+------------+------+-------------+-----------+-----------+------------------+------+-------------------+
    >   | ID                                   | Name       | Size | Share Proto | Status    | Is Public | Share Type Name  | Host | Availability Zone |
    >   +--------------------------------------+------------+------+-------------+-----------+-----------+------------------+------+-------------------+
    >   | 1105a93b-37bf-4ffe-93fd-00013aed5ba8 | cephfs-one |    1 | CEPHFS      | available | False     | cephfsnativetype |      | nova              |
    >   | 6273b89d-a651-46d6-8ec5-fcb6234b2696 | test-001   |    1 | CEPHFS      | available | False     | cephfsnativetype |      | nova              |
    >   +--------------------------------------+------------+------+-------------+-----------+-----------+------------------+------+-------------------+


# -----------------------------------------------------
# Find the subnet and network ID for our cluster.
#[user@terraformer]

    openstack \
        --os-cloud "${cloudname:?}" \
        subnet list

    >   +--------------------------------------+-----------------------------------------------------------------------+--------------------------------------+---------------+
    >   | ID                                   | Name                                                                  | Network                              | Subnet        |
    >   +--------------------------------------+-----------------------------------------------------------------------+--------------------------------------+---------------+
    >   | 01b76c7c-3c1a-4c5c-9a5a-14bcf6c0c290 | cumulus-internal                                                      | ecb791d5-1022-447a-a79c-8f38a0f5c990 | 10.218.0.0/16 |
    >   | f5b9c9f4-e9c4-491b-9828-1bf336c684ae | my-test-lmck76anbakg-network-vr2ukas2ycen-private_subnet-ey45tlwqaadz | 423a1e6d-6ec2-41b4-970b-85f39a795c0f | 10.0.0.0/24   |
    >   +--------------------------------------+-----------------------------------------------------------------------+--------------------------------------+---------------+


    subnet_id=$(
        openstack \
            --os-cloud "${cloudname:?}" \
            subnet list \
                --format json \
        | jq -r '.[] | select(.Name | test("^'${clustername:?}'")) | .ID'
        )

    network_id=$(
        openstack \
            --os-cloud "${cloudname:?}" \
            subnet list \
                --format json \
        | jq -r '.[] | select(.ID == "'${subnet_id:?}'") | .Network'
        )


# -----------------------------------------------------
# Find the router ID for our cluster.
#[user@terraformer]

    openstack \
        --os-cloud "${cloudname:?}" \
        router list

    >   +--------------------------------------+------------------------------------------------------------------+--------+-------+----------------------------------+
    >   | ID                                   | Name                                                             | Status | State | Project                          |
    >   +--------------------------------------+------------------------------------------------------------------+--------+-------+----------------------------------+
    >   | 682d9323-4741-4aca-ae18-4a2a5179fb3f | my-test-lmck76anbakg-network-vr2ukas2ycen-extrouter-zijow7edgqfh | ACTIVE | UP    | 21b4ae3a2ea44bc5a9c14005ed2963af |
    >   +--------------------------------------+------------------------------------------------------------------+--------+-------+----------------------------------+


    router_name=$(
        openstack \
            --os-cloud "${cloudname:?}" \
            router list \
                --format json \
        | jq -r '.[] | select(.Name | test("^'${clustername:?}'")) | .Name'
        )



# -----------------------------------------------------
# Use the unrestricted cloud credentials.
#[user@terraformer]

    # The Terraform module expects OS_CLOUD.
    export OS_CLOUD="${cloudname:?}-super"

# -----------------------------------------------------
# Deploy the Manila router.
#[user@terraformer]

    pushd "${HOME}/iris-magnum"
        pushd 'terraform/examples/manila_router'

            cat > terraform.tfvars << EOF
magnum_network_id = "${network_id:?}"
magnum_router_name = "${router_name:?}"
EOF


            terraform init

    >   Initializing the backend...
    >   
    >   Initializing provider plugins...
    >   ....
    >   ....
    >   Terraform has been successfully initialized!
    >   ....
    >   ....


            terraform plan

    >   ....
    >     # openstack_networking_port_v2.ceph will be created
    >     + resource "openstack_networking_port_v2" "ceph" {
    >         + admin_state_up         = (known after apply)
    >         + all_fixed_ips          = (known after apply)
    >         + all_security_group_ids = (known after apply)
    >         + all_tags               = (known after apply)
    >         + device_id              = (known after apply)
    >         + device_owner           = (known after apply)
    >         + dns_assignment         = (known after apply)
    >         + dns_name               = (known after apply)
    >         + id                     = (known after apply)
    >         + mac_address            = (known after apply)
    >         + network_id             = "423a1e6d-6ec2-41b4-970b-85f39a795c0f"
    >         + port_security_enabled  = (known after apply)
    >         + qos_policy_id          = (known after apply)
    >         + region                 = (known after apply)
    >         + tenant_id              = (known after apply)
    >   
    >         + binding {
    >             + host_id     = (known after apply)
    >             + profile     = (known after apply)
    >             + vif_details = (known after apply)
    >             + vif_type    = (known after apply)
    >             + vnic_type   = (known after apply)
    >           }
    >       }
    >   
    >     # openstack_networking_router_interface_v2.ceph will be created
    >     + resource "openstack_networking_router_interface_v2" "ceph" {
    >         + id        = (known after apply)
    >         + port_id   = (known after apply)
    >         + region    = (known after apply)
    >         + router_id = (known after apply)
    >         + subnet_id = (known after apply)
    >       }
    >   
    >     # openstack_networking_router_route_v2.ceph will be created
    >     + resource "openstack_networking_router_route_v2" "ceph" {
    >         + destination_cidr = "10.206.0.0/16"
    >         + id               = (known after apply)
    >         + next_hop         = (known after apply)
    >         + region           = (known after apply)
    >         + router_id        = "682d9323-4741-4aca-ae18-4a2a5179fb3f"
    >       }
    >   
    >     # openstack_networking_router_v2.ceph will be created
    >     + resource "openstack_networking_router_v2" "ceph" {
    >         + admin_state_up          = true
    >         + all_tags                = (known after apply)
    >         + availability_zone_hints = (known after apply)
    >         + distributed             = (known after apply)
    >         + enable_snat             = (known after apply)
    >         + external_gateway        = (known after apply)
    >         + external_network_id     = "ecb791d5-1022-447a-a79c-8f38a0f5c990"
    >         + id                      = (known after apply)
    >         + name                    = "test-magnum-to-ceph"
    >         + region                  = (known after apply)
    >         + tenant_id               = (known after apply)
    >   
    >         + external_fixed_ip {
    >             + ip_address = (known after apply)
    >             + subnet_id  = (known after apply)
    >           }
    >       }
    >   
    >   Plan: 4 to add, 0 to change, 0 to destroy.
    >   ....


            terraform apply

    >   ....
    >   ....
    >   Do you want to perform these actions?
    >     Terraform will perform the actions described above.
    >     Only 'yes' will be accepted to approve.
    >   
    >     Enter a value: yes
    >   
    >   openstack_networking_router_v2.ceph: Creating...
    >   openstack_networking_port_v2.ceph: Creating...
    >   openstack_networking_port_v2.ceph: Creation complete after 7s [id=742a195b-9717-41e4-bfa6-1f52ae70a8ed]
    >   openstack_networking_router_v2.ceph: Still creating... [10s elapsed]
    >   openstack_networking_router_v2.ceph: Creation complete after 13s [id=a0ebbabf-dd40-4678-9b94-3b25eb83da0f]
    >   openstack_networking_router_interface_v2.ceph: Creating...
    >   openstack_networking_router_interface_v2.ceph: Creation complete after 10s [id=742a195b-9717-41e4-bfa6-1f52ae70a8ed]
    >   openstack_networking_router_route_v2.ceph: Creating...
    >   openstack_networking_router_route_v2.ceph: Creation complete after 3s [id=682d9323-4741-4aca-ae18-4a2a5179fb3f-route-10.206.0.0/16-10.0.0.137]
    >   
    >   Apply complete! Resources: 4 added, 0 changed, 0 destroyed.

        popd
    popd


# -----------------------------------------------------
# Run the example deployment.
#[user@terraformer]

    pushd "${HOME}/iris-magnum"
        pushd 'manila-cephfs-pvc'

            #
            # Create the ServiceAccount, ClusterRole and ClusterRoleBinding
            kubectl \
                --kubeconfig "${HOME}/config" \
                create \
                    --filename rbac.yaml

    >   serviceaccount/manila-provisioner created
    >   clusterrole.rbac.authorization.k8s.io/manila-provisioner-runner created
    >   clusterrolebinding.rbac.authorization.k8s.io/manila-provisioner-role created

            #
            # Deploy the manila-provisioner app
            #   image: docker.io/k8scloudprovider/manila-provisioner:latest
            kubectl \
                --kubeconfig "${HOME}/config" \
                create \
                    --filename deployments.yaml

    >   deployment.apps/manila-provisioner created


            #
            # Create the manila-cephfs-share StorageClass
            kubectl \
                --kubeconfig "${HOME}/config" \
                create \
                    --filename sc.yaml

    >   storageclass.storage.k8s.io/manila-cephfs-share created

            #
            # Create a PersistentVolumeClaim for 13G
            kubectl \
                --kubeconfig "${HOME}/config" \
                create \
                    --filename pvc.yaml

    >   persistentvolumeclaim/manila-cephfs-pvc created

            #
            # Deploy the demo Service.
            #   image: filebrowser/filebrowser
            kubectl \
                --kubeconfig "${HOME}/config" \
                create \
                    --filename demo.yaml

    >   service/demo-svc created
    >   deployment.apps/demo-depl created


            #
            # List the pods.
            kubectl \
                --kubeconfig "${HOME}/config" \
                get pods

    >   NAME                                  READY   STATUS    RESTARTS   AGE
    >   alberius-cant-6f64989475-nkszd        1/1     Running   0          12h
    >   demo-depl-788448d746-c959t            1/1     Running   0          12m
    >   manila-provisioner-67875f84b4-mq6l7   1/1     Running   0          15m


        popd
    popd


# -----------------------------------------------------
# Setup the port forwarding proxy.
#[user@terraformer]

    kubectl \
        --kubeconfig "${HOME}/config" \
        port-forward \
            --address 0.0.0.0 \
            svc/demo-svc \
                8100:80


    >   Forwarding from 0.0.0.0:8100 -> 80
    >   ....


# -----------------------------------------------------
# -----------------------------------------------------
# Use a web browser to access the filebrowser service.
#[user@desktop]

    firefox 'http://localhost:38339/files/' &

        # Upload a file ..
        # Download a file ..

        # Check files are stored on the Manila share ?



    curl 'http://localhost:38339/files/'

    >   <!DOCTYPE html>
    >   <html lang=en>
    >       <head>
    >           <meta charset=utf-8>
    >           <meta http-equiv=X-UA-Compatible content="IE=edge">
    >           <meta name=viewport content="width=device-width,initial-scale=1,user-scalable=no">
    >           <title>File Browser</title>
    >           ....
    >           ....
    >       </head>
    >       <body>
    >           <div id=app></div>
    >           <div id=loading>
    >               <div class=spinner>
    >                   <div class=bounce1></div>
    >                   <div class=bounce2></div>
    >                   <div class=bounce3></div>
    >               </div>
    >           </div>
    >           <script src="/static/js/chunk-vendors.975922ca.js"></script>
    >           <script src="/static/js/app.30c4a2a1.js"></script>
    >       </body>
    >   </html>

# -----------------------------------------------------
# Delete the service.
#[user@terraformer]

    pushd "${HOME}/iris-magnum"
        pushd 'manila-cephfs-pvc'

            kubectl \
                --kubeconfig "${HOME}/config" \
                delete \
                    --filename demo.yaml

    >   service "demo-svc" deleted
    >   deployment.apps "demo-depl" deleted


            kubectl \
                --kubeconfig "${HOME}/config" \
                delete \
                    --filename pvc.yaml

    >   persistentvolumeclaim "manila-cephfs-pvc" deleted


            kubectl \
                --kubeconfig "${HOME}/config" \
                delete \
                    --filename sc.yaml

    >   storageclass.storage.k8s.io "manila-cephfs-share" deleted


            sleep 10

            kubectl \
                --kubeconfig "${HOME}/config" \
                delete \
                    --filename deployments.yaml

    >   deployment.apps "manila-provisioner" deleted


            kubectl \
                --kubeconfig "${HOME}/config" \
                delete \
                    --filename rbac.yaml

    >   serviceaccount "manila-provisioner" deleted
    >   clusterrole.rbac.authorization.k8s.io "manila-provisioner-runner" deleted
    >   clusterrolebinding.rbac.authorization.k8s.io "manila-provisioner-role" deleted

        popd
    popd



