#
# <meta:header>
#   <meta:licence>
#     Copyright (c) 2020, ROE (http://www.roe.ac.uk/)
#
#     This information is free software: you can redistribute it and/or modify
#     it under the terms of the GNU General Public License as published by
#     the Free Software Foundation, either version 3 of the License, or
#     (at your option) any later version.
#
#     This information is distributed in the hope that it will be useful,
#     but WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#     GNU General Public License for more details.
#
#     You should have received a copy of the GNU General Public License
#     along with this program.  If not, see <http://www.gnu.org/licenses/>.
#   </meta:licence>
# </meta:header>
#
#

    # Follow on from 20200629-04-cephfs-router
    # Based on example from StackHPC
    # https://github.com/RSE-Cambridge/iris-magnum/tree/master/manila-cephfs-pvc

    # StackHPC example is based on manila-provisioner example.
    # https://github.com/kubernetes/cloud-provider-openstack/tree/master/examples/manila-provisioner/cephfs
    # ... which is no longer available.

    # ... replaced by manila-csi-plugin
    # https://github.com/kubernetes/cloud-provider-openstack/tree/master/examples/manila-csi-plugin



# -----------------------------------------------------
# Create a container to work with.
#[user@desktop]

    source "${HOME}/aglais.env"

    podman run \
        --rm \
        --tty \
        --interactive \
        --name terraformer \
        --hostname terraformer \
        --volume "${HOME}/clouds.yaml:/etc/openstack/clouds.yaml:z" \
        --volume "${AGLAIS_CODE}/experiments/zrq/terraform:/terraform:z" \
        atolmis/terraform-client \
        bash


# -----------------------------------------------------
# Set the cloud, credentials and cluster names.
#[user@terraformer]

    cloudname=gaia-prod
    clustername=Tiberius
    keypairname=zrq-gaia-keypair


# -----------------------------------------------------
# Set the Manila API version.
# https://stackoverflow.com/a/58806536
#[user@terraformer]

    export OS_SHARE_API_VERSION=2.51


# -----------------------------------------------------
# Get the cluster config for kubectl.
#[user@terraformer]

    mkdir -p "${HOME}/.kube/${clustername:?}"
    openstack \
        --os-cloud "${cloudname:?}-super" \
        coe cluster config \
            "${clustername:?}" \
                --force \
                --dir "${HOME}/.kube/${clustername:?}"


# -----------------------------------------------------
# Check kubectl can access our cluster.
#[user@terraformer]

    kubectl \
        --kubeconfig "${HOME}/.kube/${clustername:?}/config" \
        cluster-info

    >   Kubernetes master is running at https://128.232.227.203:6443
    >   Heapster is running at https://128.232.227.203:6443/api/v1/namespaces/kube-system/services/heapster/proxy
    >   CoreDNS is running at https://128.232.227.203:6443/api/v1/namespaces/kube-system/services/kube-dns:dns/proxy


# -----------------------------------------------------
# Create the ServiceAccount, ClusterRole and ClusterRoleBinding.
#[user@terraformer]

    kubectl \
        --kubeconfig "${HOME}/.kube/${clustername:?}/config" \
        create \
            --filename /terraform/modules/manila/cephfs-pvc/manila-account.yaml


    >   serviceaccount/manila-provisioner-account created
    >   clusterrole.rbac.authorization.k8s.io/manila-provisioner-role created
    >   clusterrolebinding.rbac.authorization.k8s.io/manila-provisioner-role-binding created


# -----------------------------------------------------
# Create the manila-provisioner Deployment.
#[user@terraformer]

    kubectl \
        --kubeconfig "${HOME}/.kube/${clustername:?}/config" \
        create \
            --filename /terraform/modules/manila/cephfs-pvc/manila-deployment.yaml

    >   deployment.apps/manila-provisioner-deployment created


# -----------------------------------------------------
# Create the manila-cephfs-share StorageClass.
#[user@terraformer]

    kubectl \
        --kubeconfig "${HOME}/.kube/${clustername:?}/config" \
        create \
            --filename /terraform/modules/manila/cephfs-pvc/manila-storage-class.yaml

    >   storageclass.storage.k8s.io/manila-cephfs-storage created


# -----------------------------------------------------
# Create a PersistentVolumeClaim.
#[user@terraformer]

    kubectl \
        --kubeconfig "${HOME}/.kube/${clustername:?}/config" \
        create \
            --filename /terraform/modules/manila/cephfs-pvc/manila-volume-claim-001.yaml


    >   persistentvolumeclaim/manila-volume-claim-001 created


# -----------------------------------------------------
# Check our resources ..
#[user@terraformer]

    kubectl \
        --kubeconfig "${HOME}/.kube/${clustername:?}/config" \
        get ServiceAccount

    >   NAME                         SECRETS   AGE
    >   default                      1         38h
    >   manila-provisioner-account   1         95s


    kubectl \
        --kubeconfig "${HOME}/.kube/${clustername:?}/config" \
        get ClusterRole

    >   NAME                                                                   AGE
    >   ....
    >   ....
    >   magnum:podsecuritypolicy:privileged                                    38h
    >   manila-provisioner-role                                                112s
    >   ....
    >   ....


    kubectl \
        --kubeconfig "${HOME}/.kube/${clustername:?}/config" \
        get ClusterRoleBinding

    >   NAME                                                   AGE
    >   ....
    >   ....
    >   magnum-auto-healer                                     38h
    >   manila-provisioner-role-binding                        2m38s
    >   ....
    >   ....


    kubectl \
        --kubeconfig "${HOME}/.kube/${clustername:?}/config" \
        get Deployment

    >   NAME                            READY   UP-TO-DATE   AVAILABLE   AGE
    >   manila-provisioner-deployment   1/1     1            1           3m4s


    kubectl \
        --kubeconfig "${HOME}/.kube/${clustername:?}/config" \
        get StorageClass

    >   NAME                    PROVISIONER          AGE
    >   manila-cephfs-storage   manila-provisioner   2m42s

    kubectl \
        --kubeconfig "${HOME}/.kube/${clustername:?}/config" \
        get PersistentVolumeClaim

    >   NAME                      STATUS   VOLUME                                     CAPACITY   ACCESS MODES   STORAGECLASS            AGE
    >   manila-volume-claim-001   Bound    pvc-be8964e1-4308-41ed-a67e-9775cd96a6cd   108G       RWX            manila-cephfs-storage   2m34s


# -----------------------------------------------------
# Check our resources ..
#[user@terraformer]

    kubectl \
        --kubeconfig "${HOME}/.kube/${clustername:?}/config" \
        get ServiceAccount \
            manila-provisioner-account \
                --output json

    >   {
    >       "apiVersion": "v1",
    >       "kind": "ServiceAccount",
    >       "metadata": {
    >           "creationTimestamp": "2020-07-01T14:33:34Z",
    >           "name": "manila-provisioner-account",
    >           "namespace": "default",
    >           "resourceVersion": "425780",
    >           "selfLink": "/api/v1/namespaces/default/serviceaccounts/manila-provisioner-account",
    >           "uid": "2db01ea8-e8da-4112-8aeb-0eb4e9d779b5"
    >       },
    >       "secrets": [
    >           {
    >               "name": "manila-provisioner-account-token-hv6cp"
    >           }
    >       ]
    >   }


    kubectl \
        --kubeconfig "${HOME}/.kube/${clustername:?}/config" \
        get ClusterRole \
            manila-provisioner-role \
            --output json

    >   {
    >       "apiVersion": "rbac.authorization.k8s.io/v1",
    >       "kind": "ClusterRole",
    >       "metadata": {
    >           "creationTimestamp": "2020-07-01T14:33:34Z",
    >           "name": "manila-provisioner-role",
    >           "resourceVersion": "425781",
    >           "selfLink": "/apis/rbac.authorization.k8s.io/v1/clusterroles/manila-provisioner-role",
    >           "uid": "e1292965-fc95-48b1-8a7a-b4ac9de06063"
    >       },
    >       "rules": [
    >           {
    >               "apiGroups": [
    >                   ""
    >               ],
    >               "resources": [
    >                   "secrets"
    >               ],
    >               "verbs": [
    >                   "create",
    >                   "get",
    >                   "delete"
    >               ]
    >           },
    >           {
    >               "apiGroups": [
    >                   ""
    >               ],
    >               "resources": [
    >                   "endpoints"
    >               ],
    >               "verbs": [
    >                   "get",
    >                   "create",
    >                   "update",
    >                   "delete"
    >               ]
    >           },
    >           {
    >               "apiGroups": [
    >                   ""
    >               ],
    >               "resources": [
    >                   "persistentvolumes"
    >               ],
    >               "verbs": [
    >                   "get",
    >                   "list",
    >                   "watch",
    >                   "create",
    >                   "delete"
    >               ]
    >           },
    >           {
    >               "apiGroups": [
    >                   ""
    >               ],
    >               "resources": [
    >                   "persistentvolumeclaims"
    >               ],
    >               "verbs": [
    >                   "get",
    >                   "list",
    >                   "watch",
    >                   "update"
    >               ]
    >           },
    >           {
    >               "apiGroups": [
    >                   "storage.k8s.io"
    >               ],
    >               "resources": [
    >                   "storageclasses"
    >               ],
    >               "verbs": [
    >                   "get",
    >                   "list",
    >                   "watch"
    >               ]
    >           },
    >           {
    >               "apiGroups": [
    >                   ""
    >               ],
    >               "resources": [
    >                   "events"
    >               ],
    >               "verbs": [
    >                   "list",
    >                   "watch",
    >                   "create",
    >                   "update",
    >                   "patch"
    >               ]
    >           }
    >       ]
    >   }


    kubectl \
        --kubeconfig "${HOME}/.kube/${clustername:?}/config" \
        get ClusterRoleBinding \
            manila-provisioner-role-binding \
                --output json

    >   {
    >       "apiVersion": "rbac.authorization.k8s.io/v1",
    >       "kind": "ClusterRoleBinding",
    >       "metadata": {
    >           "creationTimestamp": "2020-07-01T14:33:34Z",
    >           "name": "manila-provisioner-role-binding",
    >           "resourceVersion": "425782",
    >           "selfLink": "/apis/rbac.authorization.k8s.io/v1/clusterrolebindings/manila-provisioner-role-binding",
    >           "uid": "9e3696c6-a996-4e64-ac83-0d72293ebce6"
    >       },
    >       "roleRef": {
    >           "apiGroup": "rbac.authorization.k8s.io",
    >           "kind": "ClusterRole",
    >           "name": "manila-provisioner-role"
    >       },
    >       "subjects": [
    >           {
    >               "kind": "ServiceAccount",
    >               "name": "manila-provisioner-account",
    >               "namespace": "default"
    >           }
    >       ]
    >   }


    kubectl \
        --kubeconfig "${HOME}/.kube/${clustername:?}/config" \
        get Deployment \
            manila-provisioner-deployment \
                --output json

    >   {
    >       "apiVersion": "extensions/v1beta1",
    >       "kind": "Deployment",
    >       "metadata": {
    >           "annotations": {
    >               "deployment.kubernetes.io/revision": "1"
    >           },
    >           "creationTimestamp": "2020-07-01T14:33:40Z",
    >           "generation": 1,
    >           "labels": {
    >               "app": "manila-provisioner-app"
    >           },
    >           "name": "manila-provisioner-deployment",
    >           "namespace": "default",
    >           "resourceVersion": "425823",
    >           "selfLink": "/apis/extensions/v1beta1/namespaces/default/deployments/manila-provisioner-deployment",
    >           "uid": "af712cbc-2cbc-49c8-b055-4b396311dddd"
    >       },
    >       "spec": {
    >           "progressDeadlineSeconds": 600,
    >           "replicas": 1,
    >           "revisionHistoryLimit": 10,
    >           "selector": {
    >               "matchLabels": {
    >                   "app": "manila-provisioner-app"
    >               }
    >           },
    >           "strategy": {
    >               "rollingUpdate": {
    >                   "maxSurge": "25%",
    >                   "maxUnavailable": "25%"
    >               },
    >               "type": "RollingUpdate"
    >           },
    >           "template": {
    >               "metadata": {
    >                   "creationTimestamp": null,
    >                   "labels": {
    >                       "app": "manila-provisioner-app"
    >                   }
    >               },
    >               "spec": {
    >                   "containers": [
    >                       {
    >                           "args": [
    >                               "--provisioner=manila-provisioner"
    >                           ],
    >                           "image": "docker.io/k8scloudprovider/manila-provisioner:latest",
    >                           "imagePullPolicy": "IfNotPresent",
    >                           "name": "manila-provisioner",
    >                           "resources": {},
    >                           "terminationMessagePath": "/dev/termination-log",
    >                           "terminationMessagePolicy": "File"
    >                       }
    >                   ],
    >                   "dnsPolicy": "ClusterFirst",
    >                   "restartPolicy": "Always",
    >                   "schedulerName": "default-scheduler",
    >                   "securityContext": {},
    >                   "serviceAccount": "manila-provisioner-account",
    >                   "serviceAccountName": "manila-provisioner-account",
    >                   "terminationGracePeriodSeconds": 30
    >               }
    >           }
    >       },
    >       "status": {
    >           "availableReplicas": 1,
    >           "conditions": [
    >               {
    >                   "lastTransitionTime": "2020-07-01T14:33:43Z",
    >                   "lastUpdateTime": "2020-07-01T14:33:43Z",
    >                   "message": "Deployment has minimum availability.",
    >                   "reason": "MinimumReplicasAvailable",
    >                   "status": "True",
    >                   "type": "Available"
    >               },
    >               {
    >                   "lastTransitionTime": "2020-07-01T14:33:40Z",
    >                   "lastUpdateTime": "2020-07-01T14:33:43Z",
    >                   "message": "ReplicaSet \"manila-provisioner-deployment-7775bd5d9d\" has successfully progressed.",
    >                   "reason": "NewReplicaSetAvailable",
    >                   "status": "True",
    >                   "type": "Progressing"
    >               }
    >           ],
    >           "observedGeneration": 1,
    >           "readyReplicas": 1,
    >           "replicas": 1,
    >           "updatedReplicas": 1
    >       }
    >   }


    kubectl \
        --kubeconfig "${HOME}/.kube/${clustername:?}/config" \
        get StorageClass \
            manila-cephfs-storage \
                --output json

    >   {
    >       "apiVersion": "storage.k8s.io/v1",
    >       "kind": "StorageClass",
    >       "metadata": {
    >           "creationTimestamp": "2020-07-01T14:34:12Z",
    >           "name": "manila-cephfs-storage",
    >           "resourceVersion": "425910",
    >           "selfLink": "/apis/storage.k8s.io/v1/storageclasses/manila-cephfs-storage",
    >           "uid": "d0e66560-8866-4b9f-9217-9554e6c4b2cb"
    >       },
    >       "parameters": {
    >           "backend": "cephfs",
    >           "osSecretName": "os-trustee",
    >           "osSecretNamespace": "kube-system",
    >           "protocol": "CEPHFS",
    >           "type": "cephfsnativetype",
    >           "zones": "nova"
    >       },
    >       "provisioner": "manila-provisioner",
    >       "reclaimPolicy": "Delete",
    >       "volumeBindingMode": "Immediate"
    >   }


    kubectl \
        --kubeconfig "${HOME}/.kube/${clustername:?}/config" \
        get PersistentVolumeClaim \
            manila-volume-claim-001 \
                --output json

    >   {
    >       "apiVersion": "v1",
    >       "kind": "PersistentVolumeClaim",
    >       "metadata": {
    >           "annotations": {
    >               "pv.kubernetes.io/bind-completed": "yes",
    >               "pv.kubernetes.io/bound-by-controller": "yes",
    >               "volume.beta.kubernetes.io/storage-provisioner": "manila-provisioner"
    >           },
    >           "creationTimestamp": "2020-07-01T14:34:49Z",
    >           "finalizers": [
    >               "kubernetes.io/pvc-protection"
    >           ],
    >           "name": "manila-volume-claim-001",
    >           "namespace": "default",
    >           "resourceVersion": "426059",
    >           "selfLink": "/api/v1/namespaces/default/persistentvolumeclaims/manila-volume-claim-001",
    >           "uid": "be8964e1-4308-41ed-a67e-9775cd96a6cd"
    >       },
    >       "spec": {
    >           "accessModes": [
    >               "ReadWriteMany"
    >           ],
    >           "resources": {
    >               "requests": {
    >                   "storage": "100Gi"
    >               }
    >           },
    >           "storageClassName": "manila-cephfs-storage",
    >           "volumeMode": "Filesystem",
    >           "volumeName": "pvc-be8964e1-4308-41ed-a67e-9775cd96a6cd"
    >       },
    >       "status": {
    >           "accessModes": [
    >               "ReadWriteMany"
    >           ],
    >           "capacity": {
    >               "storage": "108G"
    >           },
    >           "phase": "Bound"
    >       }
    >   }


# -----------------------------------------------------
# Deploy our local data test.
#[user@terraformer]

    kubectl \
        --kubeconfig "${HOME}/.kube/${clustername:?}/config" \
        create \
            --filename /terraform/modules/manila/cephfs-pvc/local-data-test.yaml

    >   service/local-data-svc created
    >   error: error parsing /terraform/modules/manila/cephfs-pvc/local-data-test.yaml: error converting YAML to JSON: yaml: line 29: block sequence entries are not allowed in this context

#
# Tools to fix YAML
# https://yaml-multiline.info/
# http://www.yamllint.com/
#

    kubectl \
        --kubeconfig "${HOME}/.kube/${clustername:?}/config" \
        delete \
            service/local-data-svc

    kubectl \
        --kubeconfig "${HOME}/.kube/${clustername:?}/config" \
        delete \
            pod/local-data-pod

    kubectl \
        --kubeconfig "${HOME}/.kube/${clustername:?}/config" \
        create \
            --filename /terraform/modules/manila/cephfs-pvc/local-data-test.yaml

    >   service/local-data-svc created
    >   pod/local-data-pod created


# -----------------------------------------------------
# Get the Pod and Service details.
#[user@terraformer]

    kubectl \
        --kubeconfig "${HOME}/.kube/${clustername:?}/config" \
        get Pod \
            local-data-pod \
                --output json

    >   {
    >       "apiVersion": "v1",
    >       "kind": "Pod",
    >       "metadata": {
    >           "creationTimestamp": "2020-07-01T15:19:55Z",
    >           "labels": {
    >               "app": "local-data-app"
    >           },
    >           "name": "local-data-pod",
    >           "namespace": "default",
    >           "resourceVersion": "434643",
    >           "selfLink": "/api/v1/namespaces/default/pods/local-data-pod",
    >           "uid": "059bdc10-befa-40db-985e-09344f3f1ebf"
    >       },
    >       "spec": {
    >           "containers": [
    >               {
    >                   "image": "nginx",
    >                   "imagePullPolicy": "Always",
    >                   "name": "webserver",
    >                   "resources": {},
    >                   "terminationMessagePath": "/dev/termination-log",
    >                   "terminationMessagePolicy": "File",
    >                   "volumeMounts": [
    >                       {
    >                           "mountPath": "/usr/share/nginx/html",
    >                           "name": "local-data-vol"
    >                       },
    >                       {
    >                           "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
    >                           "name": "default-token-cnrz8",
    >                           "readOnly": true
    >                       }
    >                   ]
    >               },
    >               {
    >                   "args": [
    >                       "-c",
    >                       "while true; do date \u003e\u003e /data/date.txt; sleep 1; done"
    >                   ],
    >                   "command": [
    >                       "/bin/sh"
    >                   ],
    >                   "image": "debian",
    >                   "imagePullPolicy": "Always",
    >                   "name": "logger",
    >                   "resources": {},
    >                   "terminationMessagePath": "/dev/termination-log",
    >                   "terminationMessagePolicy": "File",
    >                   "volumeMounts": [
    >                       {
    >                           "mountPath": "/data",
    >                           "name": "local-data-vol"
    >                       },
    >                       {
    >                           "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
    >                           "name": "default-token-cnrz8",
    >                           "readOnly": true
    >                       }
    >                   ]
    >               }
    >           ],
    >           "dnsPolicy": "ClusterFirst",
    >           "enableServiceLinks": true,
    >           "nodeName": "tiberius-alfjmzar3cyv-node-0",
    >           "restartPolicy": "Always",
    >           "schedulerName": "default-scheduler",
    >           "securityContext": {},
    >           "serviceAccount": "default",
    >           "serviceAccountName": "default",
    >           "terminationGracePeriodSeconds": 30,
    >           "tolerations": [
    >               {
    >                   "effect": "NoExecute",
    >                   "key": "node.kubernetes.io/not-ready",
    >                   "operator": "Exists",
    >                   "tolerationSeconds": 300
    >               },
    >               {
    >                   "effect": "NoExecute",
    >                   "key": "node.kubernetes.io/unreachable",
    >                   "operator": "Exists",
    >                   "tolerationSeconds": 300
    >               }
    >           ],
    >           "volumes": [
    >               {
    >                   "emptyDir": {},
    >                   "name": "local-data-vol"
    >               },
    >               {
    >                   "name": "default-token-cnrz8",
    >                   "secret": {
    >                       "defaultMode": 420,
    >                       "secretName": "default-token-cnrz8"
    >                   }
    >               }
    >           ]
    >       },
    >       "status": {
    >           "conditions": [
    >               {
    >                   "lastProbeTime": null,
    >                   "lastTransitionTime": "2020-07-01T15:19:55Z",
    >                   "status": "True",
    >                   "type": "Initialized"
    >               },
    >               {
    >                   "lastProbeTime": null,
    >                   "lastTransitionTime": "2020-07-01T15:20:12Z",
    >                   "status": "True",
    >                   "type": "Ready"
    >               },
    >               {
    >                   "lastProbeTime": null,
    >                   "lastTransitionTime": "2020-07-01T15:20:12Z",
    >                   "status": "True",
    >                   "type": "ContainersReady"
    >               },
    >               {
    >                   "lastProbeTime": null,
    >                   "lastTransitionTime": "2020-07-01T15:19:55Z",
    >                   "status": "True",
    >                   "type": "PodScheduled"
    >               }
    >           ],
    >           "containerStatuses": [
    >               {
    >                   "containerID": "docker://9fe278c62ce7ff698a6da60e1eb05e38b525ab22815c314064ae8fa8eae04170",
    >                   "image": "docker.io/debian:latest",
    >                   "imageID": "docker-pullable://docker.io/debian@sha256:46d659005ca1151087efa997f1039ae45a7bf7a2cbbe2d17d3dcbda632a3ee9a",
    >                   "lastState": {},
    >                   "name": "logger",
    >                   "ready": true,
    >                   "restartCount": 0,
    >                   "state": {
    >                       "running": {
    >                           "startedAt": "2020-07-01T15:20:11Z"
    >                       }
    >                   }
    >               },
    >               {
    >                   "containerID": "docker://c5fdfa55fe93be59f5ea45bac8b4e72f68b19bde30b196375fbefc9da0279c19",
    >                   "image": "docker.io/nginx:latest",
    >                   "imageID": "docker-pullable://docker.io/nginx@sha256:21f32f6c08406306d822a0e6e8b7dc81f53f336570e852e25fbe1e3e3d0d0133",
    >                   "lastState": {},
    >                   "name": "webserver",
    >                   "ready": true,
    >                   "restartCount": 0,
    >                   "state": {
    >                       "running": {
    >                           "startedAt": "2020-07-01T15:20:04Z"
    >                       }
    >                   }
    >               }
    >           ],
    >           "hostIP": "10.0.0.78",
    >           "phase": "Running",
    >           "podIP": "10.100.1.35",
    >           "qosClass": "BestEffort",
    >           "startTime": "2020-07-01T15:19:55Z"
    >       }
    >   }


    kubectl \
        --kubeconfig "${HOME}/.kube/${clustername:?}/config" \
        get Service \
            local-data-svc \
                --output json

    >   {
    >       "apiVersion": "v1",
    >       "kind": "Service",
    >       "metadata": {
    >           "creationTimestamp": "2020-07-01T15:19:55Z",
    >           "labels": {
    >               "app": "local-data-app"
    >           },
    >           "name": "local-data-svc",
    >           "namespace": "default",
    >           "resourceVersion": "434580",
    >           "selfLink": "/api/v1/namespaces/default/services/local-data-svc",
    >           "uid": "6d29b12d-4d17-4b72-b408-17b2bbf48fe0"
    >       },
    >       "spec": {
    >           "clusterIP": "10.254.209.41",
    >           "ports": [
    >               {
    >                   "port": 8000,
    >                   "protocol": "TCP",
    >                   "targetPort": 80
    >               }
    >           ],
    >           "selector": {
    >               "app": "local-data-app"
    >           },
    >           "sessionAffinity": "None",
    >           "type": "ClusterIP"
    >       },
    >       "status": {
    >           "loadBalancer": {}
    >       }
    >   }




# -----------------------------------------------------
# -----------------------------------------------------
# Setup a port forwarding proxy.
#[user@desktop]

    source "${HOME}/aglais.env"

    podman run \
        --rm \
        --tty \
        --interactive \
        --publish 8000-8007 \
        --name kubectl-proxy \
        --hostname kubectl-proxy \
        --volume "${HOME}/clouds.yaml:/etc/openstack/clouds.yaml:z" \
        --volume "${AGLAIS_CODE}/experiments/zrq/terraform:/terraform:z" \
        atolmis/terraform-client \
        bash


# -----------------------------------------------------
# Set the cloud, credentials and cluster names.
#[user@kubectl-proxy]

    cloudname=gaia-prod
    clustername=Tiberius

# -----------------------------------------------------
# Get the cluster config for kubectl.
#[user@kubectl-proxy]

    mkdir -p "${HOME}/.kube/${clustername:?}"
    openstack \
        --os-cloud "${cloudname:?}-super" \
        coe cluster config \
            "${clustername:?}" \
                --force \
                --dir "${HOME}/.kube/${clustername:?}"

# -----------------------------------------------------
# Setup a port forwarding proxy.
#[user@kubectl-proxy]

    kubectl \
        --kubeconfig "${HOME}/.kube/${clustername:?}/config" \
        port-forward \
            --address 0.0.0.0 \
            svc/local-data-svc \
                8000

    >   Forwarding from 0.0.0.0:8000 -> 80
    >
    >   Handling connection for 8000
    >   Handling connection for 8000
    >   Handling connection for 8000
    >   Handling connection for 8000
    >   ....
    >   ....

    # I'm guessing the '80' is the port 80 on the target Pod that the Service points to.
    # Which implies a Service is an abstract thing that points to a port on a real Pod.

    # Issues with dropped connections.
    # https://github.com/kubernetes/kubernetes/issues/74551


# -----------------------------------------------------
# -----------------------------------------------------
# Get the mapped port number.
#[user@desktop]

    proxyport=$(
        podman inspect \
            kubectl-proxy \
        | jq -r '
            .[0]
          | .NetworkSettings.Ports[]
          | select(.containerPort == 8000)
          | .hostPort
          '
        )

    echo "Proxy port [${proxyport}]"

# -----------------------------------------------------
# Get the data file.
#[user@desktop]

    curl --silent "http://localhost:$((proxyport))/date.txt" | head

    >   Wed Jul  1 15:20:11 UTC 2020
    >   Wed Jul  1 15:20:12 UTC 2020
    >   Wed Jul  1 15:20:13 UTC 2020
    >   Wed Jul  1 15:20:14 UTC 2020
    >   ....
    >   ....


    curl --silent "http://localhost:$((proxyport))/date.txt" | tail

    >   ....
    >   ....
    >   Wed Jul  1 16:32:49 UTC 2020
    >   Wed Jul  1 16:32:50 UTC 2020
    >   Wed Jul  1 16:32:51 UTC 2020



# -----------------------------------------------------
# Deploy our shared data test.
#[user@terraformer]

    kubectl \
        --kubeconfig "${HOME}/.kube/${clustername:?}/config" \
        create \
            --filename /terraform/modules/manila/cephfs-pvc/shared-data-test.yaml

    >   service/shared-data-svc created
    >   error: error parsing /terraform/modules/manila/cephfs-pvc/shared-data-test.yaml: error converting YAML to JSON: yaml: line 42: did not find expected key

    # Used yamllint to fix syntax errors

    >   service/shared-data-svc unchanged
    >   deployment.apps/shared-data-deployment created


# -----------------------------------------------------
# Get the Service and Deployment details.
#[user@terraformer]

    kubectl \
        --kubeconfig "${HOME}/.kube/${clustername:?}/config" \
        get \
            service/shared-data-svc \
                --output json

    >   {
    >       "apiVersion": "v1",
    >       "kind": "Service",
    >       "metadata": {
    >           "annotations": {
    >               "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"shared-data-app\"},\"name\":\"shared-data-svc\",\"namespace\":\"default\"},\"spec\":{\"ports\":[{\"port\":8001,\"targetPort\":80}],\"selector\":{\"app\":\"shared-data-app\"}}}\n"
    >           },
    >           "creationTimestamp": "2020-07-01T18:05:31Z",
    >           "labels": {
    >               "app": "shared-data-app"
    >           },
    >           "name": "shared-data-svc",
    >           "namespace": "default",
    >           "resourceVersion": "523557",
    >           "selfLink": "/api/v1/namespaces/default/services/shared-data-svc",
    >           "uid": "bffeb02b-6caa-4633-8ae6-72ded02bc43c"
    >       },
    >       "spec": {
    >           "clusterIP": "10.254.0.236",
    >           "ports": [
    >               {
    >                   "port": 8001,
    >                   "protocol": "TCP",
    >                   "targetPort": 80
    >               }
    >           ],
    >           "selector": {
    >               "app": "shared-data-app"
    >           },
    >           "sessionAffinity": "None",
    >           "type": "ClusterIP"
    >       },
    >       "status": {
    >           "loadBalancer": {}
    >       }
    >   }


    kubectl \
        --kubeconfig "${HOME}/.kube/${clustername:?}/config" \
        get \
            deployment.apps/shared-data-deployment \
                --output json

    >   {
    >       "apiVersion": "apps/v1",
    >       "kind": "Deployment",
    >       "metadata": {
    >           "annotations": {
    >               "deployment.kubernetes.io/revision": "1",
    >               "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"shared-data-app\"},\"name\":\"shared-data-deployment\",\"namespace\":\"default\"},\"spec\":{\"replicas\":1,\"selector\":{\"matchLabels\":{\"app\":\"shared-data-app\"}},\"template\":{\"metadata\":{\"labels\":{\"app\":\"shared-data-app\"}},\"spec\":{\"containers\":[{\"image\":\"nginx\",\"name\":\"webserver\",\"volumeMounts\":[{\"mountPath\":\"/usr/share/nginx/html\",\"name\":\"shared-data-vol\"}]},{\"args\":[\"-c\",\"while true; do date \\u003e\\u003e /data/date.txt; sleep 1; done\"],\"command\":[\"/bin/sh\"],\"image\":\"debian\",\"name\":\"logger\",\"volumeMounts\":[{\"mountPath\":\"/data\",\"name\":\"shared-data-vol\"}]}],\"volumes\":[{\"name\":\"shared-data-vol\",\"persistentVolumeClaim\":{\"claimName\":\"manila-cephfs-pvc\",\"readOnly\":false}}]}}}}\n"
    >           },
    >           "creationTimestamp": "2020-07-01T23:10:16Z",
    >           "generation": 1,
    >           "labels": {
    >               "app": "shared-data-app"
    >           },
    >           "name": "shared-data-deployment",
    >           "namespace": "default",
    >           "resourceVersion": "523379",
    >           "selfLink": "/apis/apps/v1/namespaces/default/deployments/shared-data-deployment",
    >           "uid": "3545c647-c99d-404f-b019-71ff66efd6ef"
    >       },
    >       "spec": {
    >           "progressDeadlineSeconds": 600,
    >           "replicas": 1,
    >           "revisionHistoryLimit": 10,
    >           "selector": {
    >               "matchLabels": {
    >                   "app": "shared-data-app"
    >               }
    >           },
    >           "strategy": {
    >               "rollingUpdate": {
    >                   "maxSurge": "25%",
    >                   "maxUnavailable": "25%"
    >               },
    >               "type": "RollingUpdate"
    >           },
    >           "template": {
    >               "metadata": {
    >                   "creationTimestamp": null,
    >                   "labels": {
    >                       "app": "shared-data-app"
    >                   }
    >               },
    >               "spec": {
    >                   "containers": [
    >                       {
    >                           "image": "nginx",
    >                           "imagePullPolicy": "Always",
    >                           "name": "webserver",
    >                           "resources": {},
    >                           "terminationMessagePath": "/dev/termination-log",
    >                           "terminationMessagePolicy": "File",
    >                           "volumeMounts": [
    >                               {
    >                                   "mountPath": "/usr/share/nginx/html",
    >                                   "name": "shared-data-vol"
    >                               }
    >                           ]
    >                       },
    >                       {
    >                           "args": [
    >                               "-c",
    >                               "while true; do date \u003e\u003e /data/date.txt; sleep 1; done"
    >                           ],
    >                           "command": [
    >                               "/bin/sh"
    >                           ],
    >                           "image": "debian",
    >                           "imagePullPolicy": "Always",
    >                           "name": "logger",
    >                           "resources": {},
    >                           "terminationMessagePath": "/dev/termination-log",
    >                           "terminationMessagePolicy": "File",
    >                           "volumeMounts": [
    >                               {
    >                                   "mountPath": "/data",
    >                                   "name": "shared-data-vol"
    >                               }
    >                           ]
    >                       }
    >                   ],
    >                   "dnsPolicy": "ClusterFirst",
    >                   "restartPolicy": "Always",
    >                   "schedulerName": "default-scheduler",
    >                   "securityContext": {},
    >                   "terminationGracePeriodSeconds": 30,
    >                   "volumes": [
    >                       {
    >                           "name": "shared-data-vol",
    >                           "persistentVolumeClaim": {
    >                               "claimName": "manila-cephfs-pvc"
    >                           }
    >                       }
    >                   ]
    >               }
    >           }
    >       },
    >       "status": {
    >           "conditions": [
    >               {
    >                   "lastTransitionTime": "2020-07-01T23:10:16Z",
    >                   "lastUpdateTime": "2020-07-01T23:10:16Z",
    >                   "message": "Deployment does not have minimum availability.",
    >                   "reason": "MinimumReplicasUnavailable",
    >                   "status": "False",
    >                   "type": "Available"
    >               },
    >               {
    >                   "lastTransitionTime": "2020-07-01T23:10:16Z",
    >                   "lastUpdateTime": "2020-07-01T23:10:16Z",
    >                   "message": "ReplicaSet \"shared-data-deployment-747b7b5dfd\" is progressing.",
    >                   "reason": "ReplicaSetUpdated",
    >                   "status": "True",
    >                   "type": "Progressing"
    >               }
    >           ],
    >           "observedGeneration": 1,
    >           "replicas": 1,
    >           "unavailableReplicas": 1,
    >           "updatedReplicas": 1
    >       }
    >   }


# -----------------------------------------------------
# -----------------------------------------------------
# Setup a port forwarding proxy.
#[user@kubectl-proxy]

    kubectl \
        --kubeconfig "${HOME}/.kube/${clustername:?}/config" \
        port-forward \
            --address 0.0.0.0 \
            service/shared-data-svc \
                8001

    >   error: unable to forward port because pod is not running. Current status=Pending


# -----------------------------------------------------
# -----------------------------------------------------
# Simplify the test from a Deployment to a simple Pod
#[user@terraformer]

    kubectl \
        --kubeconfig "${HOME}/.kube/${clustername:?}/config" \
        create \
            --filename /terraform/modules/manila/cephfs-pvc/shared-data-test.yaml

    >   service/shared-data-svc created
    >   pod/shared-data-pod created


# -----------------------------------------------------
# Check the Pod details.
#[user@terraformer]

    kubectl \
        --kubeconfig "${HOME}/.kube/${clustername:?}/config" \
        get \
            pod/shared-data-pod \
                --output json

    >   {
    >       "apiVersion": "v1",
    >       "kind": "Pod",
    >       "metadata": {
    >           "creationTimestamp": "2020-07-01T23:35:58Z",
    >           "labels": {
    >               "app": "shared-data-app"
    >           },
    >           "name": "shared-data-pod",
    >           "namespace": "default",
    >           "resourceVersion": "528289",
    >           "selfLink": "/api/v1/namespaces/default/pods/shared-data-pod",
    >           "uid": "c0b31140-018e-49ed-b050-785fe8cba6f2"
    >       },
    >       "spec": {
    >           "containers": [
    >               {
    >                   "image": "nginx",
    >                   "imagePullPolicy": "Always",
    >                   "name": "webserver",
    >                   "resources": {},
    >                   "terminationMessagePath": "/dev/termination-log",
    >                   "terminationMessagePolicy": "File",
    >                   "volumeMounts": [
    >                       {
    >                           "mountPath": "/usr/share/nginx/html",
    >                           "name": "shared-data-vol"
    >                       },
    >                       {
    >                           "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
    >                           "name": "default-token-cnrz8",
    >                           "readOnly": true
    >                       }
    >                   ]
    >               },
    >               {
    >                   "args": [
    >                       "-c",
    >                       "while true; do date \u003e\u003e /data/date.txt; sleep 1; done"
    >                   ],
    >                   "command": [
    >                       "/bin/sh"
    >                   ],
    >                   "image": "debian",
    >                   "imagePullPolicy": "Always",
    >                   "name": "logger",
    >                   "resources": {},
    >                   "terminationMessagePath": "/dev/termination-log",
    >                   "terminationMessagePolicy": "File",
    >                   "volumeMounts": [
    >                       {
    >                           "mountPath": "/data",
    >                           "name": "shared-data-vol"
    >                       },
    >                       {
    >                           "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
    >                           "name": "default-token-cnrz8",
    >                           "readOnly": true
    >                       }
    >                   ]
    >               }
    >           ],
    >           "dnsPolicy": "ClusterFirst",
    >           "enableServiceLinks": true,
    >           "restartPolicy": "Always",
    >           "schedulerName": "default-scheduler",
    >           "securityContext": {},
    >           "serviceAccount": "default",
    >           "serviceAccountName": "default",
    >           "terminationGracePeriodSeconds": 30,
    >           "tolerations": [
    >               {
    >                   "effect": "NoExecute",
    >                   "key": "node.kubernetes.io/not-ready",
    >                   "operator": "Exists",
    >                   "tolerationSeconds": 300
    >               },
    >               {
    >                   "effect": "NoExecute",
    >                   "key": "node.kubernetes.io/unreachable",
    >                   "operator": "Exists",
    >                   "tolerationSeconds": 300
    >               }
    >           ],
    >           "volumes": [
    >               {
    >                   "name": "shared-data-vol",
    >                   "persistentVolumeClaim": {
    >                       "claimName": "manila-cephfs-pvc"
    >                   }
    >               },
    >               {
    >                   "name": "default-token-cnrz8",
    >                   "secret": {
    >                       "defaultMode": 420,
    >                       "secretName": "default-token-cnrz8"
    >                   }
    >               }
    >           ]
    >       },
    >       "status": {
    >           "conditions": [
    >               {
    >                   "lastProbeTime": null,
    >                   "lastTransitionTime": "2020-07-01T23:35:58Z",
    >                   "message": "persistentvolumeclaim \"manila-cephfs-pvc\" not found",
    >                   "reason": "Unschedulable",
    >                   "status": "False",
    >                   "type": "PodScheduled"
    >               }
    >           ],
    >           "phase": "Pending",
    >           "qosClass": "BestEffort"
    >       }
    >   }

    #
    # Oops
    # "message": "persistentvolumeclaim \"manila-cephfs-pvc\" not found",
    # Got the name wrong :-(
    #

# -----------------------------------------------------
# Fix the volume claim name.
#[user@terraformer]

    kubectl \
        --kubeconfig "${HOME}/.kube/${clustername:?}/config" \
        delete \
            pod/shared-data-pod

    >   pod "shared-data-pod" deleted


    kubectl \
        --kubeconfig "${HOME}/.kube/${clustername:?}/config" \
        delete \
            persistentvolumeclaim/manila-volume-claim-001

    >   persistentvolumeclaim "manila-volume-claim-001" deleted


    kubectl \
        --kubeconfig "${HOME}/.kube/${clustername:?}/config" \
        create \
            --filename /terraform/modules/manila/cephfs-pvc/manila-volume-claim.yaml

    >   persistentvolumeclaim/manila-volume-claim created


    kubectl \
        --kubeconfig "${HOME}/.kube/${clustername:?}/config" \
        create \
            --filename /terraform/modules/manila/cephfs-pvc/shared-data-test.yaml

    >   pod/shared-data-pod created


# -----------------------------------------------------
# Check the Pod details.
#[user@terraformer]

    kubectl \
        --kubeconfig "${HOME}/.kube/${clustername:?}/config" \
        get \
            pod/shared-data-pod \
                --output json

    >   {
    >       "apiVersion": "v1",
    >       "kind": "Pod",
    >       "metadata": {
    >           "creationTimestamp": "2020-07-01T23:51:39Z",
    >           "labels": {
    >               "app": "shared-data-app"
    >           },
    >           "name": "shared-data-pod",
    >           "namespace": "default",
    >           "resourceVersion": "531356",
    >           "selfLink": "/api/v1/namespaces/default/pods/shared-data-pod",
    >           "uid": "6094b9ac-e63a-46bc-be9e-77f60ad757de"
    >       },
    >       "spec": {
    >           "containers": [
    >               {
    >                   "image": "nginx",
    >                   "imagePullPolicy": "Always",
    >                   "name": "webserver",
    >                   "resources": {},
    >                   "terminationMessagePath": "/dev/termination-log",
    >                   "terminationMessagePolicy": "File",
    >                   "volumeMounts": [
    >                       {
    >                           "mountPath": "/usr/share/nginx/html",
    >                           "name": "shared-data-vol"
    >                       },
    >                       {
    >                           "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
    >                           "name": "default-token-cnrz8",
    >                           "readOnly": true
    >                       }
    >                   ]
    >               },
    >               {
    >                   "args": [
    >                       "-c",
    >                       "while true; do date \u003e\u003e /data/date.txt; sleep 1; done"
    >                   ],
    >                   "command": [
    >                       "/bin/sh"
    >                   ],
    >                   "image": "debian",
    >                   "imagePullPolicy": "Always",
    >                   "name": "logger",
    >                   "resources": {},
    >                   "terminationMessagePath": "/dev/termination-log",
    >                   "terminationMessagePolicy": "File",
    >                   "volumeMounts": [
    >                       {
    >                           "mountPath": "/data",
    >                           "name": "shared-data-vol"
    >                       },
    >                       {
    >                           "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
    >                           "name": "default-token-cnrz8",
    >                           "readOnly": true
    >                       }
    >                   ]
    >               }
    >           ],
    >           "dnsPolicy": "ClusterFirst",
    >           "enableServiceLinks": true,
    >           "nodeName": "tiberius-alfjmzar3cyv-node-0",
    >           "restartPolicy": "Always",
    >           "schedulerName": "default-scheduler",
    >           "securityContext": {},
    >           "serviceAccount": "default",
    >           "serviceAccountName": "default",
    >           "terminationGracePeriodSeconds": 30,
    >           "tolerations": [
    >               {
    >                   "effect": "NoExecute",
    >                   "key": "node.kubernetes.io/not-ready",
    >                   "operator": "Exists",
    >                   "tolerationSeconds": 300
    >               },
    >               {
    >                   "effect": "NoExecute",
    >                   "key": "node.kubernetes.io/unreachable",
    >                   "operator": "Exists",
    >                   "tolerationSeconds": 300
    >               }
    >           ],
    >           "volumes": [
    >               {
    >                   "name": "shared-data-vol",
    >                   "persistentVolumeClaim": {
    >                       "claimName": "manila-volume-claim"
    >                   }
    >               },
    >               {
    >                   "name": "default-token-cnrz8",
    >                   "secret": {
    >                       "defaultMode": 420,
    >                       "secretName": "default-token-cnrz8"
    >                   }
    >               }
    >           ]
    >       },
    >       "status": {
    >           "conditions": [
    >               {
    >                   "lastProbeTime": null,
    >                   "lastTransitionTime": "2020-07-01T23:51:39Z",
    >                   "status": "True",
    >                   "type": "Initialized"
    >               },
    >               {
    >                   "lastProbeTime": null,
    >                   "lastTransitionTime": "2020-07-01T23:51:47Z",
    >                   "status": "True",
    >                   "type": "Ready"
    >               },
    >               {
    >                   "lastProbeTime": null,
    >                   "lastTransitionTime": "2020-07-01T23:51:47Z",
    >                   "status": "True",
    >                   "type": "ContainersReady"
    >               },
    >               {
    >                   "lastProbeTime": null,
    >                   "lastTransitionTime": "2020-07-01T23:51:39Z",
    >                   "status": "True",
    >                   "type": "PodScheduled"
    >               }
    >           ],
    >           "containerStatuses": [
    >               {
    >                   "containerID": "docker://516ca2ce2fcaff3bf95e98d10d8480685fa4bcc6846dd61fc0092b2ff551e013",
    >                   "image": "docker.io/debian:latest",
    >                   "imageID": "docker-pullable://docker.io/debian@sha256:46d659005ca1151087efa997f1039ae45a7bf7a2cbbe2d17d3dcbda632a3ee9a",
    >                   "lastState": {},
    >                   "name": "logger",
    >                   "ready": true,
    >                   "restartCount": 0,
    >                   "state": {
    >                       "running": {
    >                           "startedAt": "2020-07-01T23:51:47Z"
    >                       }
    >                   }
    >               },
    >               {
    >                   "containerID": "docker://5c0edffb70880c1e3958222b1a1351048ad80ec36b25983e66b55b8a154f4a5f",
    >                   "image": "docker.io/nginx:latest",
    >                   "imageID": "docker-pullable://docker.io/nginx@sha256:21f32f6c08406306d822a0e6e8b7dc81f53f336570e852e25fbe1e3e3d0d0133",
    >                   "lastState": {},
    >                   "name": "webserver",
    >                   "ready": true,
    >                   "restartCount": 0,
    >                   "state": {
    >                       "running": {
    >                           "startedAt": "2020-07-01T23:51:44Z"
    >                       }
    >                   }
    >               }
    >           ],
    >           "hostIP": "10.0.0.78",
    >           "phase": "Running",
    >           "podIP": "10.100.1.36",
    >           "qosClass": "BestEffort",
    >           "startTime": "2020-07-01T23:51:39Z"
    >       }
    >   }

    # Looks good :-)

    >   ....
    >   "state": {
    >       "running": {
    >           "startedAt": "2020-07-01T23:51:44Z"
    >       }
    >   ....


# -----------------------------------------------------
# -----------------------------------------------------
# Setup a port forwarding proxy.
#[user@kubectl-proxy]

    kubectl \
        --kubeconfig "${HOME}/.kube/${clustername:?}/config" \
        port-forward \
            --address 0.0.0.0 \
            service/shared-data-svc \
                8001
    >   Forwarding from 0.0.0.0:8001 -> 80
    >   ....
    >   Handling connection for 8001
    >   Handling connection for 8001


# -----------------------------------------------------
# -----------------------------------------------------
# Get the mapped port number.
#[user@desktop]

    proxyport=$(
        podman inspect \
            kubectl-proxy \
        | jq -r '
            .[0]
          | .NetworkSettings.Ports[]
          | select(.containerPort == 8001)
          | .hostPort
          '
        )

    echo "Proxy port [${proxyport:?}]"

    >   Proxy port [45463]


# -----------------------------------------------------
# Get the data file.
#[user@desktop]

    curl --silent "http://localhost:$((proxyport))/date.txt" | head

    >   Wed Jul  1 23:51:47 UTC 2020
    >   Wed Jul  1 23:51:48 UTC 2020
    >   Wed Jul  1 23:51:49 UTC 2020
    >   Wed Jul  1 23:51:50 UTC 2020
    >   ....
    >   ....


    curl --silent "http://localhost:$((proxyport))/date.txt" | tail

    >   ....
    >   ....
    >   Wed Jul  1 23:56:16 UTC 2020
    >   Wed Jul  1 23:56:17 UTC 2020
    >   Wed Jul  1 23:56:18 UTC 2020
    >   Wed Jul  1 23:56:19 UTC 2020


# -----------------------------------------------------
# Check the VolumeClaim details.
#[user@terraformer]

    kubectl \
        --kubeconfig "${HOME}/.kube/${clustername:?}/config" \
        get \
            persistentvolumeclaim/manila-volume-claim \
                --output json

    >   {
    >       "apiVersion": "v1",
    >       "kind": "PersistentVolumeClaim",
    >       "metadata": {
    >           "annotations": {
    >               "pv.kubernetes.io/bind-completed": "yes",
    >               "pv.kubernetes.io/bound-by-controller": "yes",
    >               "volume.beta.kubernetes.io/storage-provisioner": "manila-provisioner"
    >           },
    >           "creationTimestamp": "2020-07-01T23:45:17Z",
    >           "finalizers": [
    >               "kubernetes.io/pvc-protection"
    >           ],
    >           "name": "manila-volume-claim",
    >           "namespace": "default",
    >           "resourceVersion": "530123",
    >           "selfLink": "/api/v1/namespaces/default/persistentvolumeclaims/manila-volume-claim",
    >           "uid": "aae73a5a-0ad0-4af9-9f12-c38150b3076a"
    >       },
    >       "spec": {
    >           "accessModes": [
    >               "ReadWriteMany"
    >           ],
    >           "resources": {
    >               "requests": {
    >                   "storage": "100Gi"
    >               }
    >           },
    >           "storageClassName": "manila-cephfs-storage",
    >           "volumeMode": "Filesystem",
    >           "volumeName": "pvc-aae73a5a-0ad0-4af9-9f12-c38150b3076a"
    >       },
    >       "status": {
    >           "accessModes": [
    >               "ReadWriteMany"
    >           ],
    >           "capacity": {
    >               "storage": "108G"
    >           },
    >           "phase": "Bound"
    >       }
    >   }

# -----------------------------------------------------
# List our shares.
#[user@terraformer]

    openstack \
        --os-cloud "${cloudname:?}" \
        share list


    >   +--------------------------------------+------------------------------------------+------+-------------+-----------+-----------+------------------+------+-------------------+
    >   | ID                                   | Name                                     | Size | Share Proto | Status    | Is Public | Share Type Name  | Host | Availability Zone |
    >   +--------------------------------------+------------------------------------------+------+-------------+-----------+-----------+------------------+------+-------------------+
    >   | 7c835619-7abc-4423-a15a-6f1624d532e9 | pvc-aae73a5a-0ad0-4af9-9f12-c38150b3076a |  108 | CEPHFS      | available | False     | cephfsnativetype |      | nova              |
    >   | 8bc0c17b-b03d-495e-8df6-8d30dce197ee | pvc-c67df1b8-0730-48de-940c-92a1a0bb7c56 |  108 | CEPHFS      | available | False     | cephfsnativetype |      | nova              |
    >   +--------------------------------------+------------------------------------------+------+-------------+-----------+-----------+------------------+------+-------------------+


# -----------------------------------------------------
# Get the share details.
#[user@openstacker]

    sharename=pvc-aae73a5a

    shareid=$(
        openstack \
        --os-cloud "${cloudname:?}" \
            share list \
                --format json \
        | jq -r '.[] | select(.Name | test("^'${sharename:?}'")) | .ID'
        )

    openstack \
        --os-cloud "${cloudname:?}" \
        share show \
            "${shareid}" \
                --format json \
    | jq '.'

    >   {
    >     "access_rules_status": "active",
    >     "availability_zone": "nova",
    >     "create_share_from_snapshot_support": false,
    >     "created_at": "2020-07-01T23:45:18.000000",
    >     "description": null,
    >     "export_locations": "\npath = 10.206.1.5:6789,10.206.1.6:6789,10.206.1.7:6789:/volumes/_nogroup/33afb119-d8c4-4dbc-9448-f240b6d77cb5\nid = b5ee54cf-eabc-4064-bb69-375368a9c398\npreferred = False",
    >     "has_replicas": false,
    >     "id": "7c835619-7abc-4423-a15a-6f1624d532e9",
    >     "is_public": false,
    >     "mount_snapshot_support": false,
    >     "name": "pvc-aae73a5a-0ad0-4af9-9f12-c38150b3076a",
    >     "project_id": "21b4ae3a2ea44bc5a9c14005ed2963af",
    >     "properties": {
    >       "kubernetes.io/created-for/pv/name": "pvc-aae73a5a-0ad0-4af9-9f12-c38150b3076a",
    >       "kubernetes.io/created-for/pvc/namespace": "default",
    >       "kubernetes.io/created-for/pvc/name": "manila-volume-claim"
    >     },
    >     "replication_type": null,
    >     "revert_to_snapshot_support": false,
    >     "share_group_id": null,
    >     "share_network_id": null,
    >     "share_proto": "CEPHFS",
    >     "share_type": "5d0f58c5-ed21-4e1f-91bb-fe1a49deb5d8",
    >     "share_type_name": "cephfsnativetype",
    >     "size": 108,
    >     "snapshot_id": null,
    >     "snapshot_support": false,
    >     "source_share_group_snapshot_member_id": null,
    >     "status": "available",
    >     "task_state": null,
    >     "user_id": "98169f87de174ad4ac98c32e59646488",
    >     "volume_type": "cephfsnativetype"
    >   }


# -----------------------------------------------------
# Delete the Pod.
#[user@terraformer]

    kubectl \
        --kubeconfig "${HOME}/.kube/${clustername:?}/config" \
        delete \
            pod/shared-data-pod

    >   pod "shared-data-pod" deleted


# -----------------------------------------------------
# Check the VolumeClaim details.
#[user@terraformer]

    kubectl \
        --kubeconfig "${HOME}/.kube/${clustername:?}/config" \
        get \
            persistentvolumeclaim/manila-volume-claim \
                --output json

    >   {
    >       "apiVersion": "v1",
    >       "kind": "PersistentVolumeClaim",
    >       "metadata": {
    >           "annotations": {
    >               "pv.kubernetes.io/bind-completed": "yes",
    >               "pv.kubernetes.io/bound-by-controller": "yes",
    >               "volume.beta.kubernetes.io/storage-provisioner": "manila-provisioner"
    >           },
    >           "creationTimestamp": "2020-07-01T23:45:17Z",
    >           "finalizers": [
    >               "kubernetes.io/pvc-protection"
    >           ],
    >           "name": "manila-volume-claim",
    >           "namespace": "default",
    >           "resourceVersion": "530123",
    >           "selfLink": "/api/v1/namespaces/default/persistentvolumeclaims/manila-volume-claim",
    >           "uid": "aae73a5a-0ad0-4af9-9f12-c38150b3076a"
    >       },
    >       "spec": {
    >           "accessModes": [
    >               "ReadWriteMany"
    >           ],
    >           "resources": {
    >               "requests": {
    >                   "storage": "100Gi"
    >               }
    >           },
    >           "storageClassName": "manila-cephfs-storage",
    >           "volumeMode": "Filesystem",
    >           "volumeName": "pvc-aae73a5a-0ad0-4af9-9f12-c38150b3076a"
    >       },
    >       "status": {
    >           "accessModes": [
    >               "ReadWriteMany"
    >           ],
    >           "capacity": {
    >               "storage": "108G"
    >           },
    >           "phase": "Bound"
    >       }
    >   }


# -----------------------------------------------------
# Create a new Pod.
#[user@terraformer]

    kubectl \
        --kubeconfig "${HOME}/.kube/${clustername:?}/config" \
        create \
            --filename /terraform/modules/manila/cephfs-pvc/shared-data-test.yaml

    >   pod/shared-data-pod created
    >   ....


# -----------------------------------------------------
# Check the Pod details.
#[user@terraformer]

    kubectl \
        --kubeconfig "${HOME}/.kube/${clustername:?}/config" \
        get \
            pod/shared-data-pod \
                --output json

    >   {
    >       "apiVersion": "v1",
    >       "kind": "Pod",
    >       "metadata": {
    >           "creationTimestamp": "2020-07-02T00:19:36Z",
    >           "labels": {
    >               "app": "shared-data-app"
    >           },
    >           "name": "shared-data-pod",
    >           "namespace": "default",
    >           "resourceVersion": "536656",
    >           "selfLink": "/api/v1/namespaces/default/pods/shared-data-pod",
    >           "uid": "4c948d70-26d9-4b4c-984f-1ddb5c4a3320"
    >       },
    >       "spec": {
    >           "containers": [
    >               {
    >                   "image": "nginx",
    >                   "imagePullPolicy": "Always",
    >                   "name": "webserver",
    >                   "resources": {},
    >                   "terminationMessagePath": "/dev/termination-log",
    >                   "terminationMessagePolicy": "File",
    >                   "volumeMounts": [
    >                       {
    >                           "mountPath": "/usr/share/nginx/html",
    >                           "name": "shared-data-vol"
    >                       },
    >                       {
    >                           "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
    >                           "name": "default-token-cnrz8",
    >                           "readOnly": true
    >                       }
    >                   ]
    >               },
    >               {
    >                   "args": [
    >                       "-c",
    >                       "while true; do date \u003e\u003e /data/date.txt; sleep 1; done"
    >                   ],
    >                   "command": [
    >                       "/bin/sh"
    >                   ],
    >                   "image": "debian",
    >                   "imagePullPolicy": "Always",
    >                   "name": "logger",
    >                   "resources": {},
    >                   "terminationMessagePath": "/dev/termination-log",
    >                   "terminationMessagePolicy": "File",
    >                   "volumeMounts": [
    >                       {
    >                           "mountPath": "/data",
    >                           "name": "shared-data-vol"
    >                       },
    >                       {
    >                           "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
    >                           "name": "default-token-cnrz8",
    >                           "readOnly": true
    >                       }
    >                   ]
    >               }
    >           ],
    >           "dnsPolicy": "ClusterFirst",
    >           "enableServiceLinks": true,
    >           "nodeName": "tiberius-alfjmzar3cyv-node-0",
    >           "restartPolicy": "Always",
    >           "schedulerName": "default-scheduler",
    >           "securityContext": {},
    >           "serviceAccount": "default",
    >           "serviceAccountName": "default",
    >           "terminationGracePeriodSeconds": 30,
    >           "tolerations": [
    >               {
    >                   "effect": "NoExecute",
    >                   "key": "node.kubernetes.io/not-ready",
    >                   "operator": "Exists",
    >                   "tolerationSeconds": 300
    >               },
    >               {
    >                   "effect": "NoExecute",
    >                   "key": "node.kubernetes.io/unreachable",
    >                   "operator": "Exists",
    >                   "tolerationSeconds": 300
    >               }
    >           ],
    >           "volumes": [
    >               {
    >                   "name": "shared-data-vol",
    >                   "persistentVolumeClaim": {
    >                       "claimName": "manila-volume-claim"
    >                   }
    >               },
    >               {
    >                   "name": "default-token-cnrz8",
    >                   "secret": {
    >                       "defaultMode": 420,
    >                       "secretName": "default-token-cnrz8"
    >                   }
    >               }
    >           ]
    >       },
    >       "status": {
    >           "conditions": [
    >               {
    >                   "lastProbeTime": null,
    >                   "lastTransitionTime": "2020-07-02T00:19:36Z",
    >                   "status": "True",
    >                   "type": "Initialized"
    >               },
    >               {
    >                   "lastProbeTime": null,
    >                   "lastTransitionTime": "2020-07-02T00:19:45Z",
    >                   "status": "True",
    >                   "type": "Ready"
    >               },
    >               {
    >                   "lastProbeTime": null,
    >                   "lastTransitionTime": "2020-07-02T00:19:45Z",
    >                   "status": "True",
    >                   "type": "ContainersReady"
    >               },
    >               {
    >                   "lastProbeTime": null,
    >                   "lastTransitionTime": "2020-07-02T00:19:36Z",
    >                   "status": "True",
    >                   "type": "PodScheduled"
    >               }
    >           ],
    >           "containerStatuses": [
    >               {
    >                   "containerID": "docker://38d9834392876d56740b9097657d2828657f8208fd4f5e41c4e7d63121966b55",
    >                   "image": "docker.io/debian:latest",
    >                   "imageID": "docker-pullable://docker.io/debian@sha256:46d659005ca1151087efa997f1039ae45a7bf7a2cbbe2d17d3dcbda632a3ee9a",
    >                   "lastState": {},
    >                   "name": "logger",
    >                   "ready": true,
    >                   "restartCount": 0,
    >                   "state": {
    >                       "running": {
    >                           "startedAt": "2020-07-02T00:19:44Z"
    >                       }
    >                   }
    >               },
    >               {
    >                   "containerID": "docker://ce398ad28f3de063f439f575e973f0581f381293cd03f9038027dc83e0b6ea06",
    >                   "image": "docker.io/nginx:latest",
    >                   "imageID": "docker-pullable://docker.io/nginx@sha256:21f32f6c08406306d822a0e6e8b7dc81f53f336570e852e25fbe1e3e3d0d0133",
    >                   "lastState": {},
    >                   "name": "webserver",
    >                   "ready": true,
    >                   "restartCount": 0,
    >                   "state": {
    >                       "running": {
    >                           "startedAt": "2020-07-02T00:19:41Z"
    >                       }
    >                   }
    >               }
    >           ],
    >           "hostIP": "10.0.0.78",
    >           "phase": "Running",
    >           "podIP": "10.100.1.37",
    >           "qosClass": "BestEffort",
    >           "startTime": "2020-07-02T00:19:36Z"
    >       }
    >   }


# -----------------------------------------------------
# Get the data file.
#[user@desktop]

    curl --silent "http://localhost:$((proxyport))/date.txt" | head

    >   Wed Jul  1 23:51:47 UTC 2020
    >   Wed Jul  1 23:51:48 UTC 2020
    >   Wed Jul  1 23:51:49 UTC 2020
    >   Wed Jul  1 23:51:50 UTC 2020
    >   ....
    >   ....


    curl --silent "http://localhost:$((proxyport))/date.txt" | tail

    >   ....
    >   ....
    >   Thu Jul  2 00:21:01 UTC 2020
    >   Thu Jul  2 00:21:02 UTC 2020
    >   Thu Jul  2 00:21:03 UTC 2020
    >   Thu Jul  2 00:21:04 UTC 2020

    #
    # The Share continues to live after the Pod is deleted and created.
    # Looking good :-)
    #


