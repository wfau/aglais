#
# <meta:header>
#   <meta:licence>
#     Copyright (c) 2020, ROE (http://www.roe.ac.uk/)
#
#     This information is free software: you can redistribute it and/or modify
#     it under the terms of the GNU General Public License as published by
#     the Free Software Foundation, either version 3 of the License, or
#     (at your option) any later version.
#
#     This information is distributed in the hope that it will be useful,
#     but WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#     GNU General Public License for more details.
#
#     You should have received a copy of the GNU General Public License
#     along with this program.  If not, see <http://www.gnu.org/licenses/>.
#   </meta:licence>
# </meta:header>
#
#


    Created two forks on GitHub.

    Original
    https://github.com/apache/zeppelin

    WFAU fork - shared resource
    https://github.com/wfau/aglais-zeppelin

    Private fork - personal copy.
    https://github.com/Zarquan/aglais-zeppelin


# -----------------------------------------------------
# Add to our project env file.
#[user@desktop]

    cat >> "${HOME}/aglais.env" << EOF
ZEPPELIN_REPO='git@github.com:Zarquan/aglais-zeppelin.git'
ZEPPELIN_HOME="${PROJECTS_ROOT:?}/WFAU/aglais-zeppelin"
ZEPPELIN_CODE="${ZEPPELIN_HOME:?}/github-zrq"
EOF


# -----------------------------------------------------
# Clone our fork.
#[user@desktop]

    source "${HOME}/aglais.env"

    echo "Checking [${ZEPPELIN_HOME:?}]"
    if [ ! -e "${ZEPPELIN_HOME:?}" ]
    then
        echo "Creating [${ZEPPELIN_HOME:?}]"
        mkdir --parents "${ZEPPELIN_HOME:?}"
    fi

    echo "Checking [$(dirname ${ZEPPELIN_CODE:?})]"
    if [ ! -e "$(dirname ${ZEPPELIN_CODE:?})" ]
    then
        echo "Creating [$(dirname ${ZEPPELIN_CODE:?})]"
        mkdir --parents "$(dirname ${ZEPPELIN_CODE:?})"
    fi

    echo "Checking [${ZEPPELIN_CODE:?}]"
    if [ ! -e "${ZEPPELIN_CODE:?}" ]
    then
        echo "Creating [${ZEPPELIN_CODE:?}]"
        pushd "$(dirname ${ZEPPELIN_CODE:?})"
            git clone "${ZEPPELIN_REPO:?}" "$(basename ${ZEPPELIN_CODE:?})"
        popd
    else
        echo "Updating [${ZEPPELIN_CODE:?}]"
        pushd "${ZEPPELIN_CODE:?}"
            git pull
        popd
    fi


# -----------------------------------------------------
# Build components from source
# https://zeppelin.apache.org/docs/latest/setup/basics/how_to_build.html#2-build-source
#[user@desktop]

    source "${HOME}/aglais.env"
    pushd "${ZEPPELIN_CODE:?}"

        mvn clean package -DskipTests

    popd


# -----------------------------------------------------
# Build the distribution package.
# https://zeppelin.apache.org/docs/latest/setup/basics/how_to_build.html#package
#[user@desktop]

    source "${HOME}/aglais.env"
    pushd "${ZEPPELIN_CODE:?}"

        mvn clean package -Pbuild-distr

    popd


# -----------------------------------------------------
# List the distribution contents.
#[user@desktop]

    source "${HOME}/aglais.env"
    pushd "${ZEPPELIN_CODE:?}"

        ls -al zeppelin-distribution/target/zeppelin-0.9.0-SNAPSHOT/*

    popd

    >   ....
    >   ....
    >   drwxr-xr-x. 1 Zarquan users      394 Jul 16 13:02 bin
    >   drwxrwxr-x. 1 Zarquan users      410 Jul 16 13:02 conf
    >   drwxrwxr-x. 1 Zarquan users      488 Jul 16 15:16 interpreter
    >   drwxrwxr-x. 1 Zarquan users       62 Jul 16 13:02 k8s
    >   drwxrwsr-x. 1 Zarquan users    12264 Jul 16 15:39 lib
    >   -rw-rw-r--. 1 Zarquan users    18007 Jul 16 13:02 LICENSE
    >   drwxrwxr-x. 1 Zarquan users      708 Jul 16 13:02 licenses
    >   drwxrwxr-x. 1 Zarquan users      150 Jul 16 13:02 notebook
    >   -rw-rw-r--. 1 Zarquan users      441 Jul 16 13:02 NOTICE
    >   drwxrwxr-x. 1 Zarquan users       40 Jul 16 15:22 plugins
    >   -rw-rw-r--. 1 Zarquan users     1341 Jul 16 13:02 README.md
    >   -rw-rw-r--. 1 Zarquan users 29695438 Jul 16 15:38 zeppelin-web-0.9.0-SNAPSHOT.war

    #
    # Need to modify the Dockerfile to import this instead of downloading the tar.gz from the Apache site.
    #

    less scripts/docker/zeppelin/bin/Dockerfile

    >   ....
    >   RUN echo "$LOG_TAG Download Zeppelin binary" && \
    >       wget --quiet -O /tmp/zeppelin-${Z_VERSION}-bin-all.tgz http://archive.apache.org/dist/zeppelin/zeppelin-${Z_VERSION}/zeppelin-${Z_VERSION}-bin-all.tgz && \
    >       tar -zxvf /tmp/zeppelin-${Z_VERSION}-bin-all.tgz && \
    >       rm -rf /tmp/zeppelin-${Z_VERSION}-bin-all.tgz && \
    >       mkdir -p ${Z_HOME} && \
    >       mv /zeppelin-${Z_VERSION}-bin-all/* ${Z_HOME}/ && \
    >       chown -R root:root ${Z_HOME} && \
    >       mkdir -p ${Z_HOME}/logs ${Z_HOME}/run ${Z_HOME}/webapps && \
    >       # Allow process to edit /etc/passwd, to create a user entry for zeppelin
    >       chgrp root /etc/passwd && chmod ug+rw /etc/passwd && \
    >       # Give access to some specific folders
    >       chmod -R 775 "${Z_HOME}/logs" "${Z_HOME}/run" "${Z_HOME}/notebook" "${Z_HOME}/conf" && \
    >       # Allow process to create new folders (e.g. webapps)
    >       chmod 775 ${Z_HOME}
    >   ....

    #
    # We need to make our own Dockerfile that copies all the other steps,
    # but uses the locally built distribution directory in the final step.
    #

    #
    # We can use ADD or COPY, but the source needs to be in the Dockerfile context.
    #

    podman build --file ...Dockerfile ...



# -----------------------------------------------------
# Build our Docker image
# https://zeppelin.apache.org/docs/latest/setup/basics/how_to_build.html#2-build-source
#[user@desktop]

    buildtag=$(date '+%Y.%m.%d')
    buildtime=$(date '+%Y-%m-%dT%H:%M:%S')

    source "${HOME}/aglais.env"

    ZEPPELIN_VERSION=0.9.0-SNAPSHOT

    podman build \
        --tag aglais/zeppelin:latest \
        --tag aglais/zeppelin:${buildtag:?} \
        --build-arg "target=" \
        --build-arg "buildtag=${buildtag:?}" \
        --build-arg "buildtime=${buildtime:?}" \
        --file "${AGLAIS_CODE:?}/experiments/zrq/zeppelin/docker/Dockerfile" \
          "${ZEPPELIN_CODE:?}/zeppelin-distribution/target/zeppelin-${ZEPPELIN_VERSION:?}/zeppelin-${ZEPPELIN_VERSION:?}"

    >   STEP 1: FROM ubuntu:16.04
    >   STEP 2: MAINTAINER Apache Software Foundation <dev@zeppelin.apache.org>
    >   --> Using cache 81387e9c4edfb2e358f4137ad236af96072e396419bb217060ec49abe0a55e0c
    >   STEP 3: ARG buildtag
    >   --> Using cache 2f1a2642d92c49c7b891b5d58cad0879a8b504910b18269d70977940ee4f95e7
    >   STEP 4: ARG buildtime
    >   ....
    >   ....
    >   dpkg: error processing archive /var/cache/apt/archives/locales_2.23-0ubuntu11.2_all.deb (--unpack):
    >    cannot get security labeling handle: No such file or directory
    >   Errors were encountered while processing:
    >    /var/cache/apt/archives/locales_2.23-0ubuntu11.2_all.deb
    >   E: Sub-process /usr/bin/dpkg returned an error code (1)
    >   Error: error building at STEP "RUN echo "$LOG_TAG update and install basic packages" ....


    #
    # Looks like this bug.
    # https://github.com/containers/podman/issues/6976

    #
    # Added comments to the GitHub issue.
    # https://github.com/containers/podman/issues/6976#issuecomment-660051702
    # https://github.com/containers/podman/issues/6976#issuecomment-660243479


# -----------------------------------------------------
# Check for SELinux errors.
# https://github.com/containers/podman/issues/6976#issuecomment-659673315
#[user@desktop]

    sudo ausearch -m avc -ts recent

    >   ----
    >   time->Fri Jul 17 12:12:46 2020
    >   type=AVC msg=audit(1594984366.309:5971): avc:  denied  { setfscreate } for  pid=1515197 comm="cp" scontext=system_u:system_r:container_t:s0:c456,c623 tcontext=system_u:system_r:container_t:s0:c456,c623 tclass=process permissive=0
    >   ----
    >   time->Fri Jul 17 12:12:46 2020
    >   type=AVC msg=audit(1594984366.515:5972): avc:  denied  { setfscreate } for  pid=1515242 comm="cp" scontext=system_u:system_r:container_t:s0:c456,c623 tcontext=system_u:system_r:container_t:s0:c456,c623 tclass=process permissive=0


# -----------------------------------------------------
# Try building with buildah directly instead.
# https://github.com/containers/buildah/blob/master/docs/buildah-bud.md
#[user@desktop]

    buildtag=$(date '+%Y.%m.%d')
    buildtime=$(date '+%Y-%m-%dT%H:%M:%S')

    source "${HOME}/aglais.env"

    ZEPPELIN_VERSION=0.9.0-SNAPSHOT
    ZEPPELIN_TARGET=${ZEPPELIN_CODE:?}/zeppelin-distribution/target
    ZEPPELIN_PACKAGE=${ZEPPELIN_TARGET:?}/zeppelin-${ZEPPELIN_VERSION:?}/zeppelin-${ZEPPELIN_VERSION:?}

    cp "${AGLAIS_CODE}/experiments/zrq/zeppelin/docker/log4j.properties" \
       "${ZEPPELIN_PACKAGE:?}"

    buildah bud \
        --tag aglais/zeppelinbase:latest \
        --tag aglais/zeppelinbase:${buildtag:?} \
        --build-arg "buildtag=${buildtag:?}" \
        --build-arg "buildtime=${buildtime:?}" \
        --file "${AGLAIS_CODE:?}/experiments/zrq/zeppelin/docker/Dockerbase" \
        "${ZEPPELIN_PACKAGE:?}"

    buildah bud \
        --tag aglais/zeppelin:latest \
        --tag aglais/zeppelin:${buildtag:?} \
        --build-arg "buildtag=${buildtag:?}" \
        --build-arg "buildtime=${buildtime:?}" \
        --file "${AGLAIS_CODE:?}/experiments/zrq/zeppelin/docker/Dockerfile" \
        "${ZEPPELIN_PACKAGE:?}"



