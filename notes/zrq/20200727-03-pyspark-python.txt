#
# <meta:header>
#   <meta:licence>
#     Copyright (c) 2020, ROE (http://www.roe.ac.uk/)
#
#     This information is free software: you can redistribute it and/or modify
#     it under the terms of the GNU General Public License as published by
#     the Free Software Foundation, either version 3 of the License, or
#     (at your option) any later version.
#
#     This information is distributed in the hope that it will be useful,
#     but WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#     GNU General Public License for more details.
#
#     You should have received a copy of the GNU General Public License
#     along with this program.  If not, see <http://www.gnu.org/licenses/>.
#   </meta:licence>
# </meta:header>
#
#

    #
    # Setting values in Spark config from the notebook.
    #


# -----------------------------------------------------


    %spark.conf

    PYSPARK_PYTHON "/usr/bin/python3"
    spark.pyspark.python "/usr/bin/python3"

    PYSPARK_DRIVER_PYTHON  "/usr/bin/python3"
    spark.pyspark.driver.python "/usr/bin/python3"

    >   Py4JJavaError: An error occurred while calling z:org.apache.spark.api.python.PythonRDD.collectAndServe.
    >   : org.apache.spark.SparkException: Job aborted due to stage failure: Task 0 in stage 0.0 failed 4 times, most recent failure: Lost task 0.3 in stage 0.0 (TID 6, 10.100.3.14, executor 1): org.apache.spark.api.python.PythonException: Traceback (most recent call last):
    >     File "/opt/spark/python/lib/pyspark.zip/pyspark/worker.py", line 477, in main
    >       ("%d.%d" % sys.version_info[:2], version))
    >   Exception: Python in worker has different version 3.7 than that in driver 3.5, PySpark cannot run with different minor versions.Please check environment variables PYSPARK_PYTHON and PYSPARK_DRIVER_PYTHON are correctly set.
    >   
    >   	at org.apache.spark.api.python.BasePythonRunner$ReaderIterator.handlePythonException(PythonRunner.scala:503)
    >   	at org.apache.spark.api.python.PythonRunner$$anon$3.read(PythonRunner.scala:638)
    >   	at org.apache.spark.api.python.PythonRunner$$anon$3.read(PythonRunner.scala:621)
    >   	at org.apache.spark.api.python.BasePythonRunner$ReaderIterator.hasNext(PythonRunner.scala:456)
    >       ....
    >       ....


# -----------------------------------------------------

    %spark.conf

    PYSPARK_PYTHON "/usr/bin/python3.5"
    spark.pyspark.python "/usr/bin/python3.5"

    PYSPARK_DRIVER_PYTHON  "/usr/bin/python3.5"
    spark.pyspark.driver.python "/usr/bin/python3.5"


    >   Py4JJavaError: An error occurred while calling z:org.apache.spark.api.python.PythonRDD.collectAndServe.
    >   : org.apache.spark.SparkException: Job aborted due to stage failure: Task 1 in stage 0.0 failed 4 times, most recent failure: Lost task 1.3 in stage 0.0 (TID 6, 10.100.1.16, executor 1): java.io.IOException: Cannot run program "/usr/bin/python3.5": error=2, No such file or directory
    >   	at java.lang.ProcessBuilder.start(ProcessBuilder.java:1048)
    >   	at org.apache.spark.api.python.PythonWorkerFactory.startDaemon(PythonWorkerFactory.scala:209)
    >   	at org.apache.spark.api.python.PythonWorkerFactory.createThroughDaemon(PythonWorkerFactory.scala:132)
    >   	at org.apache.spark.api.python.PythonWorkerFactory.create(PythonWorkerFactory.scala:105)
    >   	at org.apache.spark.SparkEnv.createPythonWorker(SparkEnv.scala:119)
    >   	at org.apache.spark.api.python.BasePythonRunner.compute(PythonRunner.scala:131)
    >   	at org.apache.spark.api.python.PythonRDD.compute(PythonRDD.scala:65)
    >   	at org.apache.spark.rdd.RDD.computeOrReadCheckpoint(RDD.scala:349)
    >   	at org.apache.spark.rdd.RDD.iterator(RDD.scala:313)
    >   	at org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:90)
    >   	at org.apache.spark.scheduler.Task.run(Task.scala:127)
    >   	at org.apache.spark.executor.Executor$TaskRunner.$anonfun$run$3(Executor.scala:444)
    >   	at org.apache.spark.util.Utils$.tryWithSafeFinally(Utils.scala:1377)
    >   	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:447)
    >       ....
    >       ....


# -----------------------------------------------------


    PYSPARK_PYTHON "/usr/bin/python3.7"
    spark.pyspark.python "/usr/bin/python3.7"

    PYSPARK_DRIVER_PYTHON  "/usr/bin/python3.7"
    spark.pyspark.driver.python "/usr/bin/python3.7"

    >   org.apache.zeppelin.interpreter.InterpreterException: org.apache.zeppelin.interpreter.InterpreterException: Fail to open PythonInterpreter
    >   	at org.apache.zeppelin.interpreter.LazyOpenInterpreter.open(LazyOpenInterpreter.java:76)
    >   	at org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$InterpretJob.jobRun(RemoteInterpreterServer.java:760)
    >   	at org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$InterpretJob.jobRun(RemoteInterpreterServer.java:668)
    >   	at org.apache.zeppelin.scheduler.Job.run(Job.java:172)
    >   	at org.apache.zeppelin.scheduler.AbstractScheduler.runJob(AbstractScheduler.java:130)
    >   	at org.apache.zeppelin.scheduler.FIFOScheduler.lambda$runJobInScheduler$0(FIFOScheduler.java:39)
    >   	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
    >   	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
    >   	at java.lang.Thread.run(Thread.java:748)
    >   Caused by: org.apache.zeppelin.interpreter.InterpreterException: Fail to open PythonInterpreter
    >   	at org.apache.zeppelin.python.PythonInterpreter.open(PythonInterpreter.java:115)
    >   	at org.apache.zeppelin.spark.PySparkInterpreter.open(PySparkInterpreter.java:93)
    >   	at org.apache.zeppelin.interpreter.LazyOpenInterpreter.open(LazyOpenInterpreter.java:70)
    >   	... 8 more
    >   Caused by: java.io.IOException: Fail to launch python process.
    >   org.apache.commons.exec.ExecuteException: Execution failed (Exit value: -559038737. Caused by java.io.IOException: Cannot run program "/usr/bin/python3.7" (in directory "."): error=2, No such file or directory)
    >   	at org.apache.commons.exec.DefaultExecutor$1.run(DefaultExecutor.java:205)
    >   	at java.lang.Thread.run(Thread.java:748)
    >   Caused by: java.io.IOException: Cannot run program "/usr/bin/python3.7" (in directory "."): error=2, No such file or directory
    >   	at java.lang.ProcessBuilder.start(ProcessBuilder.java:1048)
    >   	at java.lang.Runtime.exec(Runtime.java:620)
    >   	at org.apache.commons.exec.launcher.Java13CommandLauncher.exec(Java13CommandLauncher.java:61)
    >       ....
    >       ....

# -----------------------------------------------------

    #
    # Checking the Dockerfile FROM base images.

    Zeppelin Dockerfile

    >   FROM ubuntu:16.04 AS zeppelinbase
    >   MAINTAINER Apache Software Foundation <dev@zeppelin.apache.org>


    Spark Dockerfile

    >   ARG java_image_tag=8-jre-slim
    >   FROM openjdk:${java_image_tag}


    OpenJDK Dockerfile
    https://github.com/docker-library/openjdk/blob/b5d14d9165fad693901c285d6e7bbc36d1cde41f/8/jre/slim/Dockerfile

    >   FROM debian:buster-slim



# -----------------------------------------------------
# Test which version of Python we get on each.
#[user@desktop]

    podman run \
        --rm \
        --tty \
        --interactive \
            debian:buster-slim \
                bash -c \
        '
        apt-get update ;
        apt-get install -y python3 ;
        python3 --version ;
        '

    >   ....
    >   ....
    >   Python 3.7.3


    podman run \
        --rm \
        --tty \
        --interactive \
            ubuntu:16.04 \
                bash -c \
        '
        apt-get update ;
        apt-get install -y python3 ;
        python3 --version ;
        '

    >   ....
    >   ....
    >   Python 3.5.2


    podman run \
        --rm \
        --tty \
        --interactive \
            ubuntu:18.04 \
                bash -c \
        '
        apt-get update ;
        apt-get install -y python3 ;
        python3 --version ;
        '

    >   ....
    >   ....
    >   Python 3.6.9


    podman run \
        --rm \
        --tty \
        --interactive \
            ubuntu:20.04 \
                bash -c \
        '
        apt-get update ;
        apt-get install -y python3 ;
        python3 --version ;
        '

    >   ....
    >   ....
    >   Python 3.8.2


    podman run \
        --rm \
        --tty \
        --interactive \
            ubuntu:20.04 \
                bash -c \
        '
        apt-get update ;
        apt-get install -y python3=3.7.3 ;
        python3 --version ;
        '

    >   ....
    >   E: Version '3.7.3' for 'python' was not found
    >   ....



    podman run \
        --rm \
        --tty \
        --interactive \
            ubuntu:20.04 \
                bash -c \
        '
        apt-get update ;
        apt-get install -y wget ;
        wget https://repo.anaconda.com/archive/Anaconda3-2020.07-Linux-x86_64.sh ;
        chmod a+x Anaconda3-2020.07-Linux-x86_64.sh ;
        ./Anaconda3-2020.07-Linux-x86_64.sh ;
        /root/anaconda3/bin/conda install python=3.7.3 ;
        '



    # Tying to use Anaconda to install Python 3.7.3 on Ubuntu 20.04
    # Not going to happen .. goes round in circles trying to resolve the dependencies.

    # Try basing the Ubuntu image on Debian ?
    # Java version problems.
    # E: Unable to locate package openjdk-8-jdk

    # Using spark.config in the notebook to select Python2.
    # Works :-)


    # The OpenJDK 8 uses Debian
    # https://github.com/docker-library/openjdk/blob/b5d14d9165fad693901c285d6e7bbc36d1cde41f/8/jre/slim/Dockerfile#L1
    # FROM debian:buster-slim

    # Default is/will be for OpenJDK to use OracleLinux !?
    # https://hub.docker.com/_/openjdk/

        "Starting with openjdk:12 the default image as well as the -oracle and -oraclelinux7 variants
         are based on the official Oracle Linux 7 image which is provided under the GPLv2 as per the
         Oracle Linux End User Agreement (EULA)."

    # Time to start creating our own Java base image ?

    # Longer term ..
    # Create a base image that has known version(s) of java and Python, and use that for both Zeppelin and Spark.


    # GUI settings for the %spark interpreter.
    # PYSPARK_PYTHON=python
    # PYSPARK_DRIVER_PYTHON=python

    # Settings are unpredictable.
    # Suggests something is being cached ..



    #
    # Settings that work:

        %spark.conf

        PYSPARK_PYTHON "/usr/bin/python2.7"
        spark.pyspark.python "/usr/bin/python2.7"

        PYSPARK_DRIVER_PYTHON  "/usr/bin/python2.7"
        spark.pyspark.driver.python "/usr/bin/python2.7"

        spark.executor.instances 10





