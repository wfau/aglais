#
# <meta:header>
#   <meta:licence>
#     Copyright (c) 2020, ROE (http://www.roe.ac.uk/)
#
#     This information is free software: you can redistribute it and/or modify
#     it under the terms of the GNU General Public License as published by
#     the Free Software Foundation, either version 3 of the License, or
#     (at your option) any later version.
#
#     This information is distributed in the hope that it will be useful,
#     but WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#     GNU General Public License for more details.
#
#     You should have received a copy of the GNU General Public License
#     along with this program.  If not, see <http://www.gnu.org/licenses/>.
#   </meta:licence>
# </meta:header>
#
#


    Cluster components have 12 character values in their names.

        openstack\
            --os-cloud "${cloudname:?}" \
            subnet list

    >   +--------------------------------------+-------------------------------------------------------------------------------------------+--------------------------------------+---------------+
    >   | ID                                   | Name                                                                                      | Network                              | Subnet        |
    >   +--------------------------------------+-------------------------------------------------------------------------------------------+--------------------------------------+---------------+
    >   | 01b76c7c-3c1a-4c5c-9a5a-14bcf6c0c290 | cumulus-internal                                                                          | ecb791d5-1022-447a-a79c-8f38a0f5c990 | 10.218.0.0/16 |
    >   | 34ffeb30-563f-47cd-b191-223ee0275654 | aglais-k8s-20201118-cluster-227sitdpzf7h-network-avz6u6xkan37-private_subnet-6a57jrvezp4d | 356a04f6-57a8-4084-b84b-3b84f1fc81c0 | 10.0.0.0/24   |
    >   | 801c8944-f576-4021-8ac4-0936652eacf8 | aglais-k8s-20201118-cluster-4uhxn4rgy7me-network-guolmzzhqifn-private_subnet-3nls2p4vy2sr | 92fb0fa9-91cc-4478-b3c2-08c6d3c84161 | 10.0.0.0/24   |
    >   +--------------------------------------+-------------------------------------------------------------------------------------------+--------------------------------------+---------------+

    openstack\
        --os-cloud "${cloudname:?}" \
        router list

    >   +--------------------------------------+--------------------------------------------------------------------------------------+--------+-------+----------------------------------+
    >   | ID                                   | Name                                                                                 | Status | State | Project                          |
    >   +--------------------------------------+--------------------------------------------------------------------------------------+--------+-------+----------------------------------+
    >   | 670d2ca6-c487-4618-9f23-858ff9029d32 | aglais-k8s-20201118-cluster-227sitdpzf7h-network-avz6u6xkan37-extrouter-2lepbjca3kgp | ACTIVE | UP    | 21b4ae3a2ea44bc5a9c14005ed2963af |
    >   | baa42c04-ac18-4f15-ae35-1abf4429d959 | aglais-k8s-20201118-cluster-4uhxn4rgy7me-network-guolmzzhqifn-extrouter-k4s33gbnqln4 | ACTIVE | UP    | 21b4ae3a2ea44bc5a9c14005ed2963af |
    >   | f80b813e-02d1-4232-ad27-334588710507 | ceph-router                                                                          | ACTIVE | UP    | 21b4ae3a2ea44bc5a9c14005ed2963af |
    >   | f8202b18-6cdf-4907-8409-161eb2f9760f | ceph-router                                                                          | ACTIVE | UP    | 21b4ae3a2ea44bc5a9c14005ed2963af |
    >   +--------------------------------------+--------------------------------------------------------------------------------------+--------+-------+----------------------------------+


    Subnets:

        aglais-k8s-20201118-cluster-227sitdpzf7h-network-avz6u6xkan37-private_subnet-6a57jrvezp4d
        aglais-k8s-20201118-cluster-4uhxn4rgy7me-network-guolmzzhqifn-private_subnet-3nls2p4vy2sr

    Routers:

        aglais-k8s-20201118-cluster-227sitdpzf7h-network-avz6u6xkan37-extrouter-2lepbjca3kgp
        aglais-k8s-20201118-cluster-4uhxn4rgy7me-network-guolmzzhqifn-extrouter-k4s33gbnqln4

    Looks like we have two clusters

        cluster-227sitdpzf7h
        cluster-4uhxn4rgy7me

    and two networks

        network-avz6u6xkan37
        network-guolmzzhqifn


    If we could get|calculate this 12 character identifier, then we could use it to link subnets and routers to their parent clusters.

    My guess is this is using the short_id tool in the Magnum source code.
    https://github.com/openstack/magnum/blob/master/magnum/common/short_id.py

        def get_id(source_uuid):
            """Derive a short (12 character) id from a random UUID.

    It looks like this extracts the random part of the UUID and base64 encodes it.

    However ... quick test doen't return the same values.

        openstack\
            --os-cloud "${cloudname:?}" \
            coe cluster list

    >   +--------------------------------------+-----------------------------+------------------+------------+--------------+-----------------+---------------+
    >   | uuid                                 | name                        | keypair          | node_count | master_count | status          | health_status |
    >   +--------------------------------------+-----------------------------+------------------+------------+--------------+-----------------+---------------+
    >   | 83780c77-1e52-4ee0-9af6-41a6ba12331f | aglais-k8s-20201118-cluster | zrq-gaia-keypair |          4 |            1 | CREATE_COMPLETE | HEALTHY       |
    >   | 479b95a0-fa62-400a-ba31-d2cb4488b7ca | aglais-k8s-20201118-cluster | zrq-gaia-keypair |          4 |            1 | CREATE_FAILED   | None          |
    >   +--------------------------------------+-----------------------------+------------------+------------+--------------+-----------------+---------------+

        short_id.get_id('83780c77-1e52-4ee0-9af6-41a6ba12331f')

            '5ya6kkbxqddx'

        short_id.get_id('479b95a0-fa62-400a-ba31-d2cb4488b7ca')

            'acx2mjdzxfna'




        openstack\
            --os-cloud "${cloudname:?}" \
            network list

    >   +--------------------------------------+------------------+----------------------------------------------------------------------------+
    >   | ID                                   | Name             | Subnets                                                                    |
    >   +--------------------------------------+------------------+----------------------------------------------------------------------------+
    >   | 356a04f6-57a8-4084-b84b-3b84f1fc81c0 | private          | 34ffeb30-563f-47cd-b191-223ee0275654                                       |
    >   | 92fb0fa9-91cc-4478-b3c2-08c6d3c84161 | private          | 801c8944-f576-4021-8ac4-0936652eacf8                                       |
    >   | a929e8db-1bf4-4a5f-a80c-fabd39d06a26 | internet         | 180dc961-c52f-461a-b241-8f7a30d022a5, 273123bb-70f6-4f51-a406-7fc4b446532d |
    >   | ecb791d5-1022-447a-a79c-8f38a0f5c990 | cumulus-internal | 01b76c7c-3c1a-4c5c-9a5a-14bcf6c0c290                                       |
    >   +--------------------------------------+------------------+----------------------------------------------------------------------------+

        short_id.get_id('356a04f6-57a8-4084-b84b-3b84f1fc81c0')

            'bbcxva2wubhw'

        short_id.get_id('92fb0fa9-91cc-4478-b3c2-08c6d3c84161')

            'i6erzsjpwd5j'


    The short _id strings look similar, but don't match the uuids of the parent objects.

    Random wandering round the source code ...

    Random wandering round the objects in the Horizon GUI ...

    The 12 char ident in the cluster name matches the stack name.


        openstack\
            --os-cloud "${cloudname:?}" \
            coe cluster list

    >   +--------------------------------------+-----------------------------+------------------+------------+--------------+-----------------+---------------+
    >   | uuid                                 | name                        | keypair          | node_count | master_count | status          | health_status |
    >   +--------------------------------------+-----------------------------+------------------+------------+--------------+-----------------+---------------+
    >   | 83780c77-1e52-4ee0-9af6-41a6ba12331f | aglais-k8s-20201118-cluster | zrq-gaia-keypair |          4 |            1 | CREATE_COMPLETE | HEALTHY       |
    >   | 479b95a0-fa62-400a-ba31-d2cb4488b7ca | aglais-k8s-20201118-cluster | zrq-gaia-keypair |          4 |            1 | CREATE_FAILED   | None          |
    >   +--------------------------------------+-----------------------------+------------------+------------+--------------+-----------------+---------------+


        openstack\
            --os-cloud "${cloudname:?}" \
            stack list

    >   +--------------------------------------+------------------------------------------+-----------------+----------------------+--------------+
    >   | ID                                   | Stack Name                               | Stack Status    | Creation Time        | Updated Time |
    >   +--------------------------------------+------------------------------------------+-----------------+----------------------+--------------+
    >   | de21080c-c00d-438b-bd24-b500d1f7f00b | aglais-k8s-20201118-cluster-4uhxn4rgy7me | CREATE_FAILED   | 2020-11-18T22:22:01Z | None         |
    >   | 5a9f88bb-6397-4824-8398-6a501962d0e3 | aglais-k8s-20201118-cluster-227sitdpzf7h | CREATE_COMPLETE | 2020-11-18T22:07:31Z | None         |
    >   +--------------------------------------+------------------------------------------+-----------------+----------------------+--------------+


        openstack\
            --os-cloud "${cloudname:?}" \
            subnet list

    >   +--------------------------------------+-------------------------------------------------------------------------------------------+--------------------------------------+---------------+
    >   | ID                                   | Name                                                                                      | Network                              | Subnet        |
    >   +--------------------------------------+-------------------------------------------------------------------------------------------+--------------------------------------+---------------+
    >   | 01b76c7c-3c1a-4c5c-9a5a-14bcf6c0c290 | cumulus-internal                                                                          | ecb791d5-1022-447a-a79c-8f38a0f5c990 | 10.218.0.0/16 |
    >   | 34ffeb30-563f-47cd-b191-223ee0275654 | aglais-k8s-20201118-cluster-227sitdpzf7h-network-avz6u6xkan37-private_subnet-6a57jrvezp4d | 356a04f6-57a8-4084-b84b-3b84f1fc81c0 | 10.0.0.0/24   |
    >   | 801c8944-f576-4021-8ac4-0936652eacf8 | aglais-k8s-20201118-cluster-4uhxn4rgy7me-network-guolmzzhqifn-private_subnet-3nls2p4vy2sr | 92fb0fa9-91cc-4478-b3c2-08c6d3c84161 | 10.0.0.0/24   |
    >   +--------------------------------------+-------------------------------------------------------------------------------------------+--------------------------------------+---------------+


        openstack\
            --os-cloud "${cloudname:?}" \
            router list

    >   +--------------------------------------+--------------------------------------------------------------------------------------+--------+-------+----------------------------------+
    >   | ID                                   | Name                                                                                 | Status | State | Project                          |
    >   +--------------------------------------+--------------------------------------------------------------------------------------+--------+-------+----------------------------------+
    >   | 670d2ca6-c487-4618-9f23-858ff9029d32 | aglais-k8s-20201118-cluster-227sitdpzf7h-network-avz6u6xkan37-extrouter-2lepbjca3kgp | ACTIVE | UP    | 21b4ae3a2ea44bc5a9c14005ed2963af |
    >   | baa42c04-ac18-4f15-ae35-1abf4429d959 | aglais-k8s-20201118-cluster-4uhxn4rgy7me-network-guolmzzhqifn-extrouter-k4s33gbnqln4 | ACTIVE | UP    | 21b4ae3a2ea44bc5a9c14005ed2963af |
    >   | f80b813e-02d1-4232-ad27-334588710507 | ceph-router                                                                          | ACTIVE | UP    | 21b4ae3a2ea44bc5a9c14005ed2963af |
    >   | f8202b18-6cdf-4907-8409-161eb2f9760f | ceph-router                                                                          | ACTIVE | UP    | 21b4ae3a2ea44bc5a9c14005ed2963af |
    >   +--------------------------------------+--------------------------------------------------------------------------------------+--------+-------+----------------------------------+


    Cluster names:

        aglais-k8s-20201118-cluster
        aglais-k8s-20201118-cluster

    Stack names:

        aglais-k8s-20201118-cluster-4uhxn4rgy7me
        aglais-k8s-20201118-cluster-227sitdpzf7h

    Subnet names:

        aglais-k8s-20201118-cluster-227sitdpzf7h-network-avz6u6xkan37-private_subnet-6a57jrvezp4d
        aglais-k8s-20201118-cluster-4uhxn4rgy7me-network-guolmzzhqifn-private_subnet-3nls2p4vy2sr

    Router names:

        aglais-k8s-20201118-cluster-227sitdpzf7h-network-avz6u6xkan37-extrouter-2lepbjca3kgp
        aglais-k8s-20201118-cluster-4uhxn4rgy7me-network-guolmzzhqifn-extrouter-k4s33gbnqln4


    The stack name is set using short_id.generate_id(), which uses a random uuid as the seed.
    magnum/drivers/heat/driver.py

        def _create_stack(self, context, osc, cluster, cluster_create_timeout, nodegroup=None):

            ....
            ....
            # valid hostnames are 63 chars long, leaving enough room
            # to add the random id (for uniqueness)
            if nodegroup is None:
                stack_name = cluster.name[:30]
            else:
                stack_name = "%s-%s" % (cluster.name[:20], nodegroup.name[:9])
            stack_name = stack_name.replace('_', '-')
            stack_name = stack_name.replace('.', '-')
            stack_name = ''.join(filter(valid_chars.__contains__, stack_name))

            # Make sure no duplicate stack name
            stack_name = '%s-%s' % (stack_name, short_id.generate_id())
            stack_name = stack_name.lower()
            ....
            ....


    Can we get from the cluster uuid to the stack name ?

        openstack\
            --os-cloud "${cloudname:?}" \
            coe cluster list \
                --format json \
        | jq '.'

    >   [
    >     {
    >       "uuid": "83780c77-1e52-4ee0-9af6-41a6ba12331f",
    >       "name": "aglais-k8s-20201118-cluster",
    >       "keypair": "zrq-gaia-keypair",
    >       "node_count": 4,
    >       "master_count": 1,
    >       "status": "CREATE_COMPLETE",
    >       "health_status": "HEALTHY"
    >     },
    >     {
    >       "uuid": "479b95a0-fa62-400a-ba31-d2cb4488b7ca",
    >       "name": "aglais-k8s-20201118-cluster",
    >       "keypair": "zrq-gaia-keypair",
    >       "node_count": 4,
    >       "master_count": 1,
    >       "status": "CREATE_FAILED",
    >       "health_status": null
    >     }
    >   ]


    Not enouigh detail to get the stack uuid.
    So we need to get the details for each cluster.

        clusterid='83780c77-1e52-4ee0-9af6-41a6ba12331f'

        openstack\
            --os-cloud "${cloudname:?}" \
            coe cluster show \
                --format json \
                "${clusterid:?}" \
        | jq '.'

    >   {
    >     "status": "CREATE_COMPLETE",
    >     "health_status": "HEALTHY",
    >     "cluster_template_id": "40963ffb-4439-49f8-8e80-f511fc11c4a9",
    >     "node_addresses": [
    >       "10.0.0.15",
    >       "10.0.0.150",
    >       "10.0.0.42",
    >       "10.0.0.124"
    >     ],
    >     "uuid": "83780c77-1e52-4ee0-9af6-41a6ba12331f",
    >     "stack_id": "5a9f88bb-6397-4824-8398-6a501962d0e3",
    >     "status_reason": null,
    >     "created_at": "2020-11-18T22:07:21+00:00",
    >     "updated_at": "2020-11-18T22:13:03+00:00",
    >     "coe_version": "v1.17.2",
    >     "labels": {
    >       "auto_healing_controller": "magnum-auto-healer",
    >       "max_node_count": "4",
    >       "cloud_provider_tag": "v1.17.0",
    >       "etcd_tag": "3.3.17",
    >       "monitoring_enabled": "true",
    >       "tiller_enabled": "true",
    >       "autoscaler_tag": "v1.15.2",
    >       "master_lb_floating_ip_enabled": "true",
    >       "auto_scaling_enabled": "true",
    >       "tiller_tag": "v2.16.1",
    >       "use_podman": "true",
    >       "auto_healing_enabled": "true",
    >       "heat_container_agent_tag": "train-stable-1",
    >       "kube_tag": "v1.17.2",
    >       "min_node_count": "1"
    >     },
    >     "labels_overridden": "",
    >     "labels_skipped": "",
    >     "labels_added": "",
    >     "faults": "",
    >     "keypair": "zrq-gaia-keypair",
    >     "api_address": "https://128.232.227.173:6443",
    >     "master_addresses": [
    >       "10.0.0.104"
    >     ],
    >     "create_timeout": 60,
    >     "node_count": 4,
    >     "discovery_url": "https://discovery.etcd.io/02329b6a6f6776fe5d1315d99491ce8f",
    >     "master_count": 1,
    >     "container_version": "1.12.6",
    >     "name": "aglais-k8s-20201118-cluster",
    >     "master_flavor_id": "406a17e0-afd0-47d3-a6ad-8b19198bdd97",
    >     "flavor_id": "996c1c8c-c934-411c-9631-b74eb2829631",
    >     "health_status_reason": {
    >       "aglais-k8s-20201118-cluster-227sitdpzf7h-node-2.Ready": "True",
    >       "aglais-k8s-20201118-cluster-227sitdpzf7h-master-0.Ready": "True",
    >       "aglais-k8s-20201118-cluster-227sitdpzf7h-node-3.Ready": "True",
    >       "aglais-k8s-20201118-cluster-227sitdpzf7h-node-1.Ready": "True",
    >       "api": "ok",
    >       "aglais-k8s-20201118-cluster-227sitdpzf7h-node-0.Ready": "True"
    >     },
    >     "project_id": "21b4ae3a2ea44bc5a9c14005ed2963af"
    >   }


        openstack\
            --os-cloud "${cloudname:?}" \
            coe cluster show \
                --format json \
                "${clusterid:?}" \
        | jq -r '.stack_id'

    >   5a9f88bb-6397-4824-8398-6a501962d0e3

    stackid=$(
        openstack\
            --os-cloud "${cloudname:?}" \
            coe cluster show \
                --format json \
                "${clusterid:?}" \
        | jq -r '.stack_id'
        )

    openstack\
        --os-cloud "${cloudname:?}" \
        stack show \
            --format json \
            "${stackid:?}" \
        | jq '.'

    >   {
    >     "id": "5a9f88bb-6397-4824-8398-6a501962d0e3",
    >     "stack_name": "aglais-k8s-20201118-cluster-227sitdpzf7h",
    >     "description": "This template will boot a Kubernetes cluster with one or more minions (as specified by the number_of_minions parameter, which defaults to 1).\n",
    >     "creation_time": "2020-11-18T22:07:31Z",
    >     "updated_time": null,
    >     "stack_status": "CREATE_COMPLETE",
    >     "stack_status_reason": "Stack CREATE completed successfully",
    >     "parameters": {
    >       "magnum_url": "https://cumulus.openstack.hpc.cam.ac.uk:9511/v1",
    >       "keystone_auth_enabled": "True",
    >       "http_proxy": "",
    >       "cgroup_driver": "cgroupfs",
    >       "registry_container": "container",
    >       "kubernetes_port": "6443",
    >       "calico_kube_controllers_tag": "v1.0.3",
    >       "octavia_enabled": "True",
    >       "etcd_volume_size": "0",
    >       "kube_dashboard_enabled": "True",
    >       "master_flavor": "406a17e0-afd0-47d3-a6ad-8b19198bdd97",
    >       "etcd_tag": "3.3.17",
    >       "kube_version": "v1.17.2",
    >       "k8s_keystone_auth_tag": "v1.14.0",
    >       "kube_service_account_private_key": "******",
    >       "kube_tag": "v1.17.2",
    >       "existing_master_private_ip": "",
    >       "auto_scaling_enabled": "True",
    >       "cloud_provider_tag": "v1.17.0",
    >       "ca_key": "******",
    >       "tiller_enabled": "True",
    >       "registry_enabled": "False",
    >       "verify_ca": "True",
    >       "etcd_volume_type": "",
    >       "password": "******",
    >       "nginx_ingress_controller_chart_tag": "v1.24.7",
    >       "worker_role": "worker",
    >       "dns_service_ip": "10.254.0.10",
    >       "update_max_batch_size": "1",
    >       "ssh_key_name": "zrq-gaia-keypair",
    >       "flannel_tag": "v0.11.0-amd64",
    >       "flannel_network_subnetlen": "24",
    >       "dns_nameserver": "8.8.8.8",
    >       "number_of_masters": "1",
    >       "wait_condition_timeout": "6000",
    >       "influx_grafana_dashboard_enabled": "False",
    >       "auto_healing_controller": "magnum-auto-healer",
    >       "portal_network_cidr": "10.254.0.0/16",
    >       "prometheus_adapter_chart_tag": "1.4.0",
    >       "min_node_count": "1",
    >       "admission_control_list": "NamespaceLifecycle,LimitRanger,ServiceAccount,DefaultStorageClass,DefaultTolerationSeconds,MutatingAdmissionWebhook,ValidatingAdmissionWebhook,ResourceQuota",
    >       "pods_network_cidr": "10.100.0.0/16",
    >       "ingress_controller": "",
    >       "metrics_server_chart_tag": "v2.8.8",
    >       "external_network": "a929e8db-1bf4-4a5f-a80c-fabd39d06a26",
    >       "docker_volume_type": "",
    >       "trustee_domain_id": "e91836bb5a7042cbaa96c16f43cffd4b",
    >       "tls_disabled": "False",
    >       "fixed_subnet": "",
    >       "ssh_public_key": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDf4c9GuWKfTjclpDp779deRXXSgTblrTD6mdgJxwWOC2Vh1Tvicn8qv1tgTV62G49/783lffTKnCTUIFNOCTaaaLpkGDjVdR7ZG0o4u8r7c9bHEPaH/RJirG19wZ1LbTAA0XKGQrhlnCAMG2ruoX8zFz4FUNgpY0qkSLtNaarmFqkNxbg76sXehwzxhOqxLSoimlj4HJ0MUVVJsDUqbIpujJeC6AKKOUmr++h4Y/EnKetUSp/GhfHUD+Lt9BYALOFEyAAv3qyUqSrWT/JeFF//VS+syzoszBqBgQ+tvi4GBDhwnfRM0WgOOusWHXEOhitYwwaQ/6J66RC1zV4ksPOL Cambridge HPC OpenStack",
    >       "boot_volume_size": "0",
    >       "swift_region": "",
    >       "draino_tag": "abf028a",
    >       "keystone_auth_default_policy": "[{\"match\": [{\"type\": \"role\", \"values\": [\"member\"]}, {\"type\": \"project\", \"values\": [\"21b4ae3a2ea44bc5a9c14005ed2963af\"]}], \"resource\": {\"namespace\": \"default\", \"resources\": [\"pods\", \"services\", \"deployments\", \"pvc\"], \"verbs\": [\"list\"], \"version\": \"*\"}}]",
    >       "heapster_enabled": "True",
    >       "volume_driver": "cinder",
    >       "kubescheduler_options": "",
    >       "use_podman": "True",
    >       "calico_tag": "v3.3.6",
    >       "prometheus_adapter_configmap": "",
    >       "loadbalancing_protocol": "TCP",
    >       "fixed_network_name": "private",
    >       "cloud_provider_enabled": "True",
    >       "OS::stack_id": "5a9f88bb-6397-4824-8398-6a501962d0e3",
    >       "flannel_cni_tag": "v0.3.0",
    >       "prometheus_monitoring": "False",
    >       "tiller_namespace": "magnum-tiller",
    >       "kubelet_options": "",
    >       "fixed_network": "",
    >       "minion_kube_tag": "v1.17.2",
    >       "trustee_username": "83780c77-1e52-4ee0-9af6-41a6ba12331f_21b4ae3a2ea44bc5a9c14005ed2963af",
    >       "availability_zone": "",
    >       "coredns_tag": "1.3.1",
    >       "prometheus_operator_chart_tag": "v8.2.2",
    >       "cert_manager_api": "False",
    >       "minion_flavor": "996c1c8c-c934-411c-9631-b74eb2829631",
    >       "magnum_auto_healer_tag": "v1.15.0",
    >       "kubeproxy_options": "",
    >       "master_nodegroup_name": "default-master",
    >       "cluster_uuid": "83780c77-1e52-4ee0-9af6-41a6ba12331f",
    >       "grafana_admin_passwd": "******",
    >       "flannel_backend": "vxlan",
    >       "registry_port": "5000",
    >       "autoscaler_tag": "v1.15.2",
    >       "master_image": "FedoraAtomic29-20191126",
    >       "nginx_ingress_controller_tag": "0.26.1",
    >       "https_proxy": "",
    >       "npd_enabled": "True",
    >       "existing_security_group": "",
    >       "username": "yrvafhom@gmail.com",
    >       "kube_service_account_key": "******",
    >       "region_name": "RegionOne",
    >       "ostree_remote": "",
    >       "grafana_tag": "5.1.5",
    >       "worker_nodegroup_name": "default-worker",
    >       "kube_allow_priv": "true",
    >       "node_problem_detector_tag": "v0.6.2",
    >       "minion_image": "FedoraAtomic29-20191126",
    >       "docker_storage_driver": "overlay2",
    >       "project_id": "21b4ae3a2ea44bc5a9c14005ed2963af",
    >       "registry_chunksize": "5242880",
    >       "trustee_user_id": "85debf4c4bed418681872676222c4e2a",
    >       "traefik_ingress_controller_tag": "v1.7.19",
    >       "trust_id": "******",
    >       "container_infra_prefix": "",
    >       "number_of_minions": "4",
    >       "tiller_tag": "v2.16.1",
    >       "boot_volume_type": "",
    >       "ingress_controller_role": "ingress",
    >       "registry_insecure": "True",
    >       "master_kube_tag": "v1.17.2",
    >       "prometheus_tag": "v1.8.2",
    >       "OS::project_id": "21b4ae3a2ea44bc5a9c14005ed2963af",
    >       "kubecontroller_options": "",
    >       "fixed_network_cidr": "10.0.0.0/24",
    >       "insecure_registry_url": "",
    >       "auth_url": "https://cumulus.openstack.hpc.cam.ac.uk:5000/v3",
    >       "ostree_commit": "",
    >       "auto_healing_enabled": "True",
    >       "master_role": "master",
    >       "docker_volume_size": "0",
    >       "metrics_server_enabled": "True",
    >       "kubeapi_options": "",
    >       "kube_dashboard_version": "v1.8.3",
    >       "trustee_password": "******",
    >       "nodes_affinity_policy": "soft-anti-affinity",
    >       "minions_to_remove": "",
    >       "octavia_ingress_controller_tag": "v1.15.0",
    >       "is_cluster_stack": "True",
    >       "OS::stack_name": "aglais-k8s-20201118-cluster-227sitdpzf7h",
    >       "max_node_count": "4",
    >       "system_pods_timeout": "5",
    >       "system_pods_initial_delay": "30",
    >       "prometheus_adapter_enabled": "True",
    >       "dns_cluster_domain": "cluster.local",
    >       "flannel_network_cidr": "10.100.0.0/16",
    >       "calico_ipv4pool": "192.168.0.0/16",
    >       "openstack_ca": "******",
    >       "network_driver": "flannel",
    >       "monitoring_enabled": "True",
    >       "heat_container_agent_tag": "train-stable-1",
    >       "no_proxy": "",
    >       "discovery_url": "https://discovery.etcd.io/02329b6a6f6776fe5d1315d99491ce8f"
    >     },
    >     "outputs": [
    >       {
    >         "output_value": [
    >           "10.0.0.104"
    >         ],
    >         "output_key": "kube_masters_private",
    >         "description": "This is a list of the \"private\" IP addresses of all the Kubernetes masters.\n"
    >       },
    >       {
    >         "output_value": [
    >           null
    >         ],
    >         "output_key": "kube_masters",
    >         "description": "This is a list of the \"public\" IP addresses of all the Kubernetes masters. Use these IP addresses to log in to the Kubernetes masters via ssh.\n"
    >       },
    >       {
    >         "output_value": "128.232.227.173",
    >         "output_key": "api_address",
    >         "description": "This is the API endpoint of the Kubernetes cluster. Use this to access the Kubernetes API.\n"
    >       },
    >       {
    >         "output_value": [
    >           "10.0.0.15",
    >           "10.0.0.150",
    >           "10.0.0.42",
    >           "10.0.0.124"
    >         ],
    >         "output_key": "kube_minions_private",
    >         "description": "This is a list of the \"private\" IP addresses of all the Kubernetes minions.\n"
    >       },
    >       {
    >         "output_value": [
    >           null,
    >           null,
    >           null,
    >           null
    >         ],
    >         "output_key": "kube_minions",
    >         "description": "This is a list of the \"public\" IP addresses of all the Kubernetes minions. Use these IP addresses to log in to the Kubernetes minions via ssh."
    >       },
    >       {
    >         "output_value": "localhost:5000",
    >         "output_key": "registry_address",
    >         "description": "This is the url of docker registry server where you can store docker images."
    >       }
    >     ],
    >     "links": [
    >       {
    >         "href": "https://cumulus.openstack.hpc.cam.ac.uk:8004/v1/21b4ae3a2ea44bc5a9c14005ed2963af/stacks/aglais-k8s-20201118-cluster-227sitdpzf7h/5a9f88bb-6397-4824-8398-6a501962d0e3",
    >         "rel": "self"
    >       }
    >     ],
    >     "parent": null,
    >     "disable_rollback": true,
    >     "deletion_time": null,
    >     "stack_user_project_id": "b6784d3685ed474598e4fd6dfd7a8ca7",
    >     "capabilities": [],
    >     "notification_topics": [],
    >     "tags": null,
    >     "timeout_mins": 60,
    >     "stack_owner": null
    >   }


    openstack\
        --os-cloud "${cloudname:?}" \
        stack show \
            --format json \
            "${stackid:?}" \
        | jq -r '.stack_name'

    >   aglais-k8s-20201118-cluster-227sitdpzf7h


    We can get from the cluster uuid, to the cluster details, to the stack uuid, to the stack name.
    We can then use that stack name to select the matching subnet and router.

    openstack\
        --os-cloud "${cloudname:?}" \
        subnet list

    >   +--------------------------------------+-------------------------------------------------------------------------------------------+--------------------------------------+---------------+
    >   | ID                                   | Name                                                                                      | Network                              | Subnet        |
    >   +--------------------------------------+-------------------------------------------------------------------------------------------+--------------------------------------+---------------+
    >   | 01b76c7c-3c1a-4c5c-9a5a-14bcf6c0c290 | cumulus-internal                                                                          | ecb791d5-1022-447a-a79c-8f38a0f5c990 | 10.218.0.0/16 |
    >   | 34ffeb30-563f-47cd-b191-223ee0275654 | aglais-k8s-20201118-cluster-227sitdpzf7h-network-avz6u6xkan37-private_subnet-6a57jrvezp4d | 356a04f6-57a8-4084-b84b-3b84f1fc81c0 | 10.0.0.0/24   |
    >   | 801c8944-f576-4021-8ac4-0936652eacf8 | aglais-k8s-20201118-cluster-4uhxn4rgy7me-network-guolmzzhqifn-private_subnet-3nls2p4vy2sr | 92fb0fa9-91cc-4478-b3c2-08c6d3c84161 | 10.0.0.0/24   |
    >   +--------------------------------------+-------------------------------------------------------------------------------------------+--------------------------------------+---------------+

    stackname=$(
        openstack\
            --os-cloud "${cloudname:?}" \
            stack show \
                --format json \
                "${stackid:?}" \
        | jq -r '.stack_name'
        )

    openstack\
        --os-cloud "${cloudname:?}" \
        subnet list \
            --format json \
    | jq '.[] | select(.Name | startswith("'${stackname:?}'"))'

    >   {
    >     "ID": "34ffeb30-563f-47cd-b191-223ee0275654",
    >     "Name": "aglais-k8s-20201118-cluster-227sitdpzf7h-network-avz6u6xkan37-private_subnet-6a57jrvezp4d",
    >     "Network": "356a04f6-57a8-4084-b84b-3b84f1fc81c0",
    >     "Subnet": "10.0.0.0/24"
    >   }


    We can also look for 'private_subnet' in the name.

    openstack\
        --os-cloud "${cloudname:?}" \
        subnet list \
            --format json \
    | jq '.[] | select(.Name | test("private_subnet"))'

    >   {
    >     "ID": "34ffeb30-563f-47cd-b191-223ee0275654",
    >     "Name": "aglais-k8s-20201118-cluster-227sitdpzf7h-network-avz6u6xkan37-private_subnet-6a57jrvezp4d",
    >     "Network": "356a04f6-57a8-4084-b84b-3b84f1fc81c0",
    >     "Subnet": "10.0.0.0/24"
    >   }
    >   {
    >     "ID": "801c8944-f576-4021-8ac4-0936652eacf8",
    >     "Name": "aglais-k8s-20201118-cluster-4uhxn4rgy7me-network-guolmzzhqifn-private_subnet-3nls2p4vy2sr",
    >     "Network": "92fb0fa9-91cc-4478-b3c2-08c6d3c84161",
    >     "Subnet": "10.0.0.0/24"
    >   }

    Combining the two tests

    openstack\
        --os-cloud "${cloudname:?}" \
        subnet list \
            --format json \
    | jq '.[] | select(.Name | startswith("'${stackname:?}'")) | select(.Name | test("private_subnet"))'

    >   {
    >     "ID": "34ffeb30-563f-47cd-b191-223ee0275654",
    >     "Name": "aglais-k8s-20201118-cluster-227sitdpzf7h-network-avz6u6xkan37-private_subnet-6a57jrvezp4d",
    >     "Network": "356a04f6-57a8-4084-b84b-3b84f1fc81c0",
    >     "Subnet": "10.0.0.0/24"
    >   }


    That isn't so important for the subnets, but it might be for the routers.

    openstack\
        --os-cloud "${cloudname:?}" \
        router list

    >   +--------------------------------------+--------------------------------------------------------------------------------------+--------+-------+----------------------------------+
    >   | ID                                   | Name                                                                                 | Status | State | Project                          |
    >   +--------------------------------------+--------------------------------------------------------------------------------------+--------+-------+----------------------------------+
    >   | 670d2ca6-c487-4618-9f23-858ff9029d32 | aglais-k8s-20201118-cluster-227sitdpzf7h-network-avz6u6xkan37-extrouter-2lepbjca3kgp | ACTIVE | UP    | 21b4ae3a2ea44bc5a9c14005ed2963af |
    >   | baa42c04-ac18-4f15-ae35-1abf4429d959 | aglais-k8s-20201118-cluster-4uhxn4rgy7me-network-guolmzzhqifn-extrouter-k4s33gbnqln4 | ACTIVE | UP    | 21b4ae3a2ea44bc5a9c14005ed2963af |
    >   | f80b813e-02d1-4232-ad27-334588710507 | ceph-router                                                                          | ACTIVE | UP    | 21b4ae3a2ea44bc5a9c14005ed2963af |
    >   | f8202b18-6cdf-4907-8409-161eb2f9760f | ceph-router                                                                          | ACTIVE | UP    | 21b4ae3a2ea44bc5a9c14005ed2963af |
    >   +--------------------------------------+--------------------------------------------------------------------------------------+--------+-------+----------------------------------+

    Our create script uses the same name each time, 'ceph-router', so we end up with two routers with the same name.
    With no obvious way to link 'ceph-router' back to the cluster it was created for.

    So we should use the cluster name 'aglais-k8s-20201118-cluster' as part of our router name.
    Or, following the Openstack pattern, the stack name, 'aglais-k8s-20201118-cluster-227sitdpzf7h'.
    However, if we do that then we need to use a complex test find the external router.


    openstack\
        --os-cloud "${cloudname:?}" \
        router list \
            --format json \
    | jq '.[] | select(.Name | startswith("'${stackname:?}'")) | select(.Name | test("extrouter"))'

    >   {
    >     "ID": "670d2ca6-c487-4618-9f23-858ff9029d32",
    >     "Name": "aglais-k8s-20201118-cluster-227sitdpzf7h-network-avz6u6xkan37-extrouter-2lepbjca3kgp",
    >     "Status": "ACTIVE",
    >     "State": true,
    >     "Project": "21b4ae3a2ea44bc5a9c14005ed2963af"
    >   }


    Which means we can use "${stackname:?}-ceph-router" to name our router.





