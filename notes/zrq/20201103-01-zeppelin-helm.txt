#
# <meta:header>
#   <meta:licence>
#     Copyright (c) 2020, ROE (http://www.roe.ac.uk/)
#
#     This information is free software: you can redistribute it and/or modify
#     it under the terms of the GNU General Public License as published by
#     the Free Software Foundation, either version 3 of the License, or
#     (at your option) any later version.
#
#     This information is distributed in the hope that it will be useful,
#     but WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#     GNU General Public License for more details.
#
#     You should have received a copy of the GNU General Public License
#     along with this program.  If not, see <http://www.gnu.org/licenses/>.
#   </meta:licence>
# </meta:header>
#
#


    Target:

        Install Zeppelin chart.

    Sources:

        Previous notes
        20201027-01-helm-main.txt

    Result:

        Working Zeppelin.


# -----------------------------------------------------
# Create a container to work with.
#[user@desktop]

    source "${HOME}/aglais.env"

    podman run \
        --rm \
        --tty \
        --interactive \
        --hostname kubernator \
        --env "cloudname=${AGLAIS_CLOUD:?}" \
        --env "clustername=${CLUSTER_NAME:?}" \
        --volume "${HOME}/clouds.yaml:/etc/openstack/clouds.yaml:z" \
        --volume "${AGLAIS_CODE:?}/experiments/zrq/helm:/helm:z" \
        atolmis/openstack-client \
        bash


# -----------------------------------------------------
# Get the connection details for our cluster.
#[user@kubernator]

    mkdir -p "${HOME}/.kube"
    openstack \
        --os-cloud "${cloudname:?}" \
        coe cluster config \
            "${clustername:?}" \
                --force \
                --dir "${HOME}/.kube"


    kubectl \
        cluster-info

    >   Kubernetes master is running at https://....
    >   Heapster is running at https://....
    >   CoreDNS is running at https://....



# -----------------------------------------------------
# Set the chart values.
#[user@kubernator]

    zepphost=zeppelin.metagrid.xyz

    cat > "/tmp/zeppelin-values.yaml" << EOF

zeppelin_server_hostname: "${zepphost:?}"

EOF


# -----------------------------------------------------
# Fetch the chart dependencies.
#[user@kubernator]

    helm dependency update \
        "/helm/aglais/tools/zeppelin"

    >   -


# -----------------------------------------------------
# Update (install) our deployment.
# Use 'upgrade --install' to make the command idempotent
#[user@kubernator]

    namespace=${clustername,,}
    chartname=aglais-zeppelin

    helm upgrade \
        --debug \
        --install \
        --create-namespace \
        --namespace "${namespace:?}" \
        "${chartname:?}" \
        "/helm/aglais/tools/zeppelin" \
        --values "/tmp/zeppelin-values.yaml"

    >   history.go:52: [debug] getting history for release aglais-zeppelin
    >   upgrade.go:121: [debug] preparing upgrade for aglais-zeppelin
    >   upgrade.go:129: [debug] performing update for aglais-zeppelin
    >   upgrade.go:308: [debug] creating upgraded release for aglais-zeppelin
    >   client.go:173: [debug] checking 8 resources for changes
    >   client.go:440: [debug] Looks like there are no changes for ServiceAccount "zeppelin-server-account"
    >   client.go:440: [debug] Looks like there are no changes for ConfigMap "zeppelin-nginx-config"
    >   client.go:440: [debug] Looks like there are no changes for ConfigMap "zeppelin-server-config"
    >   client.go:440: [debug] Looks like there are no changes for Role "zeppelin-server-role"
    >   client.go:440: [debug] Looks like there are no changes for RoleBinding "zeppelin-server-role-binding"
    >   client.go:440: [debug] Looks like there are no changes for Service "zeppelin-server-service"
    >   client.go:194: [debug] Created a new Ingress called "zeppelin-server-ingress" in tiberius-20201028
    >   
    >   upgrade.go:136: [debug] updating status for upgraded release for aglais-zeppelin
    >   Release "aglais-zeppelin" has been upgraded. Happy Helming!
    >   NAME: aglais-zeppelin
    >   LAST DEPLOYED: Tue Nov  3 19:32:35 2020
    >   NAMESPACE: tiberius-20201028
    >   STATUS: deployed
    >   REVISION: 3
    >   TEST SUITE: None
    >   USER-SUPPLIED VALUES:
    >   zeppelin_server_hostname: zeppelin.metagrid.xyz
    >   
    >   COMPUTED VALUES:
    >   spark_worker_image: aglais/pyspark-mod:latest
    >   zeppelin_server_hostname: zeppelin.metagrid.xyz
    >   zeppelin_server_image: aglais/zeppelin-mod:latest
    >   zeppelin_server_tlscert: zeppelin-tls-secret
    >   
    >   HOOKS:
    >   MANIFEST:
    >   ---
    >   # Source: aglais-zeppelin/templates/zeppelin-server-account.yaml
    >   apiVersion: v1
    >   kind: ServiceAccount
    >   metadata:
    >     name: zeppelin-server-account
    >     labels:
    >       aglais.name: "aglais-zeppelin-zeppelin-server-account"
    >       helm.sh/chart:  "aglais-zeppelin-0.0.1"
    >       app.kubernetes.io/name: "aglais-zeppelin"
    >       app.kubernetes.io/instance: "aglais-zeppelin"
    >       app.kubernetes.io/version: "0.0.1"
    >       app.kubernetes.io/managed-by: "Helm"
    >   ---
    >   # Source: aglais-zeppelin/templates/zeppelin-nginx-config.yaml
    >   apiVersion: v1
    >   kind: ConfigMap
    >   metadata:
    >     name: zeppelin-nginx-config
    >     labels:
    >       aglais.name: "aglais-zeppelin-zeppelin-nginx-config"
    >       helm.sh/chart:  "aglais-zeppelin-0.0.1"
    >       app.kubernetes.io/name: "aglais-zeppelin"
    >       app.kubernetes.io/instance: "aglais-zeppelin"
    >       app.kubernetes.io/version: "0.0.1"
    >       app.kubernetes.io/managed-by: "Helm"
    >   data:
    >     nginx.conf: |
    >       daemon off;
    >       worker_processes auto;
    >       events {
    >         worker_connections 1024;
    >       }
    >       http {
    >         map $http_upgrade $connection_upgrade {
    >           default upgrade;
    >           '' close;
    >         }
    >   
    >         # first server block will be default. Proxy zeppelin server.
    >         server {
    >           listen 80;
    >           location / {
    >             proxy_pass http://localhost:8080;
    >             proxy_set_header Host $host;
    >             proxy_http_version 1.1;
    >             proxy_set_header Upgrade $http_upgrade;
    >             proxy_set_header Connection $connection_upgrade;
    >             proxy_redirect http://localhost $scheme://SERVICE_DOMAIN;
    >           }
    >         }
    >   
    >         # match request domain [port]-[service].[serviceDomain]
    >         # proxy extra service such as spark-ui
    >         server {
    >           listen 80;
    >           server_name "~(?<svc_port>[0-9]+)-(?<svc_name>[^.]*)\.(.*)";
    >           location / {
    >             resolver 127.0.0.1:53 ipv6=off;
    >             proxy_pass http://$svc_name.NAMESPACE.svc:$svc_port;
    >             proxy_set_header Host $host;
    >             proxy_http_version 1.1;
    >             proxy_set_header Upgrade $http_upgrade;
    >             proxy_set_header Connection $connection_upgrade;
    >             proxy_redirect http://localhost $scheme://SERVICE_DOMAIN;
    >   
    >             # redirect rule for spark ui. 302 redirect response misses port number of service domain
    >             proxy_redirect ~(http:[/]+[0-9]+[-][^-]+[-][^.]+)[^/]+(\/jobs.*) $1.SERVICE_DOMAIN$2;
    >           }
    >         }
    >       }
    >   ---
    >   # Source: aglais-zeppelin/templates/zeppelin-server-conf.yaml
    >   apiVersion: v1
    >   kind: ConfigMap
    >   metadata:
    >     name: zeppelin-server-config
    >     labels:
    >       aglais.name: "aglais-zeppelin-zeppelin-server-config"
    >       helm.sh/chart:  "aglais-zeppelin-0.0.1"
    >       app.kubernetes.io/name: "aglais-zeppelin"
    >       app.kubernetes.io/instance: "aglais-zeppelin"
    >       app.kubernetes.io/version: "0.0.1"
    >       app.kubernetes.io/managed-by: "Helm"
    >   data:
    >     # 'serviceDomain' is a Domain name to use for accessing Zeppelin UI.
    >     # Should point IP address of 'zeppelin-server' service.
    >     #
    >     # Wildcard subdomain need to be point the same IP address to access service inside of Pod (such as SparkUI).
    >     # i.e. if service domain is 'local.zeppelin-project.org', DNS configuration should make 'local.zeppelin-project.org' and '*.local.zeppelin-project.org' point the same address.
    >     #
    >     # Default value is 'local.zeppelin-project.org' while it points 127.0.0.1 and `kubectl port-forward zeppelin-server` will give localhost to connects.
    >     # If you have your ingress controller configured to connect to `zeppelin-server` service and have a domain name for it (with wildcard subdomain point the same address), you can replace serviceDomain field with your own domain.
    >     SERVICE_DOMAIN: local.zeppelin-project.org:8080
    >   
    >     ZEPPELIN_K8S_SPARK_CONTAINER_IMAGE: "aglais/pyspark-mod:latest"
    >     ZEPPELIN_K8S_CONTAINER_IMAGE: "aglais/zeppelin-mod:latest"
    >     # This needs to match the name set in zeppelin-server-service.yaml
    >     ZEPPELIN_K8S_SERVICE_NAME: zeppelin-server-service
    >   
    >     ZEPPELIN_HOME: /zeppelin
    >     ZEPPELIN_SERVER_RPC_PORTRANGE: 12320:12320
    >   
    >     # default value of 'master' property for spark interpreter.
    >     SPARK_MASTER: k8s://https://kubernetes.default.svc
    >     # default value of 'SPARK_HOME' property for spark interpreter.
    >     SPARK_HOME: /spark
    >   ---
    >   # Source: aglais-zeppelin/templates/zeppelin-server-account.yaml
    >   kind: Role
    >   apiVersion: rbac.authorization.k8s.io/v1
    >   metadata:
    >     name: zeppelin-server-role
    >     labels:
    >       aglais.name: "aglais-zeppelin-zeppelin-server-role"
    >       helm.sh/chart:  "aglais-zeppelin-0.0.1"
    >       app.kubernetes.io/name: "aglais-zeppelin"
    >       app.kubernetes.io/instance: "aglais-zeppelin"
    >       app.kubernetes.io/version: "0.0.1"
    >       app.kubernetes.io/managed-by: "Helm"
    >   rules:
    >   - apiGroups: [""]
    >     resources: ["pods", "services"]
    >     verbs: ["create", "get", "update", "patch", "list", "delete", "watch"]
    >   - apiGroups: ["rbac.authorization.k8s.io"]
    >     resources: ["roles", "rolebindings"]
    >     verbs: ["bind", "create", "get", "update", "patch", "list", "delete", "watch"]
    >   ---
    >   # Source: aglais-zeppelin/templates/zeppelin-server-account.yaml
    >   kind: RoleBinding
    >   apiVersion: rbac.authorization.k8s.io/v1
    >   metadata:
    >     name: zeppelin-server-role-binding
    >     labels:
    >       aglais.name: "aglais-zeppelin-zeppelin-server-binding"
    >       helm.sh/chart:  "aglais-zeppelin-0.0.1"
    >       app.kubernetes.io/name: "aglais-zeppelin"
    >       app.kubernetes.io/instance: "aglais-zeppelin"
    >       app.kubernetes.io/version: "0.0.1"
    >       app.kubernetes.io/managed-by: "Helm"
    >   subjects:
    >   - kind: ServiceAccount
    >     name: zeppelin-server-account
    >   roleRef:
    >     kind: Role
    >     name: zeppelin-server-role
    >     apiGroup: rbac.authorization.k8s.io
    >   ---
    >   # Source: aglais-zeppelin/templates/zeppelin-server-service.yaml
    >   kind: Service
    >   apiVersion: v1
    >   metadata:
    >     name: zeppelin-server-service # This must match ZEPPELIN_K8S_SERVICE_NAME config property.
    >     labels:
    >       aglais.name: "aglais-zeppelin-zeppelin-server-service"
    >       helm.sh/chart:  "aglais-zeppelin-0.0.1"
    >       app.kubernetes.io/name: "aglais-zeppelin"
    >       app.kubernetes.io/instance: "aglais-zeppelin"
    >       app.kubernetes.io/version: "0.0.1"
    >       app.kubernetes.io/managed-by: "Helm"
    >   spec:
    >     ports:
    >       - name: http
    >         port: 80
    >       - name: rpc # port name is referenced in the code. So it shouldn't be changed.
    >         port: 12320
    >     selector:
    >       app.kubernetes.io/name: zeppelin-server-pods
    >   ---
    >   # Source: aglais-zeppelin/templates/zeppelin-server-deploy.yaml
    >   apiVersion: apps/v1
    >   kind: Deployment
    >   metadata:
    >     name: zeppelin-server-deploy
    >     labels:
    >       app.kubernetes.io/name: zeppelin-server-deploy
    >       aglais.name: "aglais-zeppelin-zeppelin-server-deploy"
    >       helm.sh/chart:  "aglais-zeppelin-0.0.1"
    >       app.kubernetes.io/name: "aglais-zeppelin"
    >       app.kubernetes.io/instance: "aglais-zeppelin"
    >       app.kubernetes.io/version: "0.0.1"
    >       app.kubernetes.io/managed-by: "Helm"
    >   spec:
    >     replicas: 1
    >     selector:
    >       matchLabels:
    >         app.kubernetes.io/name: zeppelin-server-pods
    >     strategy:
    >       type: RollingUpdate
    >     template:
    >       metadata:
    >         labels:
    >           app.kubernetes.io/name: zeppelin-server-pods
    >       spec:
    >         serviceAccountName: zeppelin-server-account
    >         volumes:
    >         - name: nginx-conf
    >           configMap:
    >             name: zeppelin-nginx-config
    >             items:
    >             - key: nginx.conf
    >               path: nginx.conf
    >         containers:
    >         - name: zeppelin-server-actual
    >           image: "aglais/zeppelin-mod:latest"
    >           command: ["sh", "-c", "$(ZEPPELIN_HOME)/bin/zeppelin.sh"]
    >           lifecycle:
    >             preStop:
    >               exec:
    >                 # SIGTERM triggers a quick exit; gracefully terminate instead
    >                 command: ["sh", "-c", "ps -ef | grep org.apache.zeppelin.server.ZeppelinServer | grep -v grep | awk '{print $2}' | xargs kill"]
    >           ports:
    >           - name: http
    >             containerPort: 8080
    >           - name: https
    >             containerPort: 8443
    >           - name: rpc
    >             containerPort: 12320
    >           env:
    >           - name: POD_UID
    >             valueFrom:
    >               fieldRef:
    >                 apiVersion: v1
    >                 fieldPath: metadata.uid
    >           - name: POD_NAME
    >             valueFrom:
    >               fieldRef:
    >                 apiVersion: v1
    >                 fieldPath: metadata.name
    >           envFrom:
    >           - configMapRef:
    >               name: zeppelin-server-config
    >         # volumeMounts:
    >         #  - name: zeppelin-server-notebook-volume     # configure this to persist notebook
    >         #    mountPath: /zeppelin/notebook
    >         #  - name: zeppelin-server-conf                # configure this to persist Zeppelin configuration
    >         #    mountPath: /zeppelin/conf
    >         #  - name: zeppelin-server-custom-k8s          # configure this to mount customized Kubernetes spec for interpreter
    >         #    mountPath: /zeppelin/k8s
    >         - name: zeppelin-server-nginx
    >           image: nginx:1.14.0
    >           command: ["/bin/sh", "-c"]
    >           env:
    >           - name: SERVICE_DOMAIN
    >             valueFrom:
    >               configMapKeyRef:
    >                 name: zeppelin-server-config
    >                 key: SERVICE_DOMAIN
    >           args:
    >             - cp -f /tmp/conf/nginx.conf /etc/nginx/nginx.conf;
    >               sed -i -e "s/SERVICE_DOMAIN/$SERVICE_DOMAIN/g" /etc/nginx/nginx.conf;
    >               sed -i -e "s/NAMESPACE/$(cat /var/run/secrets/kubernetes.io/serviceaccount/namespace)/g" /etc/nginx/nginx.conf;
    >               cat /etc/nginx/nginx.conf;
    >               /usr/sbin/nginx
    >           volumeMounts:
    >             - name: nginx-conf
    >               mountPath: /tmp/conf
    >           lifecycle:
    >             preStop:
    >               exec:
    >                 # SIGTERM triggers a quick exit; gracefully terminate instead
    >                 command: ["/usr/sbin/nginx", "-s", "quit"]
    >         - name: zeppelin-server-dnsmasq  # nginx requires dns resolver for dynamic dns resolution
    >           image: "janeczku/go-dnsmasq:release-1.0.5"
    >           args:
    >             - --listen
    >             - "127.0.0.1:53"
    >             - --default-resolver
    >             - --append-search-domains
    >             - --hostsfile=/etc/hosts
    >             - --verbose
    >   ---
    >   # Source: aglais-zeppelin/templates/zeppelin-server-ingress.yaml
    >   apiVersion: networking.k8s.io/v1beta1
    >   kind: Ingress
    >   metadata:
    >     name: zeppelin-server-ingress
    >     annotations:
    >       kubernetes.io/ingress.class: nginx
    >       nginx.ingress.kubernetes.io/ssl-passthrough: "false"
    >       nginx.ingress.kubernetes.io/ssl-redirect: "true"
    >     labels:
    >       aglais.name: "aglais-zeppelin-zeppelin-server-ingress"
    >       helm.sh/chart:  "aglais-zeppelin-0.0.1"
    >       app.kubernetes.io/name: "aglais-zeppelin"
    >       app.kubernetes.io/instance: "aglais-zeppelin"
    >       app.kubernetes.io/version: "0.0.1"
    >       app.kubernetes.io/managed-by: "Helm"
    >   spec:
    >     tls:
    >       - hosts:
    >         - "zeppelin.metagrid.xyz"
    >         secretName: "zeppelin-tls-secret"
    >     rules:
    >       - host: "zeppelin.metagrid.xyz"
    >         http:
    >           paths:
    >           - path: /
    >             backend:
    >               serviceName: zeppelin-server-service
    >               servicePort: 80
    >   ---
    >   # Source: aglais-zeppelin/templates/zeppelin-nginx-config.yaml
    >   #
    >   # Licensed to the Apache Software Foundation (ASF) under one or more
    >   # contributor license agreements.  See the NOTICE file distributed with
    >   # this work for additional information regarding copyright ownership.
    >   # The ASF licenses this file to You under the Apache License, Version 2.0
    >   # (the "License"); you may not use this file except in compliance with
    >   # the License.  You may obtain a copy of the License at
    >   #
    >   #    http://www.apache.org/licenses/LICENSE-2.0
    >   #
    >   # Unless required by applicable law or agreed to in writing, software
    >   # distributed under the License is distributed on an "AS IS" BASIS,
    >   # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    >   # See the License for the specific language governing permissions and
    >   # limitations under the License.
    >   #
    >   ---
    >   # Source: aglais-zeppelin/templates/zeppelin-server-account.yaml
    >   #
    >   # Licensed to the Apache Software Foundation (ASF) under one or more
    >   # contributor license agreements.  See the NOTICE file distributed with
    >   # this work for additional information regarding copyright ownership.
    >   # The ASF licenses this file to You under the Apache License, Version 2.0
    >   # (the "License"); you may not use this file except in compliance with
    >   # the License.  You may obtain a copy of the License at
    >   #
    >   #    http://www.apache.org/licenses/LICENSE-2.0
    >   #
    >   # Unless required by applicable law or agreed to in writing, software
    >   # distributed under the License is distributed on an "AS IS" BASIS,
    >   # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    >   # See the License for the specific language governing permissions and
    >   # limitations under the License.
    >   #
    >   ---
    >   # Source: aglais-zeppelin/templates/zeppelin-server-conf.yaml
    >   #
    >   # Licensed to the Apache Software Foundation (ASF) under one or more
    >   # contributor license agreements.  See the NOTICE file distributed with
    >   # this work for additional information regarding copyright ownership.
    >   # The ASF licenses this file to You under the Apache License, Version 2.0
    >   # (the "License"); you may not use this file except in compliance with
    >   # the License.  You may obtain a copy of the License at
    >   #
    >   #    http://www.apache.org/licenses/LICENSE-2.0
    >   #
    >   # Unless required by applicable law or agreed to in writing, software
    >   # distributed under the License is distributed on an "AS IS" BASIS,
    >   # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    >   # See the License for the specific language governing permissions and
    >   # limitations under the License.
    >   #
    >   ---
    >   # Source: aglais-zeppelin/templates/zeppelin-server-deploy.yaml
    >   #
    >   # Licensed to the Apache Software Foundation (ASF) under one or more
    >   # contributor license agreements.  See the NOTICE file distributed with
    >   # this work for additional information regarding copyright ownership.
    >   # The ASF licenses this file to You under the Apache License, Version 2.0
    >   # (the "License"); you may not use this file except in compliance with
    >   # the License.  You may obtain a copy of the License at
    >   #
    >   #    http://www.apache.org/licenses/LICENSE-2.0
    >   #
    >   # Unless required by applicable law or agreed to in writing, software
    >   # distributed under the License is distributed on an "AS IS" BASIS,
    >   # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    >   # See the License for the specific language governing permissions and
    >   # limitations under the License.
    >   #
    >   ---
    >   # Source: aglais-zeppelin/templates/zeppelin-server-ingress.yaml
    >   #
    >   # <meta:header>
    >   #   <meta:licence>
    >   #     Copyright (c) 2020, ROE (http://www.roe.ac.uk/)
    >   #
    >   #     This information is free software: you can redistribute it and/or modify
    >   #     it under the terms of the GNU General Public License as published by
    >   #     the Free Software Foundation, either version 3 of the License, or
    >   #     (at your option) any later version.
    >   #
    >   #     This information is distributed in the hope that it will be useful,
    >   #     but WITHOUT ANY WARRANTY; without even the implied warranty of
    >   #     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    >   #     GNU General Public License for more details.
    >   #
    >   #     You should have received a copy of the GNU General Public License
    >   #     along with this program.  If not, see <http://www.gnu.org/licenses/>.
    >   #   </meta:licence>
    >   # </meta:header>
    >   #
    >   # https://github.com/kubernetes/ingress-nginx/tree/master/docs/examples/tls-termination#deployment
    >   # https://github.com/kubernetes/ingress-nginx/tree/master/docs/examples/tls-termination#validation
    >   #
    >   ---
    >   # Source: aglais-zeppelin/templates/zeppelin-server-service.yaml
    >   #
    >   # Licensed to the Apache Software Foundation (ASF) under one or more
    >   # contributor license agreements.  See the NOTICE file distributed with
    >   # this work for additional information regarding copyright ownership.
    >   # The ASF licenses this file to You under the Apache License, Version 2.0
    >   # (the "License"); you may not use this file except in compliance with
    >   # the License.  You may obtain a copy of the License at
    >   #
    >   #    http://www.apache.org/licenses/LICENSE-2.0
    >   #
    >   # Unless required by applicable law or agreed to in writing, software
    >   # distributed under the License is distributed on an "AS IS" BASIS,
    >   # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    >   # See the License for the specific language governing permissions and
    >   # limitations under the License.
    >   #
    >   
    >   NOTES:
    >   TODO - add some notes ...


# -----------------------------------------------------
# -----------------------------------------------------
# Login to Zeppelin and test ...
#[user@desktop]

    firefox --new-window "https://zeppelin.metagrid.xyz/" &

    #
    # Yay - works.
    #

