#
# <meta:header>
#   <meta:licence>
#     Copyright (c) 2020, ROE (http://www.roe.ac.uk/)
#
#     This information is free software: you can redistribute it and/or modify
#     it under the terms of the GNU General Public License as published by
#     the Free Software Foundation, either version 3 of the License, or
#     (at your option) any later version.
#
#     This information is distributed in the hope that it will be useful,
#     but WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#     GNU General Public License for more details.
#
#     You should have received a copy of the GNU General Public License
#     along with this program.  If not, see <http://www.gnu.org/licenses/>.
#   </meta:licence>
# </meta:header>
#
#


# -----------------------------------------------------
# Create a container to work with.
#[user@desktop]

    source "${HOME}/aglais.env"

    podman run \
        --rm \
        --tty \
        --interactive \
        --hostname kubernator \
        --env "cloudname=${AGLAIS_CLOUD:?}" \
        --env "clustername=${CLUSTER_NAME:?}" \
        --volume "${HOME}/clouds.yaml:/etc/openstack/clouds.yaml:z" \
        atolmis/openstack-client \
        bash


# -----------------------------------------------------
# Get the connection details for our cluster.
#[user@kubernator]

    mkdir -p "${HOME}/.kube"
    openstack \
        --os-cloud "${cloudname:?}" \
        coe cluster config \
            "${clustername:?}" \
                --force \
                --dir "${HOME}/.kube"


    kubectl \
        cluster-info

    >   Kubernetes master is running at https://....
    >   Heapster is running at https://....
    >   CoreDNS is running at https://....


# -----------------------------------------------------
# Set the Manila API version.
# https://stackoverflow.com/a/58806536
#[user@kubernator]

    export OS_SHARE_API_VERSION=2.51

# -----------------------------------------------------
# Identify the target share.
#[user@kubernator]

    openstack \
        --os-cloud "${cloudname:?}" \
            share list

    >   +--------------------------------------+----------------+------+-------------+-----------+-----------+------------------+------+-------------------+
    >   | ID                                   | Name           | Size | Share Proto | Status    | Is Public | Share Type Name  | Host | Availability Zone |
    >   +--------------------------------------+----------------+------+-------------+-----------+-----------+------------------+------+-------------------+
    >   | ad1d9ca2-5b1c-4064-8c74-695286de6098 | gaia-dr2-share | 4399 | CEPHFS      | available | True      | cephfsnativetype |      | nova              |
    >   +--------------------------------------+----------------+------+-------------+-----------+-----------+------------------+------+-------------------+


    shareid=$(
        openstack \
            --os-cloud "${cloudname:?}" \
                share list \
                --format json \
        | jq -r '.[] | select(.Name == "gaia-dr2-share") | .ID'
        )

    echo "Share [${shareid:?}]"

    >   Share [ad1d9ca2-5b1c-4064-8c74-695286de6098]


# -----------------------------------------------------
# Identify the read-only access rule for our share.
#[user@kubernator]

    openstack \
        --os-cloud "${cloudname:?}" \
            share access list \
                "${shareid:?}"

    >   +--------------------------------------+-------------+----------------+--------------+--------+------------------------------------------+----------------------------+----------------------------+
    >   | id                                   | access_type | access_to      | access_level | state  | access_key                               | created_at                 | updated_at                 |
    >   +--------------------------------------+-------------+----------------+--------------+--------+------------------------------------------+----------------------------+----------------------------+
    >   | b6f44adf-2b00-481d-bfb2-99398af5c2de | cephx       | gaia-dr2-share | ro           | active | AQALYUhf1YHlEBAA0bhLz6UwEk478y1EAvVplQ== | 2020-08-28T01:42:34.000000 | 2020-08-28T01:42:35.000000 |
    >   +--------------------------------------+-------------+----------------+--------------+--------+------------------------------------------+----------------------------+----------------------------+


    accessid=$(
        openstack \
            --os-cloud "${cloudname:?}" \
            share access list \
                "${shareid:?}" \
                --format json \
        | jq -r '.[] | select(.access_level == "ro") | .id'
        )

    echo "Access rule [${accessid:?}]"

    >   Access rule [b6f44adf-2b00-481d-bfb2-99398af5c2de]


# -----------------------------------------------------
# Create a PersistentVolume, using the kube-system/os-trustee Secret.
#[user@kubernator]

    cat > "/tmp/gaiadr2-volume.yaml" << EOF
apiVersion: v1
kind: PersistentVolume
metadata:
  name: gaiadr2-volume
  labels:
    name: gaiadr2-volume
spec:
  accessModes:
  - ReadOnlyMany
  capacity:
    storage: 4399Gi
  csi:
    driver: cephfs.manila.csi.openstack.org
    nodeStageSecretRef:
      name: os-trustee
      namespace: kube-system
    nodePublishSecretRef:
      name: os-trustee
      namespace: kube-system
    volumeHandle: gaiadr2-handle
    volumeAttributes:
      shareID: ${shareid:?}
      shareAccessID: ${accessid:?}
EOF

    kubectl apply \
        --filename "/tmp/gaiadr2-volume.yaml"

    kubectl describe \
        persistentvolume \
            gaiadr2-volume

    >   Name:            gaiadr2-volume
    >   Labels:          name=gaiadr2-volume
    >   Annotations:     kubectl.kubernetes.io/last-applied-configuration:
    >                      {"apiVersion":"v1","kind":"PersistentVolume","metadata":{"annotations":{},"labels":{"name":"gaiadr2-volume"},"name":"gaiadr2-volume"},"spe...
    >   Finalizers:      [kubernetes.io/pv-protection]
    >   StorageClass:
    >   Status:          Available
    >   Claim:
    >   Reclaim Policy:  Retain
    >   Access Modes:    RWX
    >   VolumeMode:      Filesystem
    >   Capacity:        4Gi
    >   Node Affinity:   <none>
    >   Message:
    >   Source:
    >       Type:              CSI (a Container Storage Interface (CSI) volume source)
    >       Driver:            cephfs.manila.csi.openstack.org
    >       VolumeHandle:      gaiadr2-handle
    >       ReadOnly:          false
    >       VolumeAttributes:      shareAccessID=b6f44adf-2b00-481d-bfb2-99398af5c2de
    >                              shareID=ad1d9ca2-5b1c-4064-8c74-695286de6098
    >   Events:                <none>


# -----------------------------------------------------
# Create our PersistentVolumeClaim.
#[user@kubernator]

    cat > "/tmp/gaiadr2-claim.yaml" << EOF
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: gaiadr2-claim
spec:
  accessModes:
  - ReadOnlyMany
  resources:
    requests:
      storage: 3Gi
  selector:
    matchExpressions:
    - key: name
      operator: In
      values: ["gaiadr2-volume"]
EOF

    kubectl apply \
        --filename "/tmp/gaiadr2-claim.yaml"

    kubectl describe \
        persistentvolumeclaim \
            gaiadr2-claim

    >   Name:          gaiadr2-claim
    >   Namespace:     default
    >   StorageClass:
    >   Status:        Bound
    >   Volume:        gaiadr2-volume
    >   Labels:        <none>
    >   Annotations:   kubectl.kubernetes.io/last-applied-configuration:
    >                    {"apiVersion":"v1","kind":"PersistentVolumeClaim","metadata":{"annotations":{},"name":"gaiadr2-claim","namespace":"default"},"spec":{"acce...
    >                  pv.kubernetes.io/bind-completed: yes
    >                  pv.kubernetes.io/bound-by-controller: yes
    >   Finalizers:    [kubernetes.io/pvc-protection]
    >   Capacity:      4Gi
    >   Access Modes:  RWX
    >   VolumeMode:    Filesystem
    >   Mounted By:    <none>
    >   Events:        <none>






