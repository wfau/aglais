#
# <meta:header>
#   <meta:licence>
#     Copyright (c) 2020, ROE (http://www.roe.ac.uk/)
#
#     This information is free software: you can redistribute it and/or modify
#     it under the terms of the GNU General Public License as published by
#     the Free Software Foundation, either version 3 of the License, or
#     (at your option) any later version.
#
#     This information is distributed in the hope that it will be useful,
#     but WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#     GNU General Public License for more details.
#
#     You should have received a copy of the GNU General Public License
#     along with this program.  If not, see <http://www.gnu.org/licenses/>.
#   </meta:licence>
# </meta:header>
#
#


# -----------------------------------------------------
# Create our cloud YAML file.
#[user@desktop]

cat > "${HOME}/clouds.yaml" << EOF

clouds:

  gaia-dev:
    auth:
      auth_url: https://cumulus.openstack.hpc.cam.ac.uk:5000/v3
      application_credential_id:     '$(secret 'zrq-gaia-dev.CREDENTIAL_ID')'
      application_credential_secret: '$(secret 'zrq-gaia-dev.CREDENTIAL_SECRET')'
    region_name: "RegionOne"
    interface: "public"
    identity_api_version: 3
    auth_type: "v3applicationcredential"

  gaia-dev-super:
    auth:
      auth_url: https://cumulus.openstack.hpc.cam.ac.uk:5000/v3
      application_credential_id:     '$(secret 'zrq-gaia-dev-super.CREDENTIAL_ID')'
      application_credential_secret: '$(secret 'zrq-gaia-dev-super.CREDENTIAL_SECRET')'
    region_name: "RegionOne"
    interface: "public"
    identity_api_version: 3
    auth_type: "v3applicationcredential"

  gaia-prod:
    auth:
      auth_url: https://cumulus.openstack.hpc.cam.ac.uk:5000/v3
      application_credential_id:     '$(secret 'zrq-gaia-prod.CREDENTIAL_ID')'
      application_credential_secret: '$(secret 'zrq-gaia-prod.CREDENTIAL_SECRET')'
    region_name: "RegionOne"
    interface: "public"
    identity_api_version: 3
    auth_type: "v3applicationcredential"

  gaia-prod-super:
    auth:
      auth_url: https://cumulus.openstack.hpc.cam.ac.uk:5000/v3
      application_credential_id:     '$(secret 'zrq-gaia-prod-super.CREDENTIAL_ID')'
      application_credential_secret: '$(secret 'zrq-gaia-prod-super.CREDENTIAL_SECRET')'
    region_name: "RegionOne"
    interface: "public"
    identity_api_version: 3
    auth_type: "v3applicationcredential"

EOF


# -----------------------------------------------------
# Create a container to work with.
#[user@desktop]

    docker run \
        --rm \
        --tty \
        --interactive \
        --hostname openstacker \
        --volume "${HOME}/clouds.yaml:/root/clouds.yaml" \
        atolmis/openstack-client \
        bash

    >   docker: Error response from daemon: OCI runtime create failed: container_linux.go:346: starting container process caused "process_linux.go:297: applying cgroup configuration for process caused \"open /sys/fs/cgroup/docker/cpuset.cpus.effective: no such file or directory\"": unknown.

    #
    # Ok, things are never easy ....
    #

    #
    # Installing docker on Fedora 31
    # https://medium.com/@drpdishant/installing-docker-on-fedora-31-a073db823bb8

        "... running the docker container will throw some error as follows:"

        This is beacaue Fedora 31 uses cgroups v2 by default and docker doesn’t
        yet support cgroupsv2, which may be added soon as docker is most used
        container runtime.

        In this tutorial I am going to show you how to install docker and change
        cgroups to v1 as a quick fix to run docker.

    #
    # Starting container process caused "...."
    # https://github.com/microsoft/vscode-docker/issues/1402

    #
    # Upgraded to Fedora 31 - Docker will not work
    # https://www.reddit.com/r/linuxquestions/comments/dn2psl/upgraded_to_fedora_31_docker_will_not_work/


        Enablement of the CgroupsV2 by default will allow tools like systemd, container tools and libvirt
        to take advantage of the new features and many fixes in Cgroups V1. A lot of the functionality in
        VGroups V1 has been rewritten to fix fundamental flaws in its design.

        The reason CGroupsV2 by default has been blocked is that the Container tools and someone the
        Virtualization tools did not have support. We believe that the time is right to try to move these
        tools along to take advantage of this kernel feature. In order to begin testing these features more
        widely we believe we need to have a platform like Rawhide to test on and get others to test as well.

        The main features of CgroupsV2 we would like to take advantage of in the container world is delegation
        of cgroup hierarchies. Allowing tools like podman to be able to use CGroups in rootless mode, would be
        a large advance."

    #
    # The current adoption status of cgroup v2 in containers
    # https://medium.com/nttlabs/cgroup-v2-596d035be4d7

        Fedora 31 was released on October 29, 2019. This is the first major distro that comes
        with cgroup v2 (aka unified hierarchy) enabled by default, 5 years after it first appeared
        in Linux kernel 3.16 (Aug 3, 2014).

        TL;DR if you just want to start Docker on Fedora 31 right now

        Run the following command and reboot:

            sudo dnf install -y grubby
            sudo grubby \
                --update-kernel=ALL \
                --args=”systemd.unified_cgroup_hierarchy=0"

        This command reverts the systemd configuration to use cgroup v1. Other cgroup-v1-based container
        software including Kubernetes require this command as well.

        Or if you don’t want to rollback cgroup version, you can try Podman instead of Docker.

    #
    # Docker package no longer available and will not run by default (due to switch to cgroups v2)
    # https://fedoraproject.org/wiki/Common_F31_bugs#Other_software_issues

        The Docker package has been removed from Fedora 31. It has been replaced by the upstream
        package moby-engine, which includes the Docker CLI as well as the Docker Engine.

        However, we recommend instead that you use podman, which is a Cgroups v2-compatible container
        engine whose CLI is compatible with Docker's.

        Fedora 31 uses Cgroups v2 by default. The moby-engine package does not support Cgroups v2 yet,
        so if you need to run the moby-engine or run the Docker CE package, then you need to switch
        the system to using Cgroups v1, by passing the kernel parameter systemd.unified_cgroup_hierarchy=0.

        To do this permanently, run:

            sudo grubby --update-kernel=ALL --args="systemd.unified_cgroup_hierarchy=0"


    #
    # Rootless mode (Experimental)
    # https://github.com/moby/moby/blob/9e7d5ac5ea55dc57185f49476e03d6efa76b3512/docs/rootless.md

        How to run the dockerd daemon as a non-root user.

    #
    # Podman and Buildah for Docker users
    # https://developers.redhat.com/blog/2019/02/21/podman-and-buildah-for-docker-users/

    #
    # How does rootless Podman work?
    # https://opensource.com/article/19/2/how-does-rootless-podman-work

    #
    # So ... either downgrade our OS to use cgroup v1, or use podman rather than docker.
    # Podman sounds interesting because it can ron rootless.
    #

    #
    # Note the Kubernetes family won't work with cgroup v1 either ..
    # Work on that one later.
    #

    #
    # On a different topic ..
    # Lightweight Kubernetes for IoT (runs on a Pi)
    # https://k3s.io/




