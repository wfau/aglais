#
# <meta:header>
#   <meta:licence>
#     Copyright (c) 2020, ROE (http://www.roe.ac.uk/)
#
#     This information is free software: you can redistribute it and/or modify
#     it under the terms of the GNU General Public License as published by
#     the Free Software Foundation, either version 3 of the License, or
#     (at your option) any later version.
#
#     This information is distributed in the hope that it will be useful,
#     but WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#     GNU General Public License for more details.
#
#     You should have received a copy of the GNU General Public License
#     along with this program.  If not, see <http://www.gnu.org/licenses/>.
#   </meta:licence>
# </meta:header>
#
#

    #
    # Firefox in a container, connected to a remote network.
    # Everything goes via the remote network, as if the browser was running on the remote host.
    # Ideal for following the links between ResourceManager and NodeManager in Hadoop.
    # Not tried it with Zeppelin yet.
    #


# -----------------------------------------------------
# Launch FireFox in a container.
#[user@desktop]

    mkdir /tmp/frog

    podman run \
        --detach \
        --name firefox \
        --publish '5800:5800' \
        --volume /tmp/frog:/config:rw,z \
        --env "SSH_AUTH_SOCK=/mnt/ssh_auth_sock" \
        --volume "${SSH_AUTH_SOCK}:/mnt/ssh_auth_sock:rw,z" \
        --shm-size 2g \
        jlesage/firefox

    >   ....


# -----------------------------------------------------
# Connect our main firefox to the containerised one.
#[user@desktop]

    firefox --new-window 'http://localhost:5800/' &


# -----------------------------------------------------
# Transfer the ssh config from our Ansible client..
#[user@desktop]

    podman cp \
        'ansibler:/root/.ssh/ansible-config' \
        '/tmp/ansible-config'

    podman cp \
        '/tmp/ansible-config' \
        'firefox:/root/.ssh/config'


# -----------------------------------------------------
# Connect another terminal to the container.
#[user@desktop]

    podman exec -it $(
        podman ps --filter 'name=firefox' --format "{{.ID}}"
        ) /bin/sh

    >   ....


# -----------------------------------------------------
# Install the OpenSSh client.
#[root@firefox]

    add-pkg openssh-client


    >   fetch http://dl-cdn.alpinelinux.org/alpine/v3.10/main/x86_64/APKINDEX.tar.gz
    >   fetch http://dl-cdn.alpinelinux.org/alpine/v3.10/community/x86_64/APKINDEX.tar.gz
    >   (1/3) Installing openssh-keygen (8.1_p1-r0)
    >   (2/3) Installing libedit (20190324.3.1-r0)
    >   (3/3) Installing openssh-client (8.1_p1-r0)
    >   Executing busybox-1.31.1-r13.trigger
    >   OK: 401 MiB in 161 packages


# -----------------------------------------------------
# Try ssh into our gateway node.
#[root@firefox]

    ssh gateway \
        '
        date
        hostname
        '

    >   Wed 15 Apr 2020 04:21:52 PM UTC
    >   aglais-20200415-gateway.novalocal
    

# -----------------------------------------------------
# Set up a SOCKS proxy.
# https://www.digitalocean.com/community/tutorials/how-to-route-web-traffic-securely-without-a-vpn-using-a-socks-tunnel
#[root@firefox]

    ssh -D 5544 -t gateway top


# -----------------------------------------------------
# Tell firefox to use the SOCKS proxy.
# https://www.digitalocean.com/community/tutorials/how-to-route-web-traffic-securely-without-a-vpn-using-a-socks-tunnel
#[firefox-gui]


    [about:preferences]

        ---- ----    
        Network Settings
        Configure how Firefox connects to the internet. [Settings]

        [-] No proxy
        [-] Auto-detect proxy settings for this network
        [-] Use system proxy settings
        [*] Manual proxy configuration
        
             HTTP Proxy [           ] Port [    ]
            HTTPS Proxy [           ] Port [    ]
              FTP Proxy [           ] Port [    ]
             SOCKS Host [ 127.0.0.1 ] Port [5544]
                        [-] SOCKS v4 [*] SOCKS v5

        [-] Automatic proxy configuration URL [ ]

        [-] Do not prompt for authentication if password is saved
        [*] Proxy DNS when using SOCKS v5
        [-] Enable DNS over HTTPS

                    [Cancel] [ OK ]
        ---- ----    


# -----------------------------------------------------
# Navigate to the Yarn status pages.
#[firefox-gui]

    
    [http://master01:8088/]


