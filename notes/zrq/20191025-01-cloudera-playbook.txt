#
# <meta:header>
#   <meta:licence>
#     Copyright (c) 2019, ROE (http://www.roe.ac.uk/)
#
#     This information is free software: you can redistribute it and/or modify
#     it under the terms of the GNU General Public License as published by
#     the Free Software Foundation, either version 3 of the License, or
#     (at your option) any later version.
#
#     This information is distributed in the hope that it will be useful,
#     but WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#     GNU General Public License for more details.
#
#     You should have received a copy of the GNU General Public License
#     along with this program.  If not, see <http://www.gnu.org/licenses/>.
#   </meta:licence>
# </meta:header>
#
#

    #
    # Have a go at deploying the Cloudera playbook
    # https://github.com/cloudera/cloudera-playbook

# -----------------------------------------------------
# Create our OpenStack cloud configuration file.
# https://docs.openstack.org/python-openstackclient/latest/configuration/index.html#clouds-yaml
#[user@desktop]

    # https://docs.openstack.org/python-openstackclient/latest/cli/man/openstack.html#manpage
    # https://docs.openstack.org/python-openstackclient/latest/configuration/index.html#clouds-yaml
    # http://jaormx.github.io/2018/spawning-your-first-instance-with-ansible/

    cat > "${HOME}/cumulus.yaml" << EOF

        clouds:
          cumulus:
            auth:
              auth_url: 'https://cumulus.openstack.hpc.cam.ac.uk:5000/v3'
              application_credential_id: '$(secret 'cumulus.cam.ac.uk.CREDENTIAL_ID')'
              application_credential_secret: '$(secret 'cumulus.cam.ac.uk.CREDENTIAL_SECRET')'
            region_name: 'RegionOne'
            interface: 'public'
            identity_api_version: 3
            auth_type: 'v3applicationcredential'

EOF


# -----------------------------------------------------
# Create a container (running as root).
#[user@desktop]

    source "${HOME}/aglais.settings"

    docker run \
        --rm \
        --tty \
        --interactive \
        --hostname ansible \
        --env SSH_AUTH_SOCK=/tmp/ssh_auth_sock \
        --volume "${SSH_AUTH_SOCK}:/tmp/ssh_auth_sock" \
        --volume "${HOME}/cumulus.yaml:/etc/openstack/clouds.yaml:ro" \
        --volume "${HOME}/.ssh/cumulus.cam.ac.uk.rsa.pub:/tmp/cumulus.cam.ac.uk.rsa.pub:ro" \
        --volume "${AGLAIS_CODE}/experiments/zrq/ansible:/var/local/aglais/ansible:ro" \
        atolmis/ansible-client:latest \
        bash

--START--
--END--


# -----------------------------------------------------
# Create our gateway node.
# https://docs.ansible.com/ansible/latest/modules/os_server_module.html
#[root@ansible]

    ansible-playbook \
        --inventory "/var/local/aglais/ansible/hosts.yml" \
        "/var/local/aglais/ansible/01-create-gateway-node.yml"

--START--
....
TASK [debug] ********************************************************************************************************************************************************************************************************************************
ok: [localhost] => {
    "floating.floating_ip.floating_ip_address": "128.232.224.73"
}
....
--END--


# -----------------------------------------------------
# Create our worker nodes.
# https://docs.ansible.com/ansible/latest/modules/os_server_module.html
#[root@ansible]

    ansible-playbook \
        --inventory "/var/local/aglais/ansible/hosts.yml" \
        "/var/local/aglais/ansible/02-create-worker-nodes-(ungrouped).yml"

--START--
TASK [Create the worker nodes] **************************************************************************************************************************************************************************************************************
changed: [localhost] => (item=aglaiswork01)
changed: [localhost] => (item=aglaiswork02)
changed: [localhost] => (item=aglaiswork03)
--END--



TODO
Create our SSH config
Create our /etc/hosts files
....







