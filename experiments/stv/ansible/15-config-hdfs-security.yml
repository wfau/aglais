#
# <meta:header>
#   <meta:licence>
#     Copyright (c) 2020, ROE (http://www.roe.ac.uk/)
#
#     This information is free software: you can redistribute it and/or modify
#     it under the terms of the GNU General Public License as published by
#     the Free Software Foundation, either version 3 of the License, or
#     (at your option) any later version.
#
#     This information is distributed in the hope that it will be useful,
#     but WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#     GNU General Public License for more details.
#
#     You should have received a copy of the GNU General Public License
#     along with this program.  If not, see <http://www.gnu.org/licenses/>.
#   </meta:licence>
# </meta:header>
#
#


- name: "Create security rules for HDFS"
  gather_facts: false
  hosts: localhost
  vars_files:
    - /tmp/ansible-vars.yml
  tasks:

    - name: "Allow master->master:22"
      os_security_group_rule:
        cloud: "{{ cloudname }}"
        state: present
        security_group: "{{ security['masters'] }}"
        direction: 'ingress'
        protocol:  'tcp'
        port_range_min: 22
        port_range_max: 22
        remote_group: "{{ security['masters'] }}"

    - name: "Allow master->worker:22"
      os_security_group_rule:
        cloud: "{{ cloudname }}"
        state: present
        security_group: "{{ security['workers'] }}"
        direction: 'ingress'
        protocol:  'tcp'
        port_range_min: 22
        port_range_max: 22
        remote_group: "{{ security['masters'] }}"

    - name: "Allow zeppelin->worker:22"
      os_security_group_rule:
        cloud: "{{ cloudname }}"
        state: present
        security_group: "{{ security['workers'] }}"
        direction: 'ingress'
        protocol:  'tcp'
        port_range_min: 22
        port_range_max: 22
        remote_group: "{{ security['zeppelin'] }}"

    - name: "Allow zeppelin->master:22"
      os_security_group_rule:
        cloud: "{{ cloudname }}"
        state: present
        security_group: "{{ security['masters'] }}"
        direction: 'ingress'
        protocol:  'tcp'
        port_range_min: 22
        port_range_max: 22
        remote_group: "{{ security['zeppelin'] }}"


    - name: "Allow worker->master:9000"
      os_security_group_rule:
        cloud: "{{ cloudname }}"
        state: present
        security_group: "{{ security['masters'] }}"
        direction: 'ingress'
        protocol:  'tcp'
        port_range_min: 9000
        port_range_max: 9000
        remote_group: "{{ security['workers'] }}"

    - name: "Allow master->master:9000"
      os_security_group_rule:
        cloud: "{{ cloudname }}"
        state: present
        security_group: "{{ security['masters'] }}"
        direction: 'ingress'
        protocol:  'tcp'
        port_range_min: 9000
        port_range_max: 9000
        remote_group: "{{ security['masters'] }}"

    - name: "Allow zeppelin->master:9000"
      os_security_group_rule:
        cloud: "{{ cloudname }}"
        state: present
        security_group: "{{ security['masters'] }}"
        direction: 'ingress'
        protocol:  'tcp'
        port_range_min: 9000
        port_range_max: 9000
        remote_group: "{{ security['zeppelin'] }}"

    - name: "Allow zeppelin->master:8032"
      os_security_group_rule:
        cloud: "{{ cloudname }}"
        state: present
        security_group: "{{ security['masters'] }}"
        direction: 'ingress'
        protocol:  'tcp'
        port_range_min: 8032
        port_range_max: 8032
        remote_group: "{{ security['zeppelin'] }}"


    - name: "Allow master->worker:9866-9867"
      os_security_group_rule:
        cloud: "{{ cloudname }}"
        state: present
        security_group: "{{ security['workers'] }}"
        direction: 'ingress'
        protocol:  'tcp'
        port_range_min: 9866
        port_range_max: 9867
        remote_group: "{{ security['masters'] }}"

    - name: "Allow worker->worker:9866-9867"
      os_security_group_rule:
        cloud: "{{ cloudname }}"
        state: present
        security_group: "{{ security['workers'] }}"
        direction: 'ingress'
        protocol:  'tcp'
        port_range_min: 9866
        port_range_max: 9867
        remote_group: "{{ security['workers'] }}"

    - name: "Allow zeppelin->worker:9866-9867"
      os_security_group_rule:
        cloud: "{{ cloudname }}"
        state: present
        security_group: "{{ security['workers'] }}"
        direction: 'ingress'
        protocol:  'tcp'
        port_range_min: 9866
        port_range_max: 9867
        remote_group: "{{ security['zeppelin'] }}"

#
# https://hadoop.apache.org/docs/current/hadoop-project-dist/hadoop-hdfs/hdfs-default.xml
#   dfs.datanode.http.address	            9864
#   dfs.datanode.https.address	            9865
#   dfs.datanode.address	                9866
#   dfs.datanode.ipc.address	            9867
#   dfs.namenode.secondary.http-address	    9868
#   dfs.namenode.secondary.https-address	9869
#   dfs.datanode.http.internal-proxy.port	
#
#   dfs.namenode.http-address	            9870
#   dfs.namenode.https-address	            9871
#
#   dfs.namenode.backup.address	           50100
#   dfs.namenode.backup.http-address	   50105
#
#   nfs.server.port	                        2049	
#   nfs.mountd.port	                        4242
#
#   dfs.journalnode.rpc-address	            8485
#   dfs.journalnode.http-address	        8480
#   dfs.journalnode.https-address	        8481
#
#   dfs.ha.zkfc.port	                    8019
#

# Cloudera services use different ports.
# https://docs.cloudera.com/HDPDocuments/HDP3/HDP-3.1.0/administration/content/hdfs-ports.html
#   dfs.http.address                               50070 M
#   dfs.https.address                              50470 M
#   fs.defaultFS                               8020/9000 M
#   dfs.datanode.http.address                      50075 S
#   dfs.datanode.https.address                     50475 S
#   dfs.datanode.address                           50010 S
#   dfs.datanode.address                            1019 S
#   dfs.datanode.ipc.address                       50020 S
#   dfs.datanode.http.address                       1022 S
#   dfs.secondary.http.address                     50090 M2
#   dfs.ha.zkfc.port                                8019 
#



