#
# <meta:header>
#   <meta:licence>
#     Copyright (c) 2019, ROE (http://www.roe.ac.uk/)
#
#     This information is free software: you can redistribute it and/or modify
#     it under the terms of the GNU General Public License as published by
#     the Free Software Foundation, either version 3 of the License, or
#     (at your option) any later version.
#
#     This information is distributed in the hope that it will be useful,
#     but WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#     GNU General Public License for more details.
#
#     You should have received a copy of the GNU General Public License
#     along with this program.  If not, see <http://www.gnu.org/licenses/>.
#   </meta:licence>
# </meta:header>
#
#
# How to get user's home directory,.
# https://stackoverflow.com/a/48892377

# Add the ssh keys to allow no password login from masters to workers.
# Used by the /opt/hadoop/sbin/start-xyz shell scripts.
# https://hadoop.apache.org/docs/r3.2.1/hadoop-project-dist/hadoop-common/ClusterSetup.html#Slaves_File

---
- name: "Create a SSH key pair for each master node"
  hosts: masters
  gather_facts: true
  vars:
    username: "{{hostvars[inventory_hostname].login}}"
    keyname:  "{{inventory_hostname}}-{{username}}-rsa"

  tasks:

    - name: "Check user account for [{{username}}]"
      user:
        name: "{{username}}"
        state: present
      register: userinfo

    - name: "Check SSH directory for [{{username}}]"
      file:
        path: "{{ userinfo.home }}/.ssh"
        mode: 'u=rwx,g=rx,o=rx'
        state: directory

    - name: "Generate our [{{keyname}}] SSH keypair"
      openssh_keypair:
        force: true
        path: "{{ userinfo.home }}/.ssh/{{keyname}}"
        comment: "Hadoop key for {{username}}@{{inventory_hostname}}"
      register:
        keydata

    - name: "Save the [{{keyname}}] public key"
      set_fact:
        publickey: "{{keydata.public_key}}"

    - name: "Generate SSH config for [{{username}}]"
      become: true
      template:
        src:  "templates/ssh-master.j2"
        dest: "{{ userinfo.home }}/.ssh/config"
        mode:  'u=rw,g=,o='
        owner: "{{ userinfo.name }}"
        group: "{{ userinfo.name }}"

- name: "Install the public keys on all our nodes"
  hosts: masters:workers
  gather_facts: true
  vars:
    username: "{{hostvars[inventory_hostname].login}}"

  tasks:

    - name: "Check user account for [{{username}}]"
      user:
        name: "{{username}}"
        state: present
      register: userinfo

    - name: "Check SSH directory for [{{username}}]"
      file:
        path: "{{ userinfo.home }}/.ssh"
        mode: 'u=rwx,g=rx,o=rx'
        state: directory

    - name: "Install the public key"
      authorized_key:
        user: "{{username}}"
        state: present
        key:  "{{ hostvars[item]['publickey'] }}"
        comment: "Public key for {{username}}@{{item}}"
      loop:
        "{{ groups['masters'] }}"


- name: "Configure Hadoop [workers] on master nodes"
  hosts: masters:zeppelin
  gather_facts: false
  vars:
    hdname: "hadoop-3.1.3"
    hdbase: "/opt"
    hdhome: "/opt/hadoop"
    hddata: "/var/local/hadoop"
    hdhost: "{{groups['masters'][0]}}"
    hduser: "{{hostvars[inventory_hostname].login}}"

  tasks:

    - name: "Create [/etc/hadoop/workers]"
      become: true
      template:
        src:  "templates/hadoop-workers.j2"
        dest: "{{hdhome}}/etc/hadoop/workers"


