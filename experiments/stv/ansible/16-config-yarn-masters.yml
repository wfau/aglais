#
# <meta:header>
#   <meta:licence>
#     Copyright (c) 2020, ROE (http://www.roe.ac.uk/)
#
#     This information is free software: you can redistribute it and/or modify
#     it under the terms of the GNU General Public License as published by
#     the Free Software Foundation, either version 3 of the License, or
#     (at your option) any later version.
#
#     This information is distributed in the hope that it will be useful,
#     but WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#     GNU General Public License for more details.
#
#     You should have received a copy of the GNU General Public License
#     along with this program.  If not, see <http://www.gnu.org/licenses/>.
#   </meta:licence>
# </meta:header>
#
#

- name: "Configure YARN masters"
  hosts: master01:zeppelin
  gather_facts: false
  vars:
    hdname: "hadoop-3.1.3"
    hdbase: "/opt"
    hdhome: "/opt/hadoop"
    hddata: "/var/local/hadoop"
    hdhost: "master01"
    hduser: "{{hostvars[inventory_hostname].login}}"

  tasks:

    #
    # Documentation
    # https://hadoop.apache.org/docs/r3.2.1/hadoop-project-dist/hadoop-common/ClusterSetup.html
    #
    # ResourceManager is on the master node, and NodeManager is on worker nodes.
    #
    # Comments and defaults from yarn-default.xml
    # [fedora@master01] vi /opt/hadoop/share/doc/hadoop/hadoop-yarn/hadoop-yarn-common/yarn-default.xml
    #

    - name: "Configure [{{hdhome}}/etc/hadoop/yarn-site.xml]"
      become: true
      blockinfile:
        path:   "{{hdhome}}/etc/hadoop/yarn-site.xml"
        marker: "<!-- {mark} Ansible managed configuration for ResourceManager -->"
        insertbefore: "</configuration>"
        block: |
            <!--+
                | Enable ACLs.
                | Defaults to false.
                +-->
            <property>
                <name>yarn.acl.enable</name>
                <value>false</value>
            </property>

            <!--+
                | [host]
                | Single hostname that can be set in place of setting all yarn.resourcemanager*address resources.
                | Results in default ports for ResourceManager components. 
                +-->
            <property>
                <name>yarn.resourcemanager.hostname</name>
                <value>{{hdhost}}</value>
            </property>

            <!--+
                | [host:port]
                | If set, overrides the hostname set in yarn.resourcemanager.hostname. 
            <property>
                <name>yarn.resourcemanager.address</name>
                <value>{{hdhost}}:8032</value>
            </property>
                +-->

            <!--+
                | [host:port]
                | If set, overrides the hostname set in yarn.resourcemanager.hostname. 
            <property>
                <name>yarn.resourcemanager.admin.address</name>
                <value>{{hdhost}}:8033</value>
            </property>
                +-->

            <!--+
                | [host:port]
                | If set, overrides the hostname set in yarn.resourcemanager.hostname. 
            <property>
                <name>yarn.resourcemanager.resource-tracker.address</name>
                <value>{{hdhost}}:8031</value>
            </property>
                +-->

            <!--+
                | [host:port]
                | If set, overrides the hostname set in yarn.resourcemanager.hostname. 
            <property>
                <name>yarn.resourcemanager.scheduler.address</name>
                <value>{{hdhost}}:8030</value>
            </property>
                +-->

            <!--+
                | [host:port]
                | If set, overrides the hostname set in yarn.resourcemanager.hostname. 
            <property>
                <name>yarn.resourcemanager.webapp.address</name>
                <value>{{hdhost}}:8088</value>
            </property>
                +-->

            <!--+
                | The class to use as the resource scheduler.
                | CapacityScheduler (recommended), FairScheduler (also recommended), or FifoScheduler.
                | Use a fully qualified class name, e.g.
                | org.apache.hadoop.yarn.server.resourcemanager.scheduler.fair.FairScheduler
                | org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.CapacityScheduler	
            <property>
                <name>yarn.resourcemanager.scheduler.class</name>
                <value>org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.CapacityScheduler</value>
            </property>
                +-->

            <property>
                <name>yarn.nodemanager.resource.memory-mb</name>
                <value>20000</value>
            </property>


            <!--+
                | Maximum limit of memory to allocate to each container request at the Resource Manager.
                +-->
            <property>
                <name>yarn.scheduler.maximum-allocation-mb</name>
                <value>20000</value>
            </property>
                

            <!--+
                | Minimum limit of memory to allocate to each container request at the Resource Manager.
                +-->
            <property>
                <name>yarn.scheduler.minimum-allocation-mb</name>
                <value>2000</value>
            </property>
                

    #
    # CapacityScheduler config.
    # https://hadoop.apache.org/docs/current/hadoop-yarn/hadoop-yarn-site/CapacityScheduler.html
    #

    - name: "Configure [{{hdhome}}/etc/hadoop/capacity-scheduler.xml]"
      become: true
      blockinfile:
        path:   "{{hdhome}}/etc/hadoop/capacity-scheduler.xml"
        marker: "<!-- {mark} Ansible managed configuration for CapacityScheduler -->"
        insertbefore: "</configuration>"
        block: |
            <!--+
                | The multiple of the queue capacity which can be configured to allow a single user to acquire more resources.
                | By default this is set to 1 which ensures that a single user can never take more than the queueâ€™s configured capacity irrespective of how idle the cluster is.
                | Value is specified as a float. 
                | default: 1
                +-->
            <property>
                <name>yarn.scheduler.capacity.root.support.user-limit-factor</name>
                <value>2</value>
            </property>

    #
    # Yarn environment variables.
    - name: "Configure [{{hdhome}}/etc/hadoop/yarn-env.sh]"
      become: true
      blockinfile:
        path:   "{{hdhome}}/etc/hadoop/yarn-env.sh"
        marker: "# {mark} Ansible managed edit"
        insertafter: "# export YARN_RESOURCEMANAGER_OPTS="
        block: |
            # Fix for Java 9+ modules and javax.activation
            # https://issues.apache.org/jira/browse/HADOOP-14978?focusedCommentId=16619981#comment-16619981
            # User accounts used by the start-xyz.sh scripts.
            # export YARN_RESOURCEMANAGER_OPTS="--add-modules javax.activation"
            # https://stackoverflow.com/a/48170409
            export YARN_RESOURCEMANAGER_USER=fedora
            export YARN_NODEMANAGER_USER=fedora







