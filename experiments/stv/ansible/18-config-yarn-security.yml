#
# <meta:header>
#   <meta:licence>
#     Copyright (c) 2020, ROE (http://www.roe.ac.uk/)
#
#     This information is free software: you can redistribute it and/or modify
#     it under the terms of the GNU General Public License as published by
#     the Free Software Foundation, either version 3 of the License, or
#     (at your option) any later version.
#
#     This information is distributed in the hope that it will be useful,
#     but WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#     GNU General Public License for more details.
#
#     You should have received a copy of the GNU General Public License
#     along with this program.  If not, see <http://www.gnu.org/licenses/>.
#   </meta:licence>
# </meta:header>
#
#


- name: "Create security rules for YARN"
  gather_facts: false
  hosts: localhost
  vars_files:
    - /tmp/ansible-vars.yml
  tasks:

    # ResourceManager on master.
    #   yarn.resourcemanager.scheduler.address	        8030
    #   yarn.resourcemanager.resource-tracker.address	8031 M-w
    #   yarn.resourcemanager.address	                8032 M-c
    #   yarn.resourcemanager.admin.address	            8033 M-c
    - name: "Allow ResourceManager 8030-8033 from any"
      os_security_group_rule:
        cloud: "{{ cloudname }}"
        state: present
        security_group: "{{ security['masters'] }}"
        direction: 'ingress'
        protocol:  'tcp'
        port_range_min: 8030
        port_range_max: 8033

    # ResourceManager on master.
    #   yarn.resourcemanager.webapp.address	            8088 M
    - name: "Allow ResourceManager 8088 from any"
      os_security_group_rule:
        cloud: "{{ cloudname }}"
        state: present
        security_group: "{{ security['masters'] }}"
        direction: 'ingress'
        protocol:  'tcp'
        port_range_min: 8088
        port_range_max: 8088

    # ResourceManager on master.
    #   yarn.resourcemanager.webapp.https.address	    8090 M
    - name: "Allow ResourceManager 8090 from any"
      os_security_group_rule:
        cloud: "{{ cloudname }}"
        state: present
        security_group: "{{ security['masters'] }}"
        direction: 'ingress'
        protocol:  'tcp'
        port_range_min: 8090
        port_range_max: 8090

    # ResourceManager on master.
    #   yarn.resourcemanager.admin.address              8141 M
    - name: "Allow ResourceManager 8141 from any"
      os_security_group_rule:
        cloud: "{{ cloudname }}"
        state: present
        security_group: "{{ security['masters'] }}"
        direction: 'ingress'
        protocol:  'tcp'
        port_range_min: 8141
        port_range_max: 8141


    # NodeManager on workers.
    #   yarn.nodemanager.address	                    45454 S-m
    - name: "Allow NodeManager 45454 from any"
      os_security_group_rule:
        cloud: "{{ cloudname }}"
        state: present
        security_group: "{{ security['workers'] }}"
        direction: 'ingress'
        protocol:  'tcp'
        port_range_min: 45454
        port_range_max: 45454

    # NodeManager on workers.
    #   yarn.nodemanager.localizer.address	            8040 S-m
    - name: "Allow NodeManager 8040 from any"
      os_security_group_rule:
        cloud: "{{ cloudname }}"
        state: present
        security_group: "{{ security['workers'] }}"
        direction: 'ingress'
        protocol:  'tcp'
        port_range_min: 8040
        port_range_max: 8040


    # NodeManager on workers.
    #   yarn.nodemanager.webapp.address	                8042 S-c
    - name: "Allow NodeManager 8042 from any"
      os_security_group_rule:
        cloud: "{{ cloudname }}"
        state: present
        security_group: "{{ security['workers'] }}"
        direction: 'ingress'
        protocol:  'tcp'
        port_range_min: 8042
        port_range_max: 8042

    # NodeManager on workers.
    #   yarn.nodemanager.webapp.https.address	        8044 S-c
    - name: "Allow NodeManager 8044 from any"
      os_security_group_rule:
        cloud: "{{ cloudname }}"
        state: present
        security_group: "{{ security['workers'] }}"
        direction: 'ingress'
        protocol:  'tcp'
        port_range_min: 8044
        port_range_max: 8044

    # NodeManager on workers.
    #   yarn.nodemanager.collector-service.address	    8048 S
    - name: "Allow NodeManager 8048 from any"
      os_security_group_rule:
        cloud: "{{ cloudname }}"
        state: present
        security_group: "{{ security['workers'] }}"
        direction: 'ingress'
        protocol:  'tcp'
        port_range_min: 8048
        port_range_max: 8048


#
# https://www.stefaanlippens.net/hadoop-3-default-ports.html
#
# https://hadoop.apache.org/docs/current/hadoop-yarn/hadoop-yarn-common/yarn-default.xml
# https://mapr.com/docs/61/ReferenceGuide/yarn-site.xml.html
#
# https://blog.cloudera.com/apache-hadoop-yarn-resourcemanager/
# https://blog.cloudera.com/resource-localization-in-yarn-deep-dive/
# https://docs.cloudera.com/HDPDocuments/HDP3/HDP-3.1.5/data-operating-system/content/collect_application_data_with_the_timeline_server.html
#
# https://kontext.tech/column/hadoop/265/default-ports-used-by-hadoop-services-hdfs-mapreduce-yarn
#
#   yarn.resourcemanager.scheduler.address	        8030
#   yarn.resourcemanager.resource-tracker.address	8031 M-w
#   yarn.resourcemanager.address	                8032 M-c
#   yarn.resourcemanager.admin.address	            8033 M-c
#
#   yarn.resourcemanager.webapp.address	            8088 M
#   yarn.resourcemanager.webapp.https.address	    8090 M
#
#   yarn.resourcemanager.admin.address              8141 M
#
#   yarn.nodemanager.address	                       0 S-m
#   yarn.nodemanager.localizer.address	            8040 S-m
#   yarn.nodemanager.webapp.address	                8042 S-c
#   yarn.nodemanager.webapp.https.address	        8044 S-c
#   yarn.nodemanager.collector-service.address	    8048 S
#
#   yarn.web-proxy.address	
#
#   yarn.timeline-service.address	               10200 M-c
#
#   yarn.timeline-service.webapp.address	        8188 M-c
#   yarn.timeline-service.webapp.https.address	    8190 M-c
#
#   yarn.sharedcache.client-server.address	        8045
#   yarn.sharedcache.admin.address	                8047
#   yarn.sharedcache.uploader.server.address	    8046
#
#   yarn.sharedcache.webapp.address	                8788
#
#   yarn.nodemanager.amrmproxy.address	            8049
#
#   yarn.router.webapp.address	                    8089
#   yarn.router.webapp.https.address	            8091
#
#   yarn.timeline-service.reader.webapp.address	
#   yarn.timeline-service.reader.webapp.https.address	
#

# Cloudera services use different ports.
# https://docs.cloudera.com/HDPDocuments/HDP3/HDP-3.1.0/administration/content/yarn-ports.html
#   yarn.resourcemanager.webapp.address	            8088 M
#   yarn.resourcemanager.webapp.https.address	    8090 M
#   yarn.resourcemanager.address                    8050 M
#   yarn.resourcemanager.resource-tracker.address   8025 M
#   yarn.resourcemanager.scheduler.address	        8030 M
#   yarn.resourcemanager.admin.address              8141 M
#
#   yarn.nodemanager.address                       45454 S
#   yarn.nodemanager.webapp.address	                8042 M
#
#   yarn.timeline-service.address	               10200 M
#   yarn.timeline-service.webapp.address	        8188 M
#   yarn.timeline-service.webapp.https.address	    8190 M
#
#   yarn.log.server.url                            19888 M
#

# https://docs.cloudera.com/HDPDocuments/HDP3/HDP-3.1.0/administration/content/mapreduce-ports.html
# https://mapr.com/docs/61/ReferenceGuide/mapred-site.xml.html
#   mapreduce.jobhistory.address                   10020
#   mapreduce.jobhistory.webapp.address            19888
#   mapreduce.jobhistory.webapp.https.address      19890
#   mapreduce.shuffle.port                         13562





