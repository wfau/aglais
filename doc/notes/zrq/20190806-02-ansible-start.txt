#
# <meta:header>
#   <meta:licence>
#     Copyright (c) 2019, ROE (http://www.roe.ac.uk/)
#
#     This information is free software: you can redistribute it and/or modify
#     it under the terms of the GNU General Public License as published by
#     the Free Software Foundation, either version 3 of the License, or
#     (at your option) any later version.
#
#     This information is distributed in the hope that it will be useful,
#     but WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#     GNU General Public License for more details.
#
#     You should have received a copy of the GNU General Public License
#     along with this program.  If not, see <http://www.gnu.org/licenses/>.
#   </meta:licence>
# </meta:header>
#
#

# -----------------------------------------------------
# Configure our OpenStack settings.
# https://docs.openstack.org/keystone/queens/user/application_credentials.html
# https://cumulus.openstack.hpc.cam.ac.uk/identity/application_credentials/
#[user@desktop]

        cat > "${HOME}/cumulus.settings" << EOF

export OS_AUTH_TYPE=v3applicationcredential
export OS_AUTH_URL=https://cumulus.openstack.hpc.cam.ac.uk:5000/v3
export OS_IDENTITY_API_VERSION=3
export OS_REGION_NAME=RegionOne
export OS_INTERFACE=public
export OS_APPLICATION_CREDENTIAL_ID=$(secret 'cumulus.cam.ac.uk.CREDENTIAL_ID')
export OS_APPLICATION_CREDENTIAL_SECRET=$(secret 'cumulus.cam.ac.uk.CREDENTIAL_SECRET')

EOF

# -----------------------------------------------------
# Build our Docker images.
#[user@desktop]

    buildtag=$(date +'%Y.%m.%d')

    source "${HOME}/aglais.settings"

    pushd  "${AGLAIS_CODE}"
        pushd src/docker

            export buildtag
            docker-compose \
                --file images.yml \
                build

        popd
    popd

--START--
....
....
--END--

# -----------------------------------------------------
# Create a container using our own uid.
#[user@desktop]

    docker run \
        --rm \
        --tty \
        --user "$(id -u)" \
        --interactive \
        --hostname ansible \
        --env SSH_AUTH_SOCK=/tmp/ssh_auth_sock \
        --volume "${SSH_AUTH_SOCK}:/tmp/ssh_auth_sock" \
        --volume "${HOME}/cumulus.settings:/etc/aglais/cumulus.settings" \
        --volume "${HOME}/.ssh/cumulus.cam.ac.uk.rsa.pub:/tmp/cumulus.cam.ac.uk.rsa.pub" \
        --volume "${AGLAIS_CODE}/src/ansible:/var/local/aglais/ansible" \
        aglais/ansible-client:${buildtag:?} \
        bash


--START--
....
--END--


# -----------------------------------------------------
# Load our OpenStack settings.
#[user@ansible]

    source '/etc/aglais/cumulus.settings'


# -----------------------------------------------------
# Test our first playbook.
#[user@ansible]

    ANSIBLE_CODE=/var/local/aglais/ansible

    ansible-playbook "${ANSIBLE_CODE}/hello-world.yml"

--START--
Unhandled error:
 Traceback (most recent call last):
  File "/usr/lib/python3.7/site-packages/ansible/utils/path.py", line 77, in makedirs_safe
    os.makedirs(b_rpath, mode)
  File "/usr/lib64/python3.7/os.py", line 211, in makedirs
    makedirs(head, exist_ok=exist_ok)
  File "/usr/lib64/python3.7/os.py", line 221, in makedirs
    mkdir(name, mode)
PermissionError: [Errno 13] Permission denied: b'/.ansible'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/lib/python3.7/site-packages/ansible/config/manager.py", line 523, in update_config_data
    value, origin = self.get_config_value_and_origin(config, configfile)
  File "/usr/lib/python3.7/site-packages/ansible/config/manager.py", line 467, in get_config_value_and_origin
    value = ensure_type(value, defs[config].get('type'), origin=origin)
  File "/usr/lib/python3.7/site-packages/ansible/config/manager.py", line 110, in ensure_type
    makedirs_safe(value, 0o700)
  File "/usr/lib/python3.7/site-packages/ansible/utils/path.py", line 82, in makedirs_safe
    raise AnsibleError("Unable to create local directories(%s): %s" % (to_native(rpath), to_native(e)))
ansible.errors.AnsibleError: Unable to create local directories(/.ansible/tmp): [Errno 13] Permission denied: b'/.ansible'
--END--

    # Ansible needs a user's home directory, and barfs if it isn't there.


# -----------------------------------------------------
# Create a container running as root.
#[user@desktop]

    docker run \
        --rm \
        --tty \
        --interactive \
        --hostname ansible \
        --env SSH_AUTH_SOCK=/tmp/ssh_auth_sock \
        --volume "${SSH_AUTH_SOCK}:/tmp/ssh_auth_sock" \
        --volume "${HOME}/cumulus.settings:/etc/aglais/cumulus.settings" \
        --volume "${HOME}/.ssh/cumulus.cam.ac.uk.rsa.pub:/tmp/cumulus.cam.ac.uk.rsa.pub" \
        --volume "${AGLAIS_CODE}/src/ansible:/var/local/aglais/ansible" \
        aglais/ansible-client:${buildtag:?} \
        bash


--START--
....
--END--


# -----------------------------------------------------
# Load our OpenStack settings.
#[root@ansible]

    source '/etc/aglais/cumulus.settings'


# -----------------------------------------------------
# Create a hello world playbook.
#[root@ansible]


    cat > "/tmp/hello-world.yml" << EOF

- hosts: localhost
  tasks:
    - name: Echo "Hello World"
      command: echo "Hello World"

EOF

# -----------------------------------------------------
# Test our hello world playbook.
#[root@ansible]

    ansible-playbook "/tmp/hello-world.yml"

--START--
[WARNING]: provided hosts list is empty, only localhost is available. Note that the implicit localhost does not match 'all'

PLAY [localhost] *******************************************************************************

TASK [Gathering Facts] *************************************************************************
ok: [localhost]

TASK [Echo "Hello World"] **********************************************************************
changed: [localhost]

PLAY RECAP *************************************************************************************
localhost: ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0
--END--


# -----------------------------------------------------
# Create our clouds YAML file.
# https://docs.openstack.org/python-openstackclient/latest/configuration/index.html#clouds-yaml
#[root@ansible]

    # clouds.yaml is a configuration file that contains everything needed to connect to one or more clouds.
    # It may contain private information and is generally considered private to a user.

cat > ${HOME}/clouds.yaml << EOF

clouds:
  cumulus:
    auth:
      auth_url: ${OS_AUTH_URL}
      auth_type: ${OS_AUTH_TYPE}
      application_credential_id: ${OS_APPLICATION_CREDENTIAL_ID}
      application_credential_secret: ${OS_APPLICATION_CREDENTIAL_SECRET}
    region_name: ${OS_REGION_NAME}
    interface: ${OS_INTERFACE}
    identity_api_version: ${OS_IDENTITY_API_VERSION}

EOF


# -----------------------------------------------------
# Create a playbook to create our OpenStack keypair.
# https://docs.ansible.com/ansible/latest/modules/list_of_cloud_modules.html#openstack
#[root@ansible]

    cat > "/tmp/01-create-keypair.yml" << EOF
---
- name: Deploy a ssh keypair
  hosts: localhost
  tasks:
    - name: create keypair
      os_keypair:
        cloud: cumulus
        state: present
        name: 'cumulus-cam-ac-uk-rsa'
        public_key_file: '/tmp/cumulus.cam.ac.uk.rsa.pub'
        wait: yes

EOF

    ansible-playbook "/tmp/01-create-keypair.yml"

--START--
[WARNING]: provided hosts list is empty, only localhost is available. Note that the implicit localhost does not match 'all'

PLAY [Deploy a ssh keypair] ********************************************************************

TASK [Gathering Facts] *************************************************************************
ok: [localhost]

TASK [create keypair] **************************************************************************
fatal: [localhost]: FAILED! => {"changed": false, "msg": "openstacksdk is required for this module"}

PLAY RECAP *************************************************************************************
localhost: ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0
--END--

    #
    # The OpenStack Ansible module uses the Python OpenStack client.


# -----------------------------------------------------
# Update the ansible-client Dockerfile to extend the openstack-client image.
#[user@desktop]

    source "${HOME}/aglais.settings"

    pushd  "${AGLAIS_CODE}"
        pushd src/docker

            gedit ansible-client/Dockerfile &

            -   FROM aglais/fedora:2019.08.06
            +   FROM aglais/openstack-client:2019.08.06

        popd
    popd


# -----------------------------------------------------
# Build our Docker images.
#[user@desktop]

    buildtag=$(date +'%Y.%m.%d')

    source "${HOME}/aglais.settings"

    pushd  "${AGLAIS_CODE}"
        pushd src/docker

            export buildtag
            docker-compose \
                --file images.yml \
                build

        popd
    popd

--START--
Building fedora
Step 1/9 : FROM fedora@sha256:d39a02a0f13c1df3bbcb0ccea4021c53b8e0bfd87f701a5115e18ec089814e70
....
....
--END--

# -----------------------------------------------------
# Create a container running as root.
#[user@desktop]

    docker run \
        --rm \
        --tty \
        --interactive \
        --hostname ansible \
        --env SSH_AUTH_SOCK=/tmp/ssh_auth_sock \
        --volume "${SSH_AUTH_SOCK}:/tmp/ssh_auth_sock" \
        --volume "${HOME}/cumulus.settings:/etc/aglais/cumulus.settings" \
        --volume "${HOME}/.ssh/cumulus.cam.ac.uk.rsa.pub:/tmp/cumulus.cam.ac.uk.rsa.pub" \
        --volume "${AGLAIS_CODE}/src/ansible:/var/local/aglais/ansible" \
        aglais/ansible-client:${buildtag:?} \
        bash


--START--
....
--END--

# -----------------------------------------------------
# Load our OpenStack settings.
#[root@ansible]

    source '/etc/aglais/cumulus.settings'

# -----------------------------------------------------
# Create our clouds YAML file.
# https://docs.openstack.org/python-openstackclient/latest/configuration/index.html#clouds-yaml
#[root@ansible]

    # clouds.yaml is a configuration file that contains everything needed to connect to one or more clouds.
    # It may contain private information and is generally considered private to a user.

    # Move this outside the container ?
    # Out it in our home directory and mnount as a volume ?

cat > ${HOME}/clouds.yaml << EOF

clouds:
  iris-gaia:
    cloud: cumulus
      auth:
        auth_url: ${OS_AUTH_URL:?}
        auth_type: ${OS_AUTH_TYPE:?}
        application_credential_id: ${OS_APPLICATION_CREDENTIAL_ID:?}
        application_credential_secret: ${OS_APPLICATION_CREDENTIAL_SECRET:?}
      region_name: ${OS_REGION_NAME:?}
      interface: ${OS_INTERFACE:?}
      identity_api_version: ${OS_IDENTITY_API_VERSION:?}
EOF


# -----------------------------------------------------
# Create a playbook to create our OpenStack keypair.
# https://docs.ansible.com/ansible/latest/modules/list_of_cloud_modules.html#openstack
#[root@ansible]

    cat > "/tmp/01-create-keypair.yml" << EOF
---
- name: Deploy a ssh keypair
  hosts: localhost
  tasks:
    - name: create keypair
      os_keypair:
        cloud: cumulus
        state: present
        name: 'cumulus-cam-ac-uk-rsa'
        public_key_file: '/tmp/cumulus.cam.ac.uk.rsa.pub'
        wait: yes

EOF

# -----------------------------------------------------
# Run our playbook ...
#[root@ansible]

    ansible-playbook "/tmp/01-create-keypair.yml"

--START--
PLAY [Deploy a ssh keypair] ********************************************************************

TASK [Gathering Facts] *************************************************************************
ok: [localhost]

TASK [create keypair] **************************************************************************
fatal: [localhost]: FAILED! => {"changed": false, "msg": "Cloud cumulus was not found."}

PLAY RECAP *************************************************************************************
localhost: ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0
--END--


# -----------------------------------------------------
# Move our config file ..
#[root@ansible]

    mkdir "${HOME}/.config"
    mkdir "${HOME}/.config/openstack"

    mv "${HOME}/clouds.yaml" \
       "${HOME}/.config/openstack"


# -----------------------------------------------------
# Run our playbook ...
#[root@ansible]

    ansible-playbook "/tmp/01-create-keypair.yml"

--START--
PLAY [Deploy a ssh keypair] ********************************************************************

TASK [Gathering Facts] *************************************************************************
ok: [localhost]

TASK [create keypair] **************************************************************************
fatal: [localhost]: FAILED! => {
    "changed": false,
    "module_stderr": "/root/.ansible/tmp/ansible-tmp-1565112520.0395522-163113690827807/AnsiballZ_os_keypair.py:18:
        DeprecationWarning: the imp module is deprecated in favour of importlib; see the module's documentation for alternative uses
            import imp
        Traceback (most recent call last):
            ....
            ....
            self.get_mark())
yaml.scanner.ScannerError: mapping values are not allowed here
            in \"/root/.config/openstack/clouds.yaml\", line 5, column 11"


PLAY RECAP *************************************************************************************
localhost: ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0
--END--

# -----------------------------------------------------
# Edit our config file ...
#[root@ansible]

    vi ${HOME}/.config/openstack/clouds.yaml

        clouds:
    -     iris-gaia:
    -       cloud: cumulus
    +     cumulus:
              auth:
                auth_url: https://cumulus.openstack.hpc.cam.ac.uk:5000/v3
                auth_type: v3applicationcredential
                application_credential_id: bcc4d5506b354a2fa4976221c0b6dd4b
                application_credential_secret: ool8Aiyo.thoh1uNg.Toghee0b.Feeth9ov
              region_name: RegionOne
              interface: public
              identity_api_version: 3

# -----------------------------------------------------
# Run our playbook ...
#[root@ansible]

    ansible-playbook "/tmp/01-create-keypair.yml"

--START--
PLAY [Deploy a ssh keypair] ********************************************************************

TASK [Gathering Facts] *************************************************************************
ok: [localhost]

TASK [create keypair] **************************************************************************
fatal: [localhost]: FAILED! => {
    "changed": false,
    "module_stderr": "/root/.ansible/tmp/ansible-tmp-1565113046.9420643-67303553783106/AnsiballZ_os_keypair.py:18:
        DeprecationWarning: the imp module is deprecated in favour of importlib; see the module's documentation for alternative uses
            import imp
        Traceback (most recent call last):
            ....
            ....
        TypeError: __init__() got an unexpected keyword argument 'auth_type'
            ....


PLAY RECAP *************************************************************************************
localhost: ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0
--END--


# -----------------------------------------------------
# Edit our config file ...
#[root@ansible]

    vi ${HOME}/.config/openstack/clouds.yaml

        clouds:
          cumulus:
              auth:
                auth_url: https://cumulus.openstack.hpc.cam.ac.uk:5000/v3
    -           auth_type: v3applicationcredential
                application_credential_id: bcc4d5506b354a2fa4976221c0b6dd4b
                application_credential_secret: ool8Aiyo.thoh1uNg.Toghee0b.Feeth9ov
              region_name: RegionOne
              interface: public
              identity_api_version: 3


# -----------------------------------------------------
# Run our playbook ...
#[root@ansible]

    ansible-playbook "/tmp/01-create-keypair.yml"


--START--
PLAY [Deploy a ssh keypair] ********************************************************************

TASK [Gathering Facts] *************************************************************************
ok: [localhost]

TASK [create keypair] **************************************************************************
fatal: [localhost]: FAILED! => {
    "changed": false,
    "module_stderr": "/root/.ansible/tmp/ansible-tmp-1565113372.787666-174726761465633/AnsiballZ_os_keypair.py:18:
        DeprecationWarning: the imp module is deprecated in favour of importlib; see the module's documentation for alternative uses
            import imp
        Traceback (most recent call last):
            ....
            ....
        TypeError: __init__() got an unexpected keyword argument 'application_credential_id'
            ....

PLAY RECAP *************************************************************************************
localhost: ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0
--END--


# -----------------------------------------------------
# Edit our config file ...
#[root@ansible]

    # https://docs.openstack.org/python-openstackclient/latest/cli/man/openstack.html#manpage
    # https://docs.openstack.org/python-openstackclient/latest/configuration/index.html#clouds-yaml
    # http://jaormx.github.io/2018/spawning-your-first-instance-with-ansible/

    vi ${HOME}/.config/openstack/clouds.yaml

        clouds:
          cumulus:
            auth:
              auth_url: "https://cumulus.openstack.hpc.cam.ac.uk:5000/v3"
              application_credential_id: "bcc4d5506b354a2fa4976221c0b6dd4b"
              application_credential_secret: "ool8Aiyo.thoh1uNg.Toghee0b.Feeth9ov"
            region_name: "RegionOne"
            interface: "public"
            identity_api_version: 3
            auth_type: "v3applicationcredential"


# -----------------------------------------------------
# Run our playbook ...
#[root@ansible]

    ansible-playbook "/tmp/01-create-keypair.yml"

--START--
PLAY [Deploy a ssh keypair] ********************************************************************

TASK [Gathering Facts] *************************************************************************
ok: [localhost]

TASK [create keypair] **************************************************************************
changed: [localhost]

PLAY RECAP *************************************************************************************
localhost: ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0
--END--

    #
    # Works !! :-D
    #


# -----------------------------------------------------
# Create a playbook to create a security group
# https://docs.ansible.com/ansible/latest/modules/list_of_cloud_modules.html#openstack
#[root@ansible]

    cat > "/tmp/02-create-security.yml" << EOF

- name: Create a security group
  hosts: localhost
  tasks:
    - name: create security group
      os_security_group:
        cloud: cumulus
        state: present
        name: 'external-SSH'

    - name: create security group rule for SSH
      os_security_group_rule:
        cloud: cumulus
        state: present
        security_group: 'external-SSH'
        direction: 'ingress'
        protocol:  'tcp'
        ethertype: 'IPv4'
        port_range_min: 22
        port_range_max: 22
        remote_ip_prefix: '0.0.0.0/0'

    - name: create security group rule for SSH
      os_security_group_rule:
        cloud: cumulus
        state: present
        security_group: 'external-SSH'
        direction: 'ingress'
        protocol:  'tcp'
        ethertype: 'IPv6'
        port_range_min: 22
        port_range_max: 22
        remote_ip_prefix: '::/0'

    - name: delete generic security group rule
      os_security_group_rule:
        cloud: cumulus
        state: absent
        security_group: 'external-SSH'
        direction: 'egress'
        ethertype: 'IPv4'

    - name: delete generic security group rule
      os_security_group_rule:
        cloud: cumulus
        state: absent
        security_group: 'external-SSH'
        direction: 'egress'
        ethertype: 'IPv6'

EOF

# -----------------------------------------------------
# Run our playbook ...
#[root@ansible]

    ansible-playbook "/tmp/02-create-security.yml"

--START--
PLAY [Create a security group] *****************************************************************

TASK [Gathering Facts] *************************************************************************
ok: [localhost]

TASK [create security group] *******************************************************************
changed: [localhost]

TASK [create security group rule for SSH] ******************************************************
changed: [localhost]

TASK [create security group rule for SSH] ******************************************************
changed: [localhost]

TASK [delete generic security group rule] ******************************************************
changed: [localhost]

TASK [delete generic security group rule] ******************************************************
changed: [localhost]

PLAY RECAP *************************************************************************************
localhost: ok=6    changed=5    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0
--END--






    - name: create instance
      os_server:
        state: present
        cloud: cumulus
        name:  '$(date)'
        image: 'Fedora-30-1.2'
        flavor: 'general.v1.small'
        network: 'cumulus-internal'
        key_name: 'cumulus-cam-ac-uk-rsa'
        timeout: 200
        auto_ip: yes
      register:
        'server-one'














EOF








--START--
--END--

--START--
--END--

--START--
--END--

--START--
--END--

--START--
--END--







---
- name: Create a test environment
  hosts: localhost
  tasks:
    - name: create network
      os_network:
        cloud: mariachicloud
        state: present
        name: test-network
        external: false
        wait: yes

    - name: create subnet
      os_subnet:
        cloud: mariachicloud
        state: present
        network_name: test-network
        name: test-subnet
        cidr: 192.168.1.0/24
        dns_nameservers:
          - 8.8.8.8
        wait: yes

    - name: create a router
      os_router:
        cloud: mariachicloud
        state: present
        name: test-router
        network: test-external-network
        interfaces:
          - test-subnet

    - name: create security group
      os_security_group:
        cloud: mariachicloud
        state: present
        name: test-security-group
        description: Security group for our test instances

    - name: create security group rule for ping
      os_security_group_rule:
        cloud: mariachicloud
        security_group: test-security-group
        protocol: icmp
        remote_ip_prefix: 0.0.0.0/0

    - name: create security group rule for SSH
      os_security_group_rule:
        cloud: mariachicloud
        security_group: test-security-group
        protocol: tcp
        port_range_min: 22
        port_range_max: 22
        remote_ip_prefix: 0.0.0.0/0

    - name: create instance
      os_server:
        state: present
        cloud: mariachicloud
        name: test-instance
        image: CentOS-7-x86_64-GenericCloud
        key_name: mariachi-pub-key
        timeout: 200
        flavor: m1.small
        network: test-network
        auto_ip: yes
        security_groups:
          - test-security-group
      register:
        my_instance

    - name: Get floating IPv4
      debug:
        msg: ""

    - name: Get floating IPv6
      debug:
        msg: ""











